{"version":3,"file":"Upload-20efc7cc.js","sources":["../../../../js/upload/src/Upload.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher, tick, getContext } from \"svelte\";\n\timport type { FileData } from \"@gradio/client\";\n\timport { upload_files, upload, prepare_files } from \"@gradio/client\";\n\timport { _ } from \"svelte-i18n\";\n\n\texport let filetype: string | null = null;\n\texport let dragging = false;\n\texport let boundedheight = true;\n\texport let center = true;\n\texport let flex = true;\n\texport let file_count = \"single\";\n\texport let disable_click = false;\n\texport let root: string;\n\texport let hidden = false;\n\texport let include_sources = false;\n\n\t// Needed for wasm support\n\tconst upload_fn = getContext<typeof upload_files>(\"upload_files\");\n\n\tlet hidden_upload: HTMLInputElement;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction updateDragging(): void {\n\t\tdragging = !dragging;\n\t}\n\n\texport function open_file_upload(): void {\n\t\tif (disable_click) return;\n\t\thidden_upload.value = \"\";\n\t\thidden_upload.click();\n\t}\n\n\tasync function handle_upload(\n\t\tfile_data: FileData[]\n\t): Promise<(FileData | null)[]> {\n\t\tawait tick();\n\t\tconst _file_data = await upload(file_data, root, upload_fn);\n\t\tdispatch(\"load\", file_count === \"single\" ? _file_data?.[0] : _file_data);\n\t\treturn _file_data || [];\n\t}\n\n\texport async function load_files(\n\t\tfiles: File[] | Blob[]\n\t): Promise<(FileData | null)[] | void> {\n\t\tif (!files.length) {\n\t\t\treturn;\n\t\t}\n\t\tlet _files: File[] = files.map((f) => new File([f], f.name));\n\t\tlet file_data = await prepare_files(_files);\n\t\treturn await handle_upload(file_data);\n\t}\n\n\tasync function load_files_from_upload(e: Event): Promise<void> {\n\t\tconst target = e.target as HTMLInputElement;\n\t\tif (!target.files) return;\n\t\tawait load_files(Array.from(target.files));\n\t}\n\n\tfunction is_valid_mimetype(\n\t\tfile_accept: string | null,\n\t\tmime_type: string\n\t): boolean {\n\t\tif (!file_accept) {\n\t\t\treturn true;\n\t\t}\n\t\tif (file_accept === \"*\") {\n\t\t\treturn true;\n\t\t}\n\t\tif (file_accept.endsWith(\"/*\")) {\n\t\t\treturn mime_type.startsWith(file_accept.slice(0, -1));\n\t\t}\n\t\treturn file_accept === mime_type;\n\t}\n\n\tasync function loadFilesFromDrop(e: DragEvent): Promise<void> {\n\t\tdragging = false;\n\t\tif (!e.dataTransfer?.files) return;\n\n\t\tconst files_to_load = Array.from(e.dataTransfer.files).filter((f) => {\n\t\t\tif (filetype?.split(\",\").some((m) => is_valid_mimetype(m, f.type))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tdispatch(\"error\", `Invalid file type only ${filetype} allowed.`);\n\t\t\treturn false;\n\t\t});\n\n\t\tawait load_files(files_to_load);\n\t}\n</script>\n\n<button\n\tclass:hidden\n\tclass:center\n\tclass:boundedheight\n\tclass:flex\n\tstyle:height={include_sources ? \"calc(100% - 40px\" : \"100%\"}\n\ton:drag|preventDefault|stopPropagation\n\ton:dragstart|preventDefault|stopPropagation\n\ton:dragend|preventDefault|stopPropagation\n\ton:dragover|preventDefault|stopPropagation\n\ton:dragenter|preventDefault|stopPropagation\n\ton:dragleave|preventDefault|stopPropagation\n\ton:drop|preventDefault|stopPropagation\n\ton:click={open_file_upload}\n\ton:drop={loadFilesFromDrop}\n\ton:dragenter={updateDragging}\n\ton:dragleave={updateDragging}\n>\n\t<slot />\n\t<input\n\t\ttype=\"file\"\n\t\tbind:this={hidden_upload}\n\t\ton:change={load_files_from_upload}\n\t\taccept={filetype}\n\t\tmultiple={file_count === \"multiple\" || undefined}\n\t\twebkitdirectory={file_count === \"directory\" || undefined}\n\t\tmozdirectory={file_count === \"directory\" || undefined}\n\t/>\n</button>\n\n<style>\n\tbutton {\n\t\tcursor: pointer;\n\t\twidth: var(--size-full);\n\t}\n\n\t.hidden {\n\t\tdisplay: none;\n\t\theight: 0;\n\t\tposition: absolute;\n\t}\n\n\t.center {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\t.flex {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\tinput {\n\t\tdisplay: none;\n\t}\n</style>\n"],"names":[],"mappings":"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"}
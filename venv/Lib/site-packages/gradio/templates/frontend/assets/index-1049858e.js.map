{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAAA,UAeA;GAPEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCRFD,UAeA;GAPEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCRFD,UAeK;GAHJC,QAA2B;GAC3BA,QAA8B;GAC9BA;;;;;;;;;;;;;;;;;;;;ACdD,IAAIC,cAAY,CAACC,eAAQA,iBAAK,EAAS,CAAK,cAAU,UAAS,SAAU,EAAE,CAAC,QAAE,MAAW;AACzF,IAAI,UAAS,IAAK,CAAC,KAAK,CAAE,QAAE,CAAO,UAAiB,SAAC,CAAG,OAAK,CAAG;AAChE,IAAI,YAAY,CAAC,SAAS,OAAO,CAAC,CAAE,WAAU,UAAS,KAAM,CAAE;AAC/D,QAAQ,QAAS,UAAS,KAAC,CAAK,CAAE,KAAE,CAAI,MAAE,CAAI,SAAC,CAAS,CAAC,KAAK,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAE,UAAS,CAAC,EAAE,CAAE;AACnG,QAAQ,QAAS,YAAS,GAAK,CAAE,MAAM,KAAE,EAAI,CAAC,cAAU,MAAS,IAAK,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,SAAO;AACtG,QAAQ,eAAc,YAAU,MAAO,QAAO,YAAe,KAAK,CAAC,GAAG,KAAK,CAAC;AAC5E;AACA;AACA,CAAC,CAAC;AACF;AACA,UAAS,UAAO,OAAW,UAAU,IAAE;AACvC,CAAI,YAAOD,SAAS,CAAC,KAAI,CAAE,YAAQ,CAAK,CAAC,WAAe;AACxD,CAAQ,aAAM,QAAQ,SAAO,gBAAe,UAAa,CAAC;AAC1D,CAAQ,aAAM,OAAS,UAAQ,CAAC,kBAAgB;AAChD,CAAQ;AACR;AACA,CAAC;AACD;AACA,SAAS,aAAU,cAAa;AAChC,IAAI,gBAAM,KAAe,WAAW,CAAC,CAAC,CAAC,CAAC;AACxC,IAAI,IAAI,YAAY,CAAC,cAAa,OAAQ,CAAC;AAC3C,QAAQ,OAAM,KAAM;AACpB,QAAQ,GAAI,KAAM,GAAC,CAAC;AACpB,QAAQ,GAAK,MAAI,CAAC,IAAI,EAAE,CAAC,IAAG,KAAM,YAAO;AACzC,YAAY,QAAM,EAAI,CAAG;AACzB,CAAY,eAAI,IAAI,MAAM;AAC1B,CAAgB;AAChB,CAAS;AACT,QAAQ,GAAK,SAAM,MAAO,IAAI,WAAW,CAAE;AAC3C,YAAY,GAAK,QAAK,EAAG,CAAC,EAAE,CAAC,IAAG;AAChC;AACA,CAAa;AACb,CAAS;AACT,CAAK;AACL,CAAI;AACJ,CAAC;AACD;AACA,SAAS,eAAa,WAAa,UAAU;AAC7C;AACA,IAAI,IAAI,WAAO,eAAmB,CAAQ;AAC1C,gBAAQ,GAAW,GAAG,CAAC;AACvB;AACA,IAAI;AACJ,IAAI,YAAO;AACX,QAAQ,QAAQ;AAChB,QAAQ,UAAQ,aAAe,UAAM;AACrC,CAAQ,uBAAY,aAAe,OAAS;AAC5C,QAAQ,gBAAgB,EAAE,gBAAY,EAAM;AAC5C,CAAQ,sBAAc,CAAE,CAAC,WAAM,UAAW,CAAK,eAAQ;AACvD,QAAQ,eAAe,WAAE,UAAY,cAAU;AAC/C;AACA;AACA,KAAC;AACD,UAAM;AACN,IAAI,YAAM;AACV;AACA;;ACxDA,IAAIA,cAAY,CAACC,eAAQA,iBAAK,EAAS,CAAK,cAAU,UAAS,SAAU,EAAE,CAAC,QAAE,MAAW;AACzF,IAAI,UAAS,IAAK,CAAC,KAAK,CAAE,QAAE,CAAO,UAAiB,SAAC,CAAG,OAAK,CAAG;AAChE,IAAI,YAAY,CAAC,SAAS,OAAO,CAAC,CAAE,WAAU,UAAS,KAAM,CAAE;AAC/D,QAAQ,QAAS,UAAS,KAAC,CAAK,CAAE,KAAE,CAAI,MAAE,CAAI,SAAC,CAAS,CAAC,KAAK,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAE,UAAS,CAAC,EAAE,CAAE;AACnG,QAAQ,QAAS,YAAS,GAAK,CAAE,MAAM,KAAE,EAAI,CAAC,cAAU,MAAS,IAAK,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,SAAO;AACtG,QAAQ,eAAc,YAAU,MAAO,QAAO,YAAe,KAAK,CAAC,GAAG,KAAK,CAAC;AAC5E;AACA;AACA,QAAE;AACF,UAAS;AACT,IAAI,MAAM,CAAE,SAAG;AACf,CAAI,UAAOD,SAAS,SAAO;AAC3B;AACA,CAAQ,cAAM,SAAQ,CAAG,QAAM,SAAW;AAC1C;AACA,CAAQ;AACR,CAAY,iBAAM,aAAe,UAAQ,CAAC,KAAK,QAAO,QAAM,CAAI,IAAI,KAAE,EAAK,IAAK,EAAC,CAAG,OAAK,CAAC,GAAG,IAAG,QAAS,GAAG;AAC5G,YAAY,kBAAM,CAAa,CAAG;AAClC,YAAY,GAAI,gBAAiB;AACjC;AACA,YAAY,MAAM;AAClB,gBAAgB,IAAI,MAAI;AACxB,sBAAoB,IAAO;AAC3B;AACA,CAAgB,+BAAc,EAAI,CAAC,KAAK,KAAK,gBAAkB,gBAAc,CAAC,CAAG,OAAK;AACtF,gBAAgB,gBAAgB,CAAG,UAAK,EAAK;AAC7C,gBAAgB,mBAAiB;AACjC;AACA;AACA,kBAAe;AACf;AACA,CAAS;AACT;AACA;AACA,KAAC;AACD,aAAa,CAAG;AAChB;AACA;;ACrCA;AACA,eAAM,GAAY,CAAC;AACnB,IAAI,kBAAc;AAClB,QAAQ,IAAI,SAAC,CAAS,GAAG,EAAE,CAAC;AAC5B;AACA,QAAQ,IAAI,WAAW,gBAAgB,CAAC;AACxC;AACA;AACA,CAAK;AACL;AACA,IAAI,uBAAsB,CAAE,QAAQ;AACpC,CAAQ,WAAI,IAAC,CAAI,SAAC,CAAS,KAAC,CAAK,CAAC,CAAE;AACpC,CAAY;AACZ,CAAS;AACT,CAAQ,WAAI,OAAC,GAAS,CAAC,KAAK,CAAC,CAAC,SAAI,GAAQ,CAAC,CAAC;AAC5C,QAAQ,IAAI,qBAAoB,MAAO,CAAK;AAC5C,CAAY,mBAAM,oBAAwB;AAC1C,CAAgB,mBAAI,CAAC,mBAAmB,CAAC,KAAK,CAAE;AAChD,CAAgB;AAChB,gBAAc;AACd,CAAY,iBAAK,gBAAiB;AAClC,CAAY;AACZ,CAAS;AACT,CAAQ;AACR,CAAK;AACL,IAAI;AACJ,CAAQ,WAAI,EAAE,IAAC;AACf,CAAQ;AACR,CAAK;AACL;AACA,IAAI,IAAI,MAAM,KAAE,SAAU;AAC1B;AACA,CAAK;AACL;AACA,IAAI,QAAQ;AACZ;AACA,CAAK;AACL;AACA,IAAI,IAAI,EAAC,gBAAc,CAAI,SAAE;AAC7B,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAE;AACvC;AACA,CAAS;AACT,CAAK;AACL;;AC1CA,eAAqB;AACrB,CAAI,cAAW,CAAC;AAChB,CAAQ,YAAK,eAAG;AAChB,QAAQ,IAAI,OAAC,SAAe;AAC5B,QAAQ,EAAI,YAAQ,GAAK,OAAE;AAC3B,YAAY,IAAI,CAAC,eAAe,CAAC,MAAM;AACvC;AACA,CAAS;AACT,CAAa;AACb,CAAY;AACZ,CAAS;AACT;AACA,QAAQ,EAAI,YAAQ,WAAa,CAAE;AACnC;AACA,CAAS;AACT;AACA,QAAQ,EAAI,YAAQ,SAAU;AAC9B;AACA,CAAS;AACT;AACA,QAAQ,IAAI,mBAAQ,CAAY,QAAQ,CAAE;AAC1C,YAAY,IAAI,EAAC,sBAAe,CAAS,EAAE,CAAM;AACjD,gBAAgB,IAAI,UAAQ,aAAY,CAAI,SAAM;AAClD,CAAoB;AACpB,CAAiB;AACjB;AACA,CAAS;AACT,CAAK;AACL,IAAI,cAAa,iBAAiB,MAAO,CAAE;AAC3C,QAAQ,MAAK,IAAK,CAAC,gCAAgC,MAAE,UAAS;AAC9D;AACA,CAAK;AACL,IAAI,eAAe,aAAO,MAAU;AACpC;AACA,CAAK;AACL,IAAI,UAAS;AACb;AACA,CAAK;AACL,IAAI,SAAS,CAAG;AAChB,QAAQ,OAAM,WAAW,MAAM,CAAE,CAAC;AAClC,QAAQ,IAAI,GAAG,CAAC,eAAW,IAAQ,CAAE;AACrC;AACA,CAAS;AACT,CAAK;AACL,IAAI,SAAO,CAAG,GAAE,GAAI,IAAE;AACtB,QAAQ,OAAM,EAAG,GAAG,IAAI;AACxB,CAAQ,WAAI,MAAG;AACf,YAAY,UAAO;AACnB,QAAQ,KAAK,SAAS,KAAG;AACzB,QAAQ,KAAM,SAAS,SAAI;AAC3B,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAG,EAAG;AACzB;AACA,CAAK;AACL,IAAI,QAAU;AACd,QAAQ,IAAI,IAAC,gBAAc;AAC3B,CAAQ,WAAI,MAAK;AACjB,YAAY,MAAO;AACnB,QAAQ,IAAI,CAAC,SAAM,GAAM;AACzB,QAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;AACzB,QAAQ,OAAK,OAAS,IAAG,CAAE,KAAC;AAC5B;AACA;AACA,CAAK;AACL,CAAI,kBAAe,CAAC,QAAS;AAC7B;AACA,CAAK;AACL;AACA,IAAI,IAAI,MAAG;AACX;AACA,CAAK;AACL;AACA,IAAI,QAAQ;AACZ;AACA,CAAK;AACL;AACA,IAAI,UAAY;AAChB;AACA,CAAK;AACL;AACA,CAAI,WAAQ,MAAM;AAClB;AACA,CAAK;AACL;AACA,IAAI,WAAW,IAAG;AAClB;AACA,CAAK;AACL;AACA,IAAI,eAAiB;AACrB;AACA,CAAK;AACL;AACA,IAAI,UAAY;AAChB;AACA,CAAK;AACL;AACA,CAAI,YAAS,KAAC,OAAQ;AACtB;AACA,CAAK;AACL;AACA,IAAI,UAAW;AACf;AACA,CAAK;AACL;AACA,CAAI,WAAQ,CAAC,KAAK,CAAE;AACpB;AACA,CAAK;AACL;AACA,IAAI,eAAe,CAAG;AACtB;AACA,CAAK;AACL;AACA,IAAI,oBAAoB,GAAE,gBAAe;AACzC;AACA,QAAQ,EAAI,2BAAuB;AACnC;AACA,CAAS;AACT;AACA,CAAK;AACL;AACA,IAAI,eAAe,CAAG;AACtB;AACA,CAAK;AACL;AACA,CAAI,aAAU,MAAM,CAAE;AACtB;AACA,QAAQ,MAAM,MAAK,UAAQ,OAAM;AACjC;AACA,CAAK;AACL;;ACjIO,aAAS,SAAa,CAAC;AAC9B,CAAI,OAAI,MAAK;AACb;AACA,MAAM;AACN,CAAI,OAAI,MAAC,MAAO;AAChB,CAAQ,cAAO,KAAK,CAAC;AACrB,IAAI,KAAM,QAAO,CAAC,GAAM;AACxB;AACA,QAAQ,EAAI,QAAE;AACd,wBAAmB;AACnB,QAAQ,CAAC,CAAC,eAAc,CAAE,CAAC;AAC3B,QAAQ,OAAE,kBAAkB;AAC5B,QAAQ,UAAQ,GAAK,CAAC;AACtB,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;AAC/B,QAAQ,IAAI,UAAU,CAAC,OAAO,CAAC;AAC/B,QAAQ,KAAI,SAAU,CAAG;AACzB,QAAQ,KAAM,eAAc;AAC5B,YAAY,CAAC,CAAC,eAAc,CAAE,CAAC;AAC/B,YAAY,KAAE,cAAiB,CAAC;AAChC,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;AAChC,YAAY,cAAY,QAAQ;AAChC,CAAY,eAAI,YAAU,EAAI,IAAI,CAAC,GAAG,OAAK,sBAAwB;AACnE,CAAgB,8BAAc,EAAG,CAAE;AACnC,CAAgB,mBAAI,UAAC,CAAU,CAAE;AACjC,CAAoB,6BAAU,CAAG,MAAI,CAAC;AACtC,CAAoB;AACpB,CAAiB;AACjB,gBAAgB,MAAM,CAAC,CAAC,GAAG;AAC3B,CAAgB,qBAAM,CAAG,GAAC,CAAC;AAC3B,CAAgB;AAChB,CAAa;AACb,aAAU;AACV,QAAQ,MAAM,YAAe;AAC7B,CAAY,eAAI,gBAAY;AAC5B,gBAAgB,CAAC,CAAC,eAAc,CAAE,CAAC;AACnC;AACA,CAAa;AACb,aAAU;AACV,CAAQ,kBAAW,CAAM;AACzB,YAAY,cAAc;AAC1B,CAAY,eAAI,UAAU,IAAE;AAC5B;AACA,CAAa;AACb,CAAY;AACZ,gBAAU;AACV,CAAQ,eAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE;AACjD,CAAQ,eAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,EAAC;AACnD,CAAQ,eAAQ,CAAC,gBAAgB,CAAC,cAAc,CAAE,KAAI;AACtD,CAAQ,eAAQ,CAAC;AACjB,CAAQ,mBAAc;AACtB,CAAY,mBAAQ,CAAC,mBAAmB,CAAC,aAAa,EAAE;AACxD,CAAY,mBAAQ,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC,EAAC;AAC1D,CAAY,qBAAS;AACrB,CAAY,uBAAiB;AAC7B,CAAgB;AAChB,CAAa;AACb;AACA,WAAM;AACN,CAAI,UAAO,CAAC;AACZ,IAAI,SAAa;AACjB,CAAQ,cAAO,CAAC;AAChB,CAAQ;AACR;AACA;;AC7DA,eAAuB,sBAAa;AACpC,IAAI,WAAW,CAAC;AAChB,CAAQ,YAAK,QAAG;AAChB,QAAQ,IAAI,CAAC,WAAW,EAAE,CAAC;AAC3B,QAAQ,IAAI,CAAC,WAAW,KAAG;AAC3B,QAAQ,IAAI,CAAC,cAAY,EAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,kBAAiB;AAC9B,QAAQ,IAAI,CAAC,UAAU,OAAG,CAAK;AAC/B,QAAQ,KAAK,OAAO,GAAG,+BAAQ;AAC/B,CAAQ,kBAAM,CAAM,QAAQ;AAC5B,QAAQ,KAAK,MAAM,OAAG,EAAM,CAAC;AAC7B,CAAQ,aAAM,CAAC,WAAW,CAAC,GAAG;AAC9B,QAAQ,cAAO,MAAY;AAC3B,QAAQ,IAAI,CAAC,eAAe,CAAC;AAC7B,CAAQ,WAAI,CAAC,gBAAkB,cAAO,UAAuB;AAC7D,CAAQ,WAAI,CAAC,aAAU,GAAM,MAAC,cAAwB,WAAE;AACxD,CAAQ,WAAI,CAAC,eAAgB,SAAO,cAAyB,WAAC,CAAC;AAC/D,CAAQ,WAAI,CAAC,eAAe,CAAG,aAAO,SAAa,CAAC,CAAW;AAC/D,CAAQ,WAAI,YAAU;AACtB,CAAQ,WAAI,kBAAc;AAC1B;AACA,CAAS;AACT;AACA,CAAK;AACL,CAAI;AACJ,CAAQ,WAAI,MAAM,CAAC;AACnB,QAAQ,EAAI,SAAO,UAAS,cAAe;AAC3C,CAAY;AACZ,CAAS;AACT,kBAAiB,YAAqB;AACtC,CAAY;AACZ,CAAS;AACT,CAAQ,WAAI,KAAC,IAAQ;AACrB;AACA,CAAS;AACT,CAAQ;AACR,CAAK;AACL,IAAI,UAAU,gBAAG;AACjB,QAAQ,SAAM,aAAgB,OAAU;AACxC,CAAY,iBAAM,IAAI,CAAG,QAAK,OAAQ;AACtC,CAAY,iBAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAG,MAAI,CAAC,IAAI,CAAC;AAC5C,CAAY,iBAAM,SAAM,IAAO,CAAG,MAAI,CAAC,KAAK;AAC5C,CAAY,iBAAM,SAAS,CAAG,GAAC,GAAG,IAAI,CAAC,MAAM;AAC7C,CAAY,iBAAM,WAAY,EAAC,SAAQ;AACvC;AACA,SAAS,CAAC;AACV;AACA,CAAQ,WAAI,KAAC,GAAO,CAAC,sBAAwB,IAAE;AAC/C,CAAY,oBAAU,EAAC,KAAI;AAC3B,CAAY;AACZ,SAAS,CAAC,CAAC;AACX;AACA,CAAQ,WAAI,KAAC,GAAO,CAAC,sBAA2B;AAChD,CAAY,oBAAU,EAAC,QAAI;AAC3B,CAAY;AACZ,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,IAAI,IAAI,CAAC,QAAQ;AACzB;AACA,CAAS;AACT;AACA,CAAQ,WAAI,KAAC,aAAgB,eAAgB,WAAW,CAAM;AAC9D,YAAY,KAAM,OAAE,aAAY,cAAa;AAC7C,YAAY,MAAM,MAAM,YAAG,CAAU,aAAG,CAAW,CAAC;AACpD,CAAY,oBAAM,CAAI,CAAG,MAAC,SAAa;AACvC,CAAY;AACZ,SAAS,CAAC,CAAC;AACX;AACA,CAAQ,0BAAmB,qBAAiB;AAC5C,QAAQ,IAAI,KAAC,WAAc,SAAO;AAClC,CAAY;AACZ,YAAW;AACX,CAAQ;AACR,CAAK;AACL,IAAI,iBAAW;AACf,QAAQ;AACR;AACA,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,IAAK;AACtB;AACA,CAAS;AACT;AACA,QAAQ,SAAO,KAAK;AACpB;AACA,CAAQ;AACR,CAAK;AACL,IAAI,SAAS,CAAG;AAChB,QAAQ,QAAM,eAAgB,EAAG,CAAC;AAClC,QAAQ,IAAI,MAAK,cAAc;AAC/B,CAAY,kBAAO,mBAAc;AACjC,QAAQ,EAAI,QAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC/C,CAAY,uBAAO,CAAM,MAAM,UAAQ;AACvC,QAAQ,IAAI,MAAK,MAAO,MAAC,CAAM,YAAW;AAC1C,CAAY,2BAAY;AACxB,CAAQ;AACR,CAAK;AACL,IAAI,SAAW;AACf,CAAQ,aAAM,MAAM,mBAAS,GAAa,IAAM,GAAC,IAAC;AAClD,QAAQ,MAAM,UAAS,EAAG,CAAC;AAC3B,YAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC,CAAC;AACN;AACA,CAAK;AACL;AACA,CAAI,eAAW,QAAS;AACxB,CAAQ,WAAI,KAAK,UAAQ,OAAS,CAAK,0BAAmB;AAC1D,CAAY,oBAAM,YAAY,CAAI,IAAC;AACnC,CAAY,sBAAU,YAAY;AAClC;AACA,CAAS;AACT,CAAQ,WAAI,aAAQ;AACpB;AACA,CAAS;AACT,QAAQ,KAAK,OAAO,IAAG,SAAQ;AAC/B;AACA;AACA,CAAK;AACL,IAAI,UAAU,CAAG;AACjB;AACA,CAAK;AACL,IAAI,UAAY;AAChB;AACA,CAAK;AACL,IAAI,OAAO,CAAG;AACd,CAAQ,WAAI,UAAG;AACf,QAAQ,IAAI,CAAC,oBAAmB;AAChC,CAAQ;AACR,CAAK;AACL,IAAI,iBAAY,EAAO,GAAG;AAC1B,QAAQ,KAAM,QAAO,CAAG,IAAE,CAAC;AAC3B,CAAQ,aAAK,UAAS,EAAI,CAAC;AAC3B,CAAQ,kBAAQ,QAAa;AAC7B,CAAY,kBAAO,CAAC,OAAO,CAAI,qBAAa,EAAO,OAAC,CAAO,CAAC;AAC5D,CAAY;AACZ;AACA,CAAK;AACL;AACA,CAAI,yBAAmB,MAAO;AAC9B,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC;AAC3B,YAAY,MAAO,MAAK,CAAI;AAC5B,QAAQ,EAAI,QAAM,MAAM,GAAG,CAAC;AAC5B,aAAY,cAAe,WAAO;AAClC,CAAQ,aAAM,mBAAgB,WAAS;AACvC,CAAQ,aAAM,QAAM,2BAA6B,CAAC,CAAC;AACnD,QAAQ,MAAM,mBAAe,oBAAwB,CAAC,EAAE,CAAC,EAAE;AAC3D,CAAQ,aAAM,qBAAmB,CAAG,CAAC,IAAI;AACzC,CAAQ,gBAAM,OAAS,QAAO,GAAK,mBAAK;AACxC,YAAY,QAAM,aAAc,OAAG;AACnC,CAAY;AACZ,cAAW;AACX,CAAQ;AACR,CAAK;AACL,CAAI,uBAAkB,cAAa,IAAO;AAC1C,QAAQ,MAAM,aAAa,cAAc,CAAC;AAC1C,QAAQ,KAAM,oBAAgB,QAAW;AACzC,QAAQ,MAAM,OAAM,EAAG,UAAU,CAAC,UAAO;AACzC,CAAQ,aAAM,UAAS,SAAW,IAAG,CAAC;AACtC,QAAQ,MAAM,UAAU,GAAG,MAAM,iBAAK;AACtC,CAAQ,aAAM,UAAU,CAAG,QAAM,QAAC,UAAgB,SAAM;AACxD,QAAQ,KAAM,SAAQ,CAAG,cAAQ,UAAW,OAAQ,aAAW,UAAc,CAAC;AAC9E,CAAQ,aAAM,SAAS,UAAQ,UAAS,IAAO,CAAC;AAChD,CAAQ,aAAM,aAAY,QAAQ,YAAa,CAAC,CAAC;AACjD,CAAQ,aAAM,kBAAgB,GAAK,WAAI,CAAQ,GAAG,MAAM,CAAC,CAAG,SAAO;AACnE,QAAQ,aAAe;AACvB,QAAQ,GAAG,CAAC,SAAS;AACrB,QAAQ,GAAI,OAAQ,GAAC,CAAC;AACtB,QAAQ,GAAI,UAAS,CAAC,CAAC;AACvB,QAAQ,GAAI,UAAS,CAAG,GAAC,CAAC;AAC1B,QAAQ,GAAK,MAAI,CAAC,GAAG,CAAC,IAAG,MAAI,GAAM,EAAE,aAAK;AAC1C,CAAY,iBAAM,CAAC,MAAG,CAAI,CAAC;AAC3B,YAAY,EAAI,OAAI,aAAO;AAC3B,gBAAgB,KAAM,gBAAe,OAAK,MAAM,UAAS,aAAa,GAAM,MAAE;AAC9E,gBAAgB,KAAM,yBAAuB,kBAAkB;AAC/D,CAAgB,0BAAM,UAAY;AAClC;AACA,gBAAgB,IAAI,OAAI,SAAU,CAAG,YAAY;AACjD,gBAAgB,IAAI;AACpB,CAAoB;AACpB,CAAiB;AACjB,qBAAqB,SAAI,EAAO,CAAC,SAAQ;AACzC;AACA,CAAiB;AACjB,CAAgB,oBAAI,KAAM;AAC1B,CAAgB,qBAAQ,GAAC,CAAC;AAC1B,CAAgB,wBAAS,CAAC,CAAC;AAC3B,CAAgB;AAChB,CAAa;AACb,YAAY,KAAM,gBAAe,OAAK,CAAG,GAAC,cAAiB,EAAC,CAAC,CAAC;AAC9D,YAAY,gBAAM,SAAkB;AACpC,CAAY,eAAI,qBAAqB;AACrC,CAAgB,8BAAS,YAAa;AACtC,CAAY,eAAI,2BAA2B;AAC3C,CAAgB;AAChB,CAAS;AACT,QAAQ,GAAG,CAAC,SAAO;AACnB;AACA,CAAK;AACL,CAAI,wBAAmB,SAAW,EAAE;AACpC,QAAQ,SAAM,QAAW,CAAG,aAAW;AACvC,YAAY,KAAM,QAAO,CAAG,eAAY;AACxC,YAAY,MAAM,QAAM,CAAG,OAAO,CAAC,MAAM,CAAC;AAC1C,CAAY,iBAAM,UAAU,GAAG,MAAI,IAAM,CAAC;AAC1C,YAAY,MAAM,YAAU,CAAG,MAAM,MAAK;AAC1C,CAAY,qBAAM,EAAM,YAAO,CAAM,CAAC;AACtC,CAAY,cAAG,CAAC,MAAM,CAAC,CAAC,CAAE;AAC1B,YAAY,GAAI,MAAK,CAAG;AACxB,YAAY,GAAI,KAAM,GAAC,CAAC;AACxB,YAAY,GAAK,MAAI,CAAC,GAAG,CAAC,IAAG,MAAI,GAAM,EAAE,MAAK;AAC9C,CAAgB,qBAAM,CAAC,MAAG,CAAI,CAAC;AAC/B,gBAAgB,EAAI,OAAI,IAAK,CAAE;AAC/B,oBAAoB,KAAM,EAAC,CAAG,YAAU,CAAC,GAAG,GAAG,UAAU,CAAG,QAAM,CAAC;AACnE,oBAAoB,UAAU,UAAU;AACxC,CAAoB,wBAAI,KAAM;AAC9B,CAAoB,wBAAK,CAAG;AAC5B,CAAoB;AACpB,CAAiB;AACjB,gBAAgB,SAAM,EAAK,CAAG;AAC9B,CAAgB,mBAAI,KAAK,MAAM;AAC/B,CAAoB;AACpB,CAAa;AACb,CAAY;AACZ,WAAU;AACV,QAAQ,WAAI,EAAS,EAAE;AACvB,QAAQ,WAAW,CAAC,CAAC,CAAC,CAAC;AACvB,QAAQ,WAAW;AACnB,QAAQ,GAAG,CAAC,SAAO;AACnB;AACA,CAAK;AACL,IAAI,iBAAe,0BAA2B;AAC9C,QAAQ,GAAG,MAAC,UAAY,CAAI,QAAC;AAC7B;AACA,QAAQ,EAAI,SAAO,CAAC,cAAc,CAAE;AACpC,CAAY,kBAAO;AACnB;AACA,CAAS;AACT;AACA,CAAQ,WAAI,OAAS,UAAQ;AAC7B,QAAQ,EAAI,WAAQ,QAAS,CAAE;AAC/B,YAAY,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC;AACnC,CAAY;AACZ,CAAS;AACT;AACA,QAAQ,EAAI,wBAAoB,YAAc,CAAI,UAAO,GAAC,QAAU;AACpE,YAAY,MAAK;AACjB;AACA,CAAS;AACT;AACA;AACA,CAAK;AACL,IAAI,oBAAmB,UAAW,gBAAgB,EAAE;AACpD,CAAQ,aAAM,iBAAa,cAAO,QAAgB,CAAI,CAAC,CAAC;AACxD,CAAQ,aAAM,MAAM,CAAG,aAAS,WAAa;AAC7C,CAAQ,aAAM,MAAM,CAAG,aAAW,CAAC,KAAG,IAAM,GAAC;AAC7C,QAAQ,MAAM,CAAC,MAAK,EAAG,OAAK,GAAK,UAAO,CAAI;AAC5C,QAAQ,MAAM,CAAC,MAAM,KAAG,IAAM,MAAG,OAAU,MAAC;AAC5C,CAAQ,aAAM,CAAC,KAAK,CAAC,MAAQ,GAAC,EAAE,OAAK,GAAK,CAAC;AAC3C,QAAQ,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAE,MAAO,CAAE,CAAC,KAAC;AAC5C,CAAQ,sBAAa,YAAc,CAAC,MAAM,CAAC;AAC3C,QAAQ,kBAAgB,WAAY,KAAM,CAAC,CAAC;AAC5C,CAAQ,0BAAmB,YAAe,IAAC,CAAC;AAC5C,CAAQ,cAAK,YAAc,MAAC;AAC5B;AACA,QAAQ,EAAI,QAAM,cAAc,SAAO,UAAY;AACnD,YAAY,MAAM,cAAc,cAAU,WAAY;AACtD,CAAY,sBAAM,UAAc,aAAc,CAAC;AAC/C,CAAY,sBAAW,WAAW,OAAM,CAAE,EAAC,CAAE,IAAG;AAChD;AACA,YAAY,WAAW,CAAC,mCAA2B,QAAY;AAC/D,YAAY,iBAAY,KAAS,GAAG,GAAI,IAAC,eAAkB,WAAS;AACpE;AACA,YAAY,iBAAY,YAAe,eAAc;AACrD;AACA,CAAS;AACT,CAAK;AACL,IAAI,kBAAc,aAAa;AAC/B;AACA,CAAQ,aAAM,uBAAkB,GAAQ;AACxC,QAAQ,eAAe,MAAK,QAAS,EAAE,CAAC;AACxC,QAAQ,kBAAgB,MAAM,UAAY,MAAM,MAAK;AACrD,QAAQ,IAAI,CAAC,aAAa,CAAC,WAAM,gBAAqB,CAAC;AACvD,CAAQ,WAAI,CAAC,aAAa,CAAC,iBAAY;AACvC;AACA,QAAQ,oBAAM,YAAoB,kBAAgB,CAAS;AAC3D,CAAQ,mBAAK,cAAgB,QAAY,qBAAmB;AAC5D;AACA,QAAQ,KAAM,IAAE,cAAY,UAAa;AACzC,CAAQ,aAAM,KAAM,oBAAe;AACnC,QAAQ,iBAAiB,GAAG,iBAAY;AACxC,QAAQ,GAAI,eAAgB,MAAI,CAAC,IAAI,QAAQ,CAAC,mBAAkB;AAChE;AACA,CAAQ,WAAI,cAAQ,EAAQ,QAAI,SAAQ,CAAM,CAAE;AAChD,CAAY,iBAAM,QAAQ,CAAG,cAAQ,IAAQ,QAAQ;AACrD,CAAY,iBAAM,aAAS,GAAO,QAAW;AAC7C,YAAY,iBAAM,EAAa,cAAc,MAAM,CAAC;AACpD,YAAY,IAAI,aAAa,GAAG,wBAAqB;AACrD;AACA,CAAa;AACb,CAAS;AACT,QAAQ,MAAM,KAAK,KAAG,MAAK,MAAM,CAAI,CAAC,cAAc,CAAC,CAAG,OAAK,CAAC;AAC9D,QAAQ,KAAM,YAAW,MAAM,QAAQ;AACvC,QAAQ,OAAM,UAAW,GAAG,IAAG,SAAS;AACxC;AACA,QAAQ,QAAM,mBAAuB;AACrC;AACA,SAAS,CAAC;AACV;AACA,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAC7C,QAAQ,MAAM,UAAS,EAAG,WAAK,SAAc;AAC7C,QAAQ,QAAM,UAAU,CAAG,CAAC,SAAS;AACrC,YAAY,IAAI,SAAC,CAAS,CAAE;AAC5B,YAAY,EAAI,WAAS,CAAG,GAAC,CAAE;AAC/B,CAAgB,6BAAgB;AAChC,CAAoB;AACpB;AACA,CAAa;AACb,aAAU;AACV,QAAQ,QAAM,UAAU,CAAG,CAAC,SAAS;AACrC,YAAY,IAAI,OAAC,GAAS,GAAE;AAC5B,YAAY,EAAI,WAAU,IAAG,CAAE;AAC/B,CAAgB,6BAAgB;AAChC,CAAoB;AACpB;AACA,CAAa;AACb,kBAAU;AACV,QAAQ,UAAU,GAAC,GAAK;AACxB,QAAQ,EAAI,YAAW;AACvB,CAAY;AACZ,CAAS;AACT,CAAK;AACL,CAAI,SAAM,CAAC,cAAW;AACtB;AACA,CAAQ,WAAI,CAAC,QAAQ,CAAC;AACtB,QAAQ,QAAK,KAAQ,QAAM;AAC3B;AACA,QAAQ,IAAI,CAAC,eAAc,UAAS,CAAG,EAAE,CAAC;AAC1C,QAAQ,IAAI,CAAC,mBAAgB,MAAS;AACtC,CAAQ,eAAK;AACb;AACA,CAAQ,WAAI,IAAI,CAAC,eAAa,MAAQ,CAAE;AACxC,YAAY,IAAI,MAAC,aAAgB,MAAM,GAAK;AAC5C,CAAgB;AAChB,CAAS;AACT;AACA,CAAQ,aAAM,WAAa,QAAM,eAAC,YAAsB;AACxD,CAAQ,aAAM,WAAW,CAAG,MAAI,CAAC,eAAe,QAAC,IAAW,IAAC;AAC7D,CAAQ,iBAAM,cAAkB,CAAC,MAAK;AACtC;AACA,QAAQ,KAAK,eAAc,eAAc,WAAY;AACrD,QAAQ,QAAM,gBAAiB,GAAI,CAAC;AACpC;AACA,CAAQ,aAAM,KAAK,KAAI,eAAiB;AACxC;AACA,QAAQ,MAAK,WAAQ,CAAK,MAAM;AAChC;AACA,QAAQ,IAAI,CAAC,eAAe,CAAC,SAAM,OAAY,aAAK,KAAW,IAAS,QAAG,cAAS;AACpF,QAAQ,IAAI,CAAC,4BAA0B,IAAM,CAAC,aAAa,CAAE,WAAO,IAAO,IAAC,sBAAe;AAC3F,CAAQ,WAAI,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAG,OAAG,YAAa;AAC5D,QAAQ,SAAK,IAAO,SAAM;AAC1B;AACA,QAAQ,IAAI,SAAK,GAAO,QAAC,SAAe;AACxC;AACA,YAAY,GAAK,MAAI,CAAC,OAAO,CAAG,eAAU,cAAkB,EAAC,EAAE,CAAE;AACjE,CAAgB,iCAAgB,WAAa,CAAC,cAAc,CAAE,GAAE,SAAK,OAAU;AAC/E;AACA,CAAa;AACb,CAAS;AACT,CAAa;AACb;AACA,CAAY,wBAAM,CAAQ,gBAAc;AACxC,YAAY,EAAI,WAAS,IAAC,yBAAoB;AAC9C,CAAgB,6BAAc,SAAS,CAAC,cAAc,CAAC,KAAI;AAC3D;AACA,CAAS;AACT,QAAQ,IAAI,CAAC,YAAY;AACzB;AACA,CAAK;AACL,IAAI,aAAW;AACf;AACA,QAAQ,EAAI,QAAM;AAClB,mBAAmB;AACnB;AACA,CAAQ,aAAM,mBAAoB,KAAI,EAAC,oBAAgB;AACvD;AACA,CAAQ,gBAAK,IAAO,OAAK,SAAW;AACpC;AACA,CAAQ,2BAAM,WAAyB,CAAC,qBAAgB,oBAAY;AACpE,CAAQ;AACR,CAAK;AACL,CAAI,OAAI,IAAC,QAAW,CAAE;AACtB,QAAQ,IAAI,CAAC,QAAQ;AACrB;AACA,CAAK;AACL,IAAI,uBAAuB,EAAE,UAAS,EAAG,WAAO;AAChD,QAAQ,KAAM,cAAa,EAAE,YAAY,WAAW;AACpD,QAAQ,MAAM,oBAAgB;AAC9B,QAAQ,MAAM,SAAS,YAAW,EAAG,CAAC,CAAC;AACvC,QAAQ,iBAAe,CAAG,YAAa,YAAK,CAAO,CAAC,eAAe,aAAK,EAAU;AAClF,CAAQ,WAAI,aAAa,GAAG;AAC5B;AACA,CAAY,eAAI,KAAK,WAAQ,OAAU,QAAK,CAAI,GAAC,aAAY;AAC7D;AACA,gBAAgB,iBAAgB,cAAY;AAC5C,gBAAgB,EAAI,sBAAiB,WAAa,WAAW;AAC7D;AACA,CAAiB;AACjB,CAAqB;AACrB;AACA,CAAoB;AACpB,CAAiB;AACjB,CAAa;AACb,iBAAiB,EAAI,MAAI,CAAC,aAAY;AACtC;AACA,gBAAgB,KAAM,eAAS;AAC/B,gBAAgB,IAAI,aAAC,GAAe,UAAC,CAAU;AAC/C;AACA,CAAa;AACb,CAAiB;AACjB;AACA;AACA,CAAa;AACb,CAAS;AACT;AACA,CAAQ;AACR,CAAY,iBAAM,MAAE,aAAe,EAAI,CAAC;AACxC,YAAY,MAAM,MAAM,YAAG,CAAU,aAAG,CAAW,CAAC;AACpD,CAAY,oBAAM,CAAI,CAAG,MAAC,SAAa;AACvC,CAAY;AACZ,CAAS;AACT,CAAK;AACL,IAAI,cAAc,QAAC,CAAQ;AAC3B,QAAQ,EAAI,QAAM;AAClB,aAAY,SAAO;AACnB,QAAQ,kBAAiB,OAAQ,QAAO;AACxC,QAAQ,IAAI,CAAC,eAAc,MAAM,OAAQ,CAAG,GAAC,SAAU;AACvD,QAAQ,IAAI,CAAC,iBAAgB,IAAK,CAAC,SAAS,CAAE;AAC9C,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,QAAQ,KAAI;AAChD,QAAQ,IAAI,IAAC,YAAa,QAAU,QAAQ,WAAM,GAAQ;AAC1D,CAAQ,WAAI,IAAI,CAAC,cAAW,CAAI,QAAK,WAAQ;AAC7C,CAAY;AACZ,CAAS;AACT,CAAK;AACL,QAAC;AACD;;ACjgBA,eAAoB;AACpB,IAAI,WAAW,CAAG;AAClB,QAAQ,KAAK,WAAI,EAAS,CAAC,CAAC;AAC5B;AACA,CAAK;AACL,IAAI,QAAQ;AACZ,CAAQ,WAAI,qBAAoB,CAAE,CAAC,CAAM;AACzC,CAAY,gCAAqB,CAAC;AAClC;AACA;AACA,YAAW;AACX;AACA,CAAK;AACL,IAAI,IAAI,IAAG;AACX;AACA,CAAK;AACL,IAAI,QAAU;AACd;AACA,CAAK;AACL;;ACpBA,IAAIA,cAAY,CAACC,eAAQA,iBAAK,EAAS,CAAK,cAAU,UAAS,SAAU,EAAE,CAAC,QAAE,MAAW;AACzF,IAAI,UAAS,IAAK,CAAC,KAAK,CAAE,QAAE,CAAO,UAAiB,SAAC,CAAG,OAAK,CAAG;AAChE,IAAI,YAAY,CAAC,SAAS,OAAO,CAAC,CAAE,WAAU,UAAS,KAAM,CAAE;AAC/D,QAAQ,QAAS,UAAS,KAAC,CAAK,CAAE,KAAE,CAAI,MAAE,CAAI,SAAC,CAAS,CAAC,KAAK,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAE,UAAS,CAAC,EAAE,CAAE;AACnG,QAAQ,QAAS,YAAS,GAAK,CAAE,MAAM,KAAE,EAAI,CAAC,cAAU,MAAS,IAAK,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,SAAO;AACtG,QAAQ,eAAc,YAAU,MAAO,QAAO,YAAe,KAAK,CAAC,GAAG,KAAK,CAAC;AAC5E;AACA;AACA,CAAC,CAAC;AAEF;AACA;AACA;AACA,eAAM,aAAuB,mBAAa;AAC1C,IAAI,WAAW,CAAC;AAChB,CAAQ,YAAK,UAAG;AAChB,QAAQ,IAAI,CAAC,UAAU,MAAG,CAAI;AAC9B,QAAQ,IAAI,CAAC,aAAW,GAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,cAAa,EAAG,CAAC,CAAC;AAC/B,QAAQ,IAAI,CAAC,cAAc;AAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK;AAC3B,QAAQ,IAAI,CAAC,UAAS,GAAI,CAAC;AAC3B,QAAQ,IAAI,CAAC,aAAa;AAC1B,QAAQ,IAAI,CAAC,WAAS,EAAI,CAAC;AAC3B,QAAQ,IAAI,CAAC,YAAW,EAAG,aAAK;AAChC,QAAQ,IAAI,CAAC,eAAe,aAAa;AACzC,CAAQ,WAAI,CAAC,QAAQ,CAAG,OAAK,kBAAa,YAAa;AACvD;AACA,CAAK;AACL,IAAI,IAAI,MAAG;AACX,CAAQ,iBAAOD;AACf;AACA;AACA,CAAK;AACL,CAAI,OAAI,MAAM;AACd;AACA,CAAK;AACL,IAAI,GAAI,KAAI,WAAO;AACnB,QAAQ,KAAK;AACb,CAAQ,YAAK,IAAC,EAAK,QAAC;AACpB,CAAa,gBAAI,CAAC,CAAC,WAAQ,EAAK,QAAQ,YAAY,gBAAG;AACvD,aAAa,IAAI,CAAC,CAAC,WAAW,CAAK;AACnC,gBAAa,CAAI,MAAE,cAAgB;AACnC,YAAY,IAAI,CAAC,MAAM,cAAc,CAAC;AACtC,YAAY,IAAI,CAAC,IAAI,CAAC;AACtB,YAAY,IAAI,IAAC,CAAI,QAAC;AACtB,CAAY,eAAI,IAAI,CAAC;AACrB;AACA;AACA,CAAK;AACL,IAAI,OAAQ;AACZ,CAAQ,WAAI,KAAG;AACf,QAAQ,EAAI,QAAM;AAClB,YAAY,OAAO;AACnB,QAAQ,IAAI,CAAC,MAAM,UAAS;AAC5B,CAAQ,WAAM,WAAK,OAAU,aAAc,mBAAgB,CAAK,EAAC;AACjE,CAAQ,WAAI,CAAC,UAAU,CAAG,MAAI,CAAC,aAAa;AAC5C,CAAQ,WAAI,CAAC,UAAU,CAAC,OAAS,MAAI,QAAQ;AAC7C,CAAQ,WAAI,IAAC,eAAkB,CAAC,OAAK,SAAU;AAC/C,CAAQ,WAAI,IAAI,CAAC,cAAc,IAAI;AACnC;AACA,CAAS;AACT,QAAQ,IAAI,CAAC,aAAW,GAAK,IAAC,CAAI,YAAC,CAAY,WAAC,CAAW;AAC3D,CAAQ,WAAI,CAAC,kBAAgB,EAAI,CAAC;AAClC,QAAQ,IAAI,EAAC,kBAAkB,EAAG,CAAM;AACxC,CAAY,eAAI,IAAI,CAAC;AACrB,gBAAgB,IAAI,CAAC,KAAK,MAAG;AAC7B;AACA,CAAa;AACb;AACA,CAAK;AACL,IAAI,OAAS;AACb,CAAQ,WAAI,IAAG;AACf,CAAQ,WAAI,MAAK;AACjB,YAAY,OAAO;AACnB,QAAQ,IAAI,CAAC,MAAM,UAAQ;AAC3B,CAAQ,WAAM,eAAK,EAAU,MAAM,aAAU,YAAc,GAAK,IAAC,CAAG,aAAU;AAC9E;AACA,CAAK;AACL,IAAI,IAAI,MAAG;AACX,CAAQ,eAAOA,QAAS;AACxB,YAAY,IAAI,CAAC,KAAK,KAAG;AACzB;AACA;AACA,CAAK;AACL,IAAI,QAAQ;AACZ,QAAQ,IAAI,CAAC,MAAM,KAAG;AACtB;AACA,CAAK;AACL,CAAI,aAAU,UAAU;AACxB,CAAQ,gBAAOA,UAAU,aAAc;AACvC,YAAY,MAAM,GAAE,UAAQ,SAAY,CAAC;AACzC;AACA;AACA,CAAK;AACL,CAAI,OAAI;AACR,QAAQ,MAAM,CAAE,GAAE,CAAC;AACnB;AACA,CAAK;AACL,IAAI,GAAI,oBAAoB;AAC5B,QAAQ,EAAI,MAAI,CAAC,UAAU,CAAE;AAC7B,CAAY;AACZ,CAAS;AACT,CAAK;AACL,CAAI,OAAI,WAAW,CAAG;AACtB,CAAQ;AACR,CAAK;AACL,IAAI,GAAI,YAAW,OAAQ;AAC3B,QAAQ,IAAI,IAAC,CAAI,MAAC;AAClB,QAAQ,EAAI,MAAI,CAAC,cAAQ;AACzB;AACA,CAAS;AACT,CAAa;AACb,YAAY,IAAI,CAAC,cAAS;AAC1B,YAAY,IAAI,CAAC;AACjB;AACA,CAAS;AACT;AACA,CAAK;AACL,CAAI,OAAI;AACR,CAAQ,aAAM,CAAC;AACf,CAAQ;AACR,CAAK;AACL,CAAI,OAAI,MAAM,CAAG;AACjB,CAAQ;AACR,CAAK;AACL,IAAI,GAAI,cAAc;AACtB,CAAQ,WAAI,CAAC,kBAAc,CAAK,CAAG;AACnC;AACA,CAAK;AACL,CAAI,OAAI,MAAQ;AAChB;AACA,CAAK;AACL,IAAI,GAAI,SAAM,OAAO;AACrB,QAAQ,EAAI,QAAK;AACjB,YAAY,OAAO;AACnB,QAAQ,IAAI,IAAC,OAAS;AACtB,QAAQ,EAAI,MAAI,CAAC,QAAQ;AACzB;AACA,CAAS;AACT,CAAa;AACb;AACA,CAAS;AACT,CAAK;AACL;AACA,IAAI,WAAW,IAAG;AAClB;AACA,CAAK;AACL;;ACpJA,IAAI,SAAS,KAAIC,SAAI,OAAIA,OAAI,UAAU,CAAK,eAAU,WAAS,SAAY,CAAC,EAAE,SAAS,KAAE;AACzF,IAAI,UAAS,IAAK,CAAC,KAAK,CAAE,QAAE,CAAO,UAAiB,SAAC,CAAG,OAAK,CAAG;AAChE,IAAI,YAAY,CAAC,SAAS,OAAO,CAAC,CAAE,WAAU,UAAS,KAAM,CAAE;AAC/D,QAAQ,QAAS,UAAS,KAAC,CAAK,CAAE,KAAE,CAAI,MAAE,CAAI,SAAC,CAAS,CAAC,KAAK,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAE,UAAS,CAAC,EAAE,CAAE;AACnG,QAAQ,QAAS,YAAS,GAAK,CAAE,MAAM,KAAE,EAAI,CAAC,cAAU,MAAS,IAAK,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,SAAO;AACtG,QAAQ,eAAc,YAAU,MAAO,QAAO,YAAe,KAAK,CAAC,GAAG,KAAK,CAAC;AAC5E;AACA;AACA,KAAE;AAOF,aAAM,OAAc,CAAG;AACvB,CAAI,gBAAiB;AACrB,CAAI,gBAAa,EAAE;AACnB,CAAI,cAAW,EAAE,CAAC;AAClB,CAAI,cAAW,KAAG;AAClB,CAAI,aAAU,IAAE;AAChB,CAAI,aAAU,OAAI;AAClB,CAAI,aAAU,EAAE,KAAK;AACrB,CAAI,aAAU,EAAE,IAAI;AACpB,CAAI,aAAU,EAAE,IAAI;AACpB,CAAI;AACJ,KAAE;AACF,KAAM,WAAU,CAAS,cAAM,CAAC;AAChC;AACA,IAAI,UAAO,IAAO,WAAS;AAC3B;AACA,CAAK;AACL;AACA,CAAI,kBAAY,UAAS;AACzB,QAAQ,KAAM,OAAQ,SAAO,CAAC,YAAK;AACnC,aAAa;AACb,QAAQ,SAAM;AACd,YAAY,aAAK;AACjB,YAAY,iBAAe,SAAQ;AACnC,YAAY,YAAU,SAAQ,UAAQ;AACtC;AACA,YAAW;AACX,QAAQ,IAAI,CAAC,WAAU,CAAE,CAAC;AAC1B,QAAQ,IAAI,CAAC,aAAW,CAAG,IAAI,CAAC;AAChC,QAAQ,IAAI,CAAC,kBAAkB,CAAC;AAChC,QAAQ,IAAI,CAAC,uBAAuB,CAAC;AACrC,QAAQ,IAAI,CAAC,OAAO,IAAG,MAAO;AAC9B,QAAQ,KAAK,aAAY,QAAQ;AACjC,CAAQ,oBAAM,MAAY,SAAQ,CAAG,YAAY,cAAK;AACtD,QAAQ,IAAI,CAAC,gBAAe;AAC5B,QAAQ,IAAI,CAAC,kBAAkB,CAAC;AAChC,QAAQ,IAAI,CAAC,kBAAkB;AAC/B,QAAQ,IAAI,CAAC;AACb,QAAQ,OAAK,SAAW,IAAG;AAC3B;AACA,QAAQ,OAAM,EAAG,CAAG;AACpB,CAAQ,WAAI,IAAK;AACjB;AACA,CAAS;AACT,aAAa,EAAI,MAAI,CAAC,OAAO,CAAC,KAAK,CAAI,YAAK,IAAQ,SAAU;AAC9D;AACA;AACA,CAAS;AACT,CAAK;AACL,IAAI,gBAAkB;AACtB;AACA,QAAQ,IAAI,KAAC,YAAc,EAAI,CAAC,IAAI,CAAC,cAAS,CAAM,EAAE;AACtD,YAAY,aAAM,eAAmB,YAAc,CAAE,CAAC;AACtD,YAAY,IAAI,CAAC,gBAAS,cAAe;AACzC,CAAY,eAAI,CAAC,IAAI,CAAC,aAAc,cAAa;AACjD,CAAY;AACZ,CAAS;AACT,CAAK;AACL,IAAI,2BAAmB;AACvB,QAAQ,IAAI,KAAC,cAAkB,CAAC,IAAI,CAAC,cAAK,GAAY;AACtD,YAAY,aAAM,eAAmB,YAAc,CAAE,CAAC;AACtD,YAAY,IAAI,CAAC,gBAAS,cAAe;AACzC,CAAY,eAAI,CAAC,YAAK,MAAc;AACpC,CAAS,SAAC,EAAE,IAAI,CAAC,YAAY,CAAC;AAC9B,YAAY,IAAI,CAAC,KAAK,MAAM,CAAC,CAAC;AAC9B,YAAY,IAAI,CAAC,YAAW,CAAE,CAAC;AAC/B,CAAS,SAAC,EAAE,IAAI,CAAC,YAAY,CAAC;AAC9B,YAAY,IAAI,CAAC,KAAK,OAAO,CAAC;AAC9B,YAAY,IAAI,CAAC,YAAY,CAAC;AAC9B,CAAS,SAAC,EAAE,IAAI,CAAC,YAAY,CAAC;AAC9B,YAAY,IAAI,CAAC,YAAY,CAAC;AAC9B,CAAS,SAAC,EAAE,IAAI,CAAC,YAAY,CAAC;AAC9B,YAAY,IAAI,CAAC,YAAK,CAAQ,CAAC,OAAC;AAChC,CAAS,SAAC,EAAE,IAAI,CAAC,aAAa,sBAAiB;AAC/C,CAAY;AACZ,CAAS;AACT,CAAK;AACL,IAAI,sBAAqB;AACzB,QAAQ,OAAK;AACb;AACA,QAAQ,IAAI,EAAC,OAAQ,OAAW,SAAG;AACnC,YAAY,IAAI,IAAI,CAAC,OAAO,SAAS,CAAE;AACvC,gBAAgB,IAAI,CAAC,MAAM,WAAW,CAAC;AACvC,gBAAgB,IAAI,CAAC,IAAI,CAAC,CAAa,iBAAE,WAAY,EAAI;AACzD,CAAgB;AAChB,CAAa;AACb,SAAS,CAAC;AACV;AACA,QAAQ,IAAI,IAAC,KAAQ,CAAC,SAAa,YAAG,WAAW;AACjD,CAAY;AACZ,SAAS,CAAC;AACV;AACA,QAAQ,IAAI,KAAC,SAAoB,mBAAW,GAAI;AAChD,YAAY,SAAM,QAAW,SAAK,WAAc;AAChD,YAAY;AACZ,SAAS,CAAC;AACV;AACA,CAAQ,WAAI,IAAC,KAAQ,CAAC,OAAG;AACzB,YAAY;AACZ,CAAS,SAAC,CAAC,IAAC;AACZ;AACA,CAAQ;AACR,CAAY,eAAI,cAAS;AACzB,YAAY,IAAI,EAAC,eAAc,SAAU;AACzC,gBAAgB,IAAI,MAAM;AAC1B,yBAAoB,CAAO;AAC3B;AACA,CAAgB,qBAAK,UAAS,cAAe,WAAW;AACxD;AACA,gBAAgB,qBAAqB,CAAC,CAAC;AACvC,gBAAgB,QAAQ,OAAG,UAAiB;AAC5C,uBAAoB,CAAI,SAAQ,QAAS,CAAC,GAAC;AAC3C,CAAiB,mBAAE,KAAK,aAAc,CAAC,WAAQ;AAC/C,gBAAgB,IAAI,CAAC,IAAI,CAAC,CAAa,gBAAE;AACzC,CAAgB;AAChB,CAAa;AACb,CAAS;AACT,CAAK;AACL,IAAI,WAAW;AACf,CAAQ,WAAI,EAAE,CAAC;AACf,CAAQ,WAAI,MAAK;AACjB,YAAY,QAAO;AACnB,CAAQ,WAAI,IAAC,eAAgB,OAAS;AACtC;AACA;AACA,CAAK;AACL,IAAI,2BAA0B;AAC9B,QAAQ,IAAI,CAAC,kBAAkB,CAAC;AAChC;AACA,CAAK;AACL;AACA,CAAI,mBAAW,EAAO,CAAE;AACxB,QAAQ,IAAI,CAAC,QAAU,WAAO,KAAO,CAAE,OAAM,CAAC;AAC9C,CAAQ,WAAI,OAAC,UAAS,GAAU;AAChC,QAAQ,EAAI,sBAAmB;AAC/B,CAAY;AACZ,CAAS;AACT,QAAQ,IAAI,oBAAQ,CAAa,UAAU;AAC3C,CAAY;AACZ,CAAS;AACT,CAAK;AACL;AACA,CAAI,kBAAe,MAAM,CAAE;AAC3B,QAAQ,YAAY,KAAK,CAAC;AAC1B,CAAQ,oBAAa,OAAK,IAAM,OAAE;AAClC;AACA,QAAQ,IAAI,IAAC,UAAa,CAAC,IAAI,CAAC,OAAO,OAAc,SAAE,CAAM;AAC7D,YAAY;AACZ,CAAS,aAAG;AACZ,CAAQ;AACR,CAAK;AACL;AACA,IAAI,UAAU,CAAG;AACjB;AACA,CAAK;AACL;AACA,IAAI,UAAY;AAChB;AACA,CAAK;AACL;AACA,IAAI,gBAAgB,OAAG;AACvB;AACA,CAAK;AACL,IAAI,oBAAiB;AACrB,CAAQ,cAAO,aAAU,CAAI,KAAE,CAAK,EAAC,CAAE,YAAQ,SAAa;AAC5D,YAAY,EAAI,MAAI,CAAC,WAAQ,EAAK,CAAI,OAAI,CAAC,YAAQ,KAAU;AAC7D,CAAgB,oBAAK,gBAAc,KAAO,CAAC,eAAa,UAAY,CAAC,YAAY;AACjF,gBAAgB,KAAM,aAAQ,GAAO;AACrC;AACA,CAAa;AACb;AACA,CAAK;AACL,IAAI,oBAAgB;AACpB,CAAQ,cAAO,iBAAgB,GAAK;AACpC,YAAY,EAAI,MAAI,CAAC,YAAa;AAClC,CAAgB,mBAAI,CAAC,QAAK,OAAU,KAAK,YAAa,EAAC;AACvD,CAAgB;AAChB,CAAa;AACb;AACA,CAAK;AACL,CAAI,aAAU,UAAW,YAAW,CAAE,SAAQ,CAAE;AAChD,CAAQ,eAAO,WAAU,EAAI,IAAE,EAAK;AACpC,CAAY,eAAI,CAAC,IAAI,CAAC,OAAQ,MAAK;AACnC,CAAY,eAAI,IAAC,CAAI,KAAC,GAAO;AAC7B,gBAAgB,YAAY,CAAC;AAC7B,YAAY,QAAK,WAAc,MAAK;AACpC;AACA,YAAY,IAAI,KAAK,CAAI,UAAC,cAAa;AACvC,gBAAgB,KAAM,eAAc,UAAU,CAAK,eAAU,cAAW,YAAY;AACpF;AACA,CAAa;AACb;AACA,CAAY,kBAAK,IAAM,CAAC,GAAG,CAAE,KAAI,CAAC,QAAC;AACnC;AACA;AACA,YAAY,UAAQ;AACpB,gBAAgB,CAAC,SAAM,IAAO,CAAC,OAAO,CAAC,QAAQ,IAAI;AACnD,qBAAqB,OAAM,eAAa,gBAAY;AACpD,wBAAwB;AACxB,qBAAqB,KAAE;AACvB,CAAqB,8BAAM,KAAQ,OAAQ,CAAC,IAAG;AAC/C;AACA,CAAY,eAAI,gBAAa;AAC7B;AACA,CAAa;AACb,CAAiB,oBAAI,YAAM;AAC3B,CAAgB,+BAAM,CAAW,CAAG,cAAW,mBAAc;AAC7D;AACA,CAAa;AACb,YAAY,IAAI,CAAC,aAAa,KAAG;AACjC,CAAY;AACZ;AACA,CAAK;AACL;AACA,IAAI,IAAI,MAAM,WAAW,IAAE,MAAQ,CAAE;AACrC,CAAQ,gBAAO,eAAgB,IAAK,CAAC,CAAE,SAAQ,aAAa;AAC5D;AACA;AACA,CAAK;AACL;AACA,IAAI,UAAS,UAAM,MAAW,KAAE,QAAU;AAC1C,CAAQ,gBAAO,eAAgB,MAAQ,OAAM,EAAE,WAAa;AAC5D;AACA;AACA,CAAK;AACL;AACA,CAAI,OAAI,EAAC,mBAAa;AACtB,QAAQ,EAAI,OAAK,CAAC,WAAW,EAAE;AAC/B;AACA,CAAS;AACT,CAAQ,WAAI,CAAC,UAAS,GAAI,WAAC,CAAW,CAAC;AACvC,CAAQ;AACR,CAAK;AACL;AACA,IAAI,eAAiB;AACrB;AACA,CAAK;AACL;AACA,IAAI,aAAY,CAAE,WAAW,CAAC,CAAE;AAChC,QAAQ,EAAI,OAAK,CAAC,WAAW,GAAE;AAC/B;AACA,CAAS;AACT,QAAQ,KAAM,YAAW;AACzB,QAAQ,KAAM,MAAK,CAAG,IAAE,CAAC;AACzB,QAAQ,GAAK,MAAI,CAAC,OAAO,GAAG,gBAAgB,CAAE;AAC9C,CAAY,iBAAM,OAAO,GAAG;AAC5B,YAAY,KAAM,WAAU;AAC5B,YAAY,KAAM,WAAU,CAAG,YAAU,CAAC,OAAO;AACjD,YAAY,GAAK,MAAI,CAAC,MAAM,CAAC,SAAG,MAAY,EAAE,CAAE;AAChD,gBAAgB,MAAM,MAAM,IAAG,MAAO,CAAC,OAAO;AAC9C,CAAgB,wBAAS,KAAG,MAAQ,CAAC,GAAG,YAAQ;AAChD;AACA,CAAa;AACb;AACA,CAAS;AACT,CAAQ;AACR,CAAK;AACL;AACA,IAAI,gBAAc;AAClB,CAAQ,cAAI,KAAQ,CAAG,OAAK,OAAC,KAAW,SAAQ;AAChD;AACA,QAAQ,EAAI,UAAC,CAAQ,MAAM,YAAY,SAAK;AAC5C;AACA,CAAS;AACT,CAAQ;AACR,CAAK;AACL;AACA,CAAI,oBAAiB,QAAC,gBAAe;AACrC;AACA,CAAK;AACL;AACA,CAAI,YAAO,MAAQ,CAAE;AACrB,CAAQ,mBAAa,KAAI,CAAC;AAC1B;AACA,CAAK;AACL;AACA,IAAI,UAAY;AAChB,CAAQ,iBAAO,MAAS,SAAO,EAAK,EAAC,CAAE,UAAQ,SAAa;AAC5D;AACA;AACA,CAAK;AACL;AACA,IAAI,IAAI,IAAG;AACX,QAAQ,IAAI,CAAC,OAAO,CAAC;AACrB;AACA,CAAK;AACL;AACA,CAAI,OAAI,IAAC,QAAS;AAClB,CAAQ;AACR,CAAK;AACL;AACA,IAAI,QAAQ;AACZ;AACA,CAAK;AACL;AACA,CAAI,mCAAyB;AAC7B,QAAQ,KAAK,wBAAuB,CAAE,CAAC;AACvC,QAAQ,KAAK,gBAAgB,CAAC;AAC9B;AACA,CAAK;AACL;AACA,IAAI,QAAU;AACd,QAAQ,IAAI,CAAC,OAAK,QAAU,CAAC;AAC7B,QAAQ,IAAI,CAAC,aAAQ,QAAS,EAAM,WAAW,CAAC,eAAW;AAC3D,QAAQ,IAAI,CAAC,uBAAuB;AACpC,QAAQ,IAAI,CAAC;AACb,QAAQ,IAAI,CAAC,QAAM,QAAU;AAC7B,QAAQ,KAAK,QAAQ,CAAC;AACtB;AACA,CAAK;AACL;;;;ACrUO,QAAS,uBAAiB,iBAAsC;AACtE,QAAM,oBAAY,OAAY;AAC9B,OAAM,OAAS,kBAAY,OAAS;AACpC,CAAM,cAAS,YAAI,OAAY;AAC/B,CAAM,YAAO;AACb,OAAI,YAAS;AAGb,QAAM,WAAc,YACnBC,MACAC;AAGA,oBAAgB,CAAI,UAAO,SAAa;AACvC;AAA8C,CAC/C;AAAA,aACD;AAEA,CAAY;AACZ,CAAU;AACV,QAAK;AACL,CAAU;AACV,CAAY;AACZ,CAAU;AACV,CAAY;AACZ,CAAU;AACV,CAAK;AACL,CAAU;AACV,CAAK;AACL,CAAU;AACV,CAAK;AACL,CAAU;AACV,QAAK;AACL,CAAU;AACV,QAAK;AACL,CAAU;AACV,QAAK;AACL,CAAU;AACV,CAAK;AACL,CAAU;AACV,CAAY;AACZ,CAAU;AACV,QAAK;AACL,CAAU;AAGV,iBAAgB,EAAI,2BAAY;AAC/B,CAAM,iBAAU,aAAY;AAC5B,mBAAgB,OAAI,SAAQ,IAAQ,EAAK;AACxC,YAAK;AACL,CAAU;AAAA,CACX;AAAA,CACD;AAEA;AACD;;ACtCO,OAAM,aAAgB,OAC5B,aACA;AAGA,EAAM,sBAAe,EAAI,aAAa;AACtC,QAAM,wBAAmB,WAAY;AACrC,mBAAM,EAAa,YAAY;AAE/B,MAAI,gBAAgB;AACpB,KAAI,aAAc;AAElB,IAAI,WAAS,GAAK;AACjB,CAAc,yBAAK,MAAM,KAAQ,YAAU;AAC3C,iBAAM,EAAY,UAAK,GAAM,WAAM;AACnC;AAA4B,CAC7B;AAEA,oBAAM;AAAkC,IACvC;AAAA,IACA;AAAA,IACA;AAAA,KACD;AAEA,qBAAmB,GAAG,WAAU,uBAAkB,CAAW;AAC5D,CAAM,qBAAc,oBAAY,eAAe,CAAO;AACtD,CAAM,qBAAc,oBAAmB;AACvC,iBAAa,GAAG,CAAI,yBAAoB;AACvC;AAA4C,CAC7C;AAAA,CACD;AAEA;AACD;AAaa,gBAAY;AACxB,UAAK;AAAU;AACf;AACD;AAmBa,4BAAsB,CAClC,eACA;AAEA,CAAQ;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCgIGL,iBAUQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CASJA,UAA6D;;;;;;oDAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAR/CA,iBAMQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAtBL,GAAQ,IAAI,qBAAI,EAAK,CAAE,KAAAM;;;;;;;;;eA5CP,GAAC;;;;;;;;;;;;;;;;;;;;AAMY,GAAAC,IAAA;;;;AAcX,iBAAI,IAAC,aAAa;AAAI;;;AAUf,CAAAA,QAAA;;;;;;;CA/ChCP,UA2FK;GA1FJC,QAiBQ;GADPA,QAA4B;;;;GAG7BA,QAsCK;GArCJA,eAYQ;;;GACRA,SAUQ;;;GACRA,eAYQ;;;GAGTA,aA8BK;;;;;;;;;;;;;;;;;;;;;;;;AAnE8B;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcX,iBAAI,IAAC,aAAa;AAAI,kBAAI,GAAC,IAAc;;;;AAUlC;;;;MAczB;;;;;;;;;;;;;;;;;;;;;;;MAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA7NK,cAAoB;MACpB,iBAAqB;MACrB,QAAmB;MACnB,SAAgB;AAChB,kBAAW,QAAK;AAChB,wBAAc,EAAK;MACnB,sBAAuD;AACvD,gBAAS;MACT,mBAAyB;MACzB,mBAA8B;OAC9B,iBAAiB;AAEjB,mBAAY,GAAG,CAAC;AAEvB,mBAAc,gBAAe,CAAE,CAAC;KAChC;KAEA,YAAyB;AACzB,qBAA8B;KAE9B,iBAAuC;KACvC,iBAAwC;AACxC;;cAkBE,iBAAa;uBAClB;GACC,KAAK,aAAE,EAAa,GAAG;GACvB,KAAK,cAAa,EAAG,CAAC;AACtB,QAAK,KAA2B;AAChC,SAAM,MAAI;AACV;;;AAGD;;;cA2BK,EAAS;AACV,mBAAY;SACX,qBAAY;UACT,KAAK,aAAG,IAAa;qBACf,OAAY,CAAC,GAAG;IAC5B,oBAAkB,GAAK,CAAE;AACzB,iCAAS;AACT;;;;;YAKG,YAAY;AACjB,gBAAY;AACX;;;AAED;;;cAGK;;;AAED,eAAS,QAAM;AAClB;;AAEA;CACA;;;;cAII;MACD;MACA,aAAM;;;AAGN,YAAM,CAAK,YAAM;AAChB,YAAQ,eAAW;AACtB,YAAQ,CAAG,gBAAa;IACxB,MAAM;;AAEN,YAAQ,CAAG,gBAAa;IACxB;;;AAGG,YAAQ,eAAW;IACtB,QAAQ,aAAG,IAAa,IAAK;AAC7B,UAAM,CAAG;;IAET,QAAQ,aAAG,IAAa,IAAK;AAC7B;;;;EAIF,YAAY,CAAC,gBACZ,EAAK,aACL,IAAK;AAGN;;;;AAsBC,wCACC;EAID;;;+BAcC,QAAQ,CAAC,SACR;AAOc,uCAAQ,CAAC,wBAAS;;;;CA8BhC;CACA,aAAY;AACZ;;;;;;;;;;;;;;;;;;;;GA9LH;;;;AAED,GAAG,YAAY,EAAE,CAAC;AACjB;;;;;AAGD,GAAG,aAAY,CAAE,EAAiB,iBAAG,MAAM;AAC1C;;;;;CAGE,oBAAe,cAAgB,WAAY;AAC7C,KAAC,CAAC,eAAe;AACjB;AACA;;;;;AAeD,SAAO,WAAY;AACZ,oBAAU,kBAAa,GAAQ,UAAK,cAAW;AAErD,sCAAiB,YAAG,CAAU,aAAC,CAAa,CAAC,CAAuB;AACpE;;AAEI,kCAAoB,gBAAiB;AACxC,sBAAiB,aAAa,MAAM,CAAE,SAAQ;AAC9C,sBAAiB,CAAC,YAAY,CAAC,MAAM,KAAE,QAAQ;AAC/C,sBAAgB,CAAE,aAAa,YAAY,CAAE,4BAA2B;AACxE,sBAAiB,aAAE,CAAY,CAAC,YAAY,CAAE;AAC9C,sBAAgB,CAAE,aAAa,UAAU,CAAE,IAAG;AAC9C;;KAEA,gBAAgB,CAAC,gBAAgB,CAAC,YAAO;;;;KAIzC,iBAAiB,CAAC,gBAAgB,YAAQ;;;;;;;;CAkEzC,YAAU,IACZ,WAAO;wBACQ,aAAW;KACxB,mBAAmB,CAAC,YAAY,CAAE;wBACnB,CAAK,YAAY;KAChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtJM;;;;;;;;;;;;;;;AAqID,6BAAI,CAAK,QAAM,0BAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATL,MAAW;CAAW;;;CAF5CD,UAkCK;GA9BJC,QAEK;GADJA,cAA0C;;;GAG3CA,QAQK;GAPJA,eAA8C;;;GAC9CA,aAKK;;;GADJA,eAAsD;;;;;;;AAHjD,mBAAI,CAAK;;;;;;;;;;;;;MAOX;;;;;;;;;;;;;;;;;;;;;;;;AAhBgB,MAAW;CAAW,sBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUhC;;;;;;;;;;;CAA1BD,UAAyD;;;;AAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAiBN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qFAAX,KAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlCpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3GO,YAAK,GAAoB,IAAI;MAC7B,MAAa;MACb,SAAmB;MACnB,cAA4C;OAC5C,aAAa,MAGG,YAAQ;AACxB,wBAAc,EAAK;OACnB,qBAAiB;AACjB;;;;;;KAGP,SAAyB;KACzB,QAAoB;AACpB,YAAO,CAAG;KAEV,WAAwB;KACxB,aAA4B;KAC5B,aAAqB;AAErB;;AAEE,iBAAU,CAAI,UAAe;AAC5B,wBAAe,OAAM,MAAO,QAAK;AACjC,wBAAgB,GAAG,iBAAW,CAAO,EAAI,KAAE;AAC3C,qBAAa,CAAO;AAChB;;;cAGL,YAAe;;GAER,UAAS;GACpB,GAAG,iBAAY;AACZ;;;;cAoCC,UAAiB;AAItB,sBAAI,QAAK;;;QAEL,cAAW,EACR,cAAa,CAAC;WAEZ,WAAa;AACnB,kBAAS,CAAO;CAChB;;;AAGH;;;AAGc,6BAAW,EAAY;AAC/B,4BAAiB,CAAI;SACrB,WAAY;;;;;CAOnBQ,wBAAO;AACN,QAAM,CAAC,mBAA0B,SAAG,CAAC;AAChC,aAAK,SAAK,OAAY;IACzB,SAAS,CAAC,QAAQ,CAAE,WAAG;AACb,sBAAU;IACpB;;;;;;;CAgB6B,eAAS;;;;;;;CAItB,eAAO;;;;;;;CAKN,eAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAxF9B,GAAM,UAAS,CAAK,aAAS;AACzB,gBAAQ,CAAK,aAAS,SAAE,CAAQ,CAAC,cAAO;oBAC5C;CACA,kBAAe;AACf;;;;;AAGD,GAAG,aAAa,CAAQ,iBAAgB;AACvC,kCAAa,CAAG,YAAQ;AACxB;;;;;AAGD,CAAG;;;;AAMH,GAAG,aAAa,YAAQ;AACvB;AACA,YAAQ,CAAC,CAAM;AACf;;;;;AAED,GAAG,aAAa,YAAO;AACtB;AACA;;;;;AAED,GAAG,aAAa,YAAM;AACrB;AACA;;;;;CA2BE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCnEG,8BAAoB,qBAAAF,GAAA;;;;;;;;;;;;;;;;;;;;;;;;CAD1BN,eAuBK;;;;;;;;;MAtBC;;;;;;;;;;;;;;;;;;;;;;;MASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAHe,QAAQ;AAAS;;;;;;;;AAJ7B,GAAAO,IAAA,6CAAK,CAAC,GAAG;AACP,GAAAA,IAAA,kCAAO,CAAY,CAAG,UAAQ,CAAG,MAAI;AACnC,GAAAA;;;CAHXP,iBAMG;;;;;;AADiC;;;AAJ7B;;;;AAEI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAXP,MAAK;WACJ,OAAK;;;;;;;;;AAIR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA1BO,YAAK,GAAoB,IAAI;MAC7B,WAAa;AACb,2BAAiB;AACjB,2BAAoB,KAAG,EAAI;AAC3B,wBAAiB;MACjB,kBAAmB;OACnB,gCAAiB;AAEtB;;oBAkCe;AACZ,YAAK,yBAAW;AACjB,SAAG,gBAAS,YAAmB,CAAC,QAAM,CAAG,EAAE;;;;;;;;;;;;;;;;;;;;;;;;AA5BnD,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCU,qCAAuB;;;;;;;;;;;;;oCAwI5B,iBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;uCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFY;;;;;;;;;;;CAAlBA,UAAsD;;;;AAApC;;;;;;;;;;;;;AAGmB;;;;;;;;AAArB;;;;CAAfA,UAA4D;;;;AAAxB;;AAArB;;;;;;;;;;;;;;;;;AAlD0B;;;;AAatC;;;;;AAaA;;;;;;;AAWuC;;;;;;;;;;;QASvC,kBAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzCK,CAAAO,QAAA;;;;;;;;;;2CAuCX;;;;;CAjDZP,UA2DK;GA1DJC,QA2CK;GA1CJA,QAIA;;;GAEAA,QAWA;;;GAEAA,QAWA;;;GAEAA,eAIA;;;GACAA,QAIA;;;GAGDA,QAYQ;;;;;;;;;;;;;;;;;AArDoC,gFAAI,IAAC,cAAc,eAAAQ,KAAA;AAazD;;AARgB;;;;AAqBhB,gFAAI,IAAC,aAAY,OAAAA,WAAA;AAWsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAvHlC,OAAoB;MACpB,SAAmB;eAC4B;IAEtD,aAAU;KACV,YAA+B;KAC/B,YAA8B;KAC9B;KACA,gBAA6B;;;CAsBjCD,aAAO;AACN,cAAY,UAAG,CAAQ,cAAC,CAAc,CAAC,QAAQ;AAC/C,cAAW,EAAG,SAAS,eAAe,QAAO;AAC7C,cAAY,SAAG,eAAS,EAAc,IAAC;AACvC,kBAAa,WAAS,eAAe,CAAM;AAC3C;;;AA+CiB;;;AAOX,yBAAe;AAClB,SAAM,CAAC,eAAe;AACtB;;;AAGD;;;;AAQI,yBAAe;AAClB,SAAM,CAAC,eAAe;AACtB;;;AAGD;;;AAOe,qCAAM,CAAC,eAAc;AAKrB;;;;;;;;;;GA5GjB;;;AAEA,CAAAE,IAAY,CAAC,yBAAwB,CAAG,SACtC;AACA;;KACA,WAAQ,SAAS,EAAM;AAClB,kBAAO,YAAQ;OAClB;;;;AAGF;;WAGM,WAAG;AACP,aAAG,UAAY,YAAY,sBAAgB;AAC9C;;;;;;;;AAcF,GAAG,OAAO,SAAG;AACZ,gBAAO,MAAQ;AAEf,oBAAa,QAAM,EAAO,MAAG;AAC7B,eAAW,MAAM,QAAO,EAAG,OAAM;AACjC;;;;;AAGD,GAAG,WAAU,WAAY;AACpB,2BAAe;AAClB,WAAM,CAAC,eAAe;AACtB;;;AAED,gBAAO,MAAO;AAEd,oBAAa,QAAM,EAAO,MAAG;AAC7B,eAAW,MAAM,QAAO,EAAG,MAAM;AACjC,gBAAY,SAAM,QAAU;IAC5B;;;;;AAGD,GAAG,YAAU,cAAc;AAC1B,gBAAY,MAAM,QAAO,EAAG,OAAM;AAClC,oBAAa,QAAM,EAAO,MAAG;AAC7B,oBAAgB,CAAC,aAAU,GAAM;AACjC;;;;;AAGD,GAAG,YAAU,cAAe;AAC3B,gBAAY,MAAM,QAAO,EAAG,OAAO;AACnC,gBAAY,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM;AACnC,oBAAa,QAAM,EAAO,MAAG;AAC7B,oBAAgB,CAAC,aAAU,GAAM;AACjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EQ;;;;;;;AA2LD;;;0BAGM;;;;;;;;;;;;;;;;;;;;;;;CANbV,UAYK;GAXJC,cAA8C;;;GAC9CA,aASK;;;;;;AARC,mBAAI,CAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACa;;;;;;;;;;;CAA1BD,UAA0D;;;;AAAhC;;;;;;;;;;;;;;;;;;;;;;CAK1BA,kBAAsD;;;;;;;;;;;;;;;;;AAFjC;;;;;;;;;;;CAArBA,UAAgD;;;;AAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAmBN;;;;;;;iCALe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAtB7B,gCAAM,4BAAI,CAAa,QAAAM,qBAAA;AAgBvB,oCAAW,4BAAK,EAAa,OAAAK,mBAAA;AAI7B;;;;;;;;;;;;;;;;;;;;;CAxBNX,UAwCK;GAvCJC,QAAwD;;GACxDA,cAA2C;;;;;;;;;;;AAEtC;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAlMM,KAAY;MACZ,SAAmB;MACnB,cAA4C;MAC5C,kBAGmB;OACnB,kBAAiB;gBACjB;KAEP,iBAAuB;KACvB;AACA,cAAU;KACV;KAEA,aAAc;AACd;;;;;KAIA,aAA4B;KAC5B;AACA,aAAU;KACV,QAAwB;AACxB;;;AAEA;;eAEE,SAAc;AACnB;;AACA;;;;GAEG;;;;AAGE,kBAAW,IAAI,MAAe;AAC7B,wBAAe,OAAM,MAAO,QAAK;AACjC,wBAAgB,GAAG,iBAAW,CAAO,EAAI,KAAE;AAC3C,qBAAa,CAAO;AAChB;;;OAgEL,oBAAmB;AAClB,gBAAQ,QAAG,UAAS;AACtB,iBAAU,cAAS,aAAc;AACjC,iBAAW,MAAK;;;uBAEpB;YACI;AACH;;;AAGD;AACA;;;eAGK,0BAAyB;AAC1B,oBAAY,cAAS,QAAe,CAAW;AAC9C;;uBACL;AACC,qBAAW;AACX,MAAG,iBAAe;AACf;;;;cAiBC,UAAiB;AAItB,sBAAI,iBAAS;;;QAET,cAAW,EACR,cAAa,CAAC;oBAEZ,QAAe;AACrB,4BAAyB;CACzB;;;AAGH;;;CAGDO,oBAAO;;;AAGN,QAAM,CAAC,mBAA0B;aACvB,kBAAiB;IACzB,SAAS,CAAC,oBAAmB,EAAG;aACtB,kBAAU,IAAW;IAC/B;;;;;;;CAQ4B,cAAS;;;;;;;CAIrB,eAAO;;;;;;;CAQL,eAAW;;;;;;;;;;;CAYf,kCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;AA1JlC,GAAG,eAAW;CACb,kBAAc;AACd,6BAAS;AACT,sBAA0B;AACtB,sBAAc,CAAG,eAAS,cAA2B;AACrD;;;;;AAGL,CAAG,eAAW,YAAY,MAAS;AAClC,4BAAO,CAAG,MAAC;AACX,2BAAM,CAAG;AACT,4BAAsB;AACtB,sBAAyB;UACnB,aAAY,aAAc;AAC1B,sBAAO,CAAO,eAAY;AAC1B;;AAEF,wBAAY,aACT,IAAa,MAAC;;;;;;;AAOtB,GAAG,SAAQ,CAAE,CAAC,eAAc;AAC3B,iBAA0B;AAC1B;;;;;AAGD,GAAG,eAAW;CACb;;;;;AAGD,GAAG,iBAAiB,CAAE,aAAW,CAAG,UAAa;AAChD,kCAAa,CAAG,WAAQ;AACxB;;;;;AAGD,CAAG;;;;AAMH,GAAG,iBAAiB,CAAE;AACrB,gBAAgB;AAChB;;;;;AAGD,GAAG,iBAAiB,CAAE;AACrB,gBAAe;AACf;;;;;AAGD,GAAG,iBAAiB,CAAE;AACrB,YAAQ,CAAC,CAAM;AACf,gBAAc;AACd;;;;;AA2BD,GAAG,aAAuB,iBAAO;AAChC,8CAAoB,YAAgB,EAAI;AAElC,oBAAU,CAAG,UAAQ,cAAC,CAAc,CAAC,SAAY;AACjD,mBAAS,CAAG,UAAQ,CAAC,cAAc,CAAC,CAAW;AAEjD;;AACA,wBAAa;KAChB,yBAAwB;CACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjJO,0BAAuB;;;;;AA2D7B;;;;;;;;;;;;;;;;CAVFR,eAWQ;GAJP,MAEM;;;;;;;;;;AACL;;;;;;;;;;;;;;;;;;;;AAbmB,eAAI,IAAC,aAAa;AAAI;;;;;;;;;;;;;;;;;KAVhB,CAAoB;;;;CAD/CA,eAYQ;GALP,MAGM;;;;;;;;;;;AACc,iBAAI,IAAC,aAAa;AAAI;;;KAVhB,CAAoB;QAAG,UAAa;;;;;;;;;;;;;;;;;;;;;0BAFlD;;;;;;;;;;;;;;gCADsB,eAAS;;;;CAD9CA,aA8BK;GA7BJ,MAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA5BxD,uBAAY,CAAK;AACjB,uBAAgB;MAChB,OAAgB;MAChB,OAAkB;MAClB,kBAAmB;gBACnB;KAEP,cAAuB;;;CAG3B,oBAAO;CACN;;;iBAGK,cAAmB;AACpB;;EAEJ,qBAAc;SACV;AACH,YAAQ,EAAG;AACX;;;AAGD;;;;AAUE;CACA;;;;AAaA;CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BCrDe;;;;;;;;;;;;0BA4OP,cAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA9BX,2BAAa,QAAK,CAAY;AAczB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAQiB,EAAM,GAAG,CAAC;;;;;;;;;;;qBAJ1B,oBAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAjBU,mBAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAN/B,gBAAK;AACJ,gCAAa,CAAK,UAAQ;;;;;;;;;QAG7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHG,8FAAa,CAAK,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA/J3B,sBAAgB,CAAG,KAAG;AACtB;;;;AA9BK,YAAK,GAAoB,IAAI;MAC7B,MAAa;MACb,WAAY;AACZ,iBAAU,YAAO;OACjB,OAAO,QAIa,YAAc;AAClC,gBAAO,CAAG,OAAK;AACf,gBAAS,OAAG,CAAK;MACjB,kBAAmB;OACnB,oBAAiB;MACjB,cAAiB;;;;;;;;;AAQxB;;KACA,QAAwB;AACxB,WAAO,GAAE;AACT,mBAAiC,IAAS;IAC1C,qCAAc;AACd;AACA,iBAAS,EAAK;IAId,gBAAY;;;iBAMP,IAAW;EACnB,eAAe;8BACP,CAA2B;;;;;aAKhC,CAAS;CACZ;;;AAGK;;iBAiBA,GAAa,cAClB,CAA4B,EAC5B,KAA6C;AAEzC,mBAAW,CAAO,aAAK,CAAK,YAAa;AACvC,cAAG,SAAS,UAAa,MAAE,UAAc,UAAU,QAAQ;kBACjE,KAAK;EAEL;;;CAGD,cAAS;AACJ,gBAAS,GAAI;AAChB;;;;;;;;GAQA,MAAM;iBACK;AACN,mBAAU,cAAY;AAC1B;;;;AAGG,YAAG,UAAY,YAAY,sBAAgB;AAC9C;;;;;;;AAKE;;QACA,iBAAS;iBACH,cAAe,IAAQ;AAG1B,iBAAQ,cAAc;AAC5B,WAAQ,iBAAO,eAAwB,eAAqB;AAC5D;;;;AAGA,gBAAS,YAAgB,IAAgB;AACxC;;;GAED,aAAS,cAAiB,QAAM;AAC/B,oCAAY,EAAK;UACX,aAAa,CAAC,YAAY,CAAE,gBAAQ;gBACpC;CACN;;;;AAGF;;;AAGc,+BAAa,YAAiB;AACxC,aAAM,EAAS,eAAM,CAAI,MAAC;;;eAEnB;2BACJ,OAAO,uBAAwB,CAAC,EAAE;AACxC;;;iBAEU;GACV;;AAEI,gBAAS,UAAU,EAAE,OAAO;GAChC,aAAa,EAAC,gBAAW,EAAQ;;;;;iBAcpB,WAAM;AACpB,4BAAS,CAAG;AACZ,aAA0B;AACrB,cAAM,WAAQ,YAAa;AAChC;;WACI,MAAS;GACZ;;;;UAIO,QAAK;EACb,QAAQ,CAAC,QAAQ,CAAE;AACnB,cAAgB;AAChB,uBAAI,CAAG,MAAE;AACT;;;AAGQ,uBAAc,SAAM;AAC5B,2BAAQ;EACR,QAAQ,CAAC,QAAQ,CAAE,OAAM;EACzB;;;cAGY;AACZ;;WAEI,gBAAS;AACZ,WAAQ,CAAC,IAAgB;AACzB;;gBACW;AACV;;;GAED,eAAc;AACd,eAAgB;AAChB;;;;;;;;;;;;;;AAgCa,wCAAa,SAAS,QAAS;AAW7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA9MjB,GAAG;;;;AAwHH,GAAO,sDAA+C,EAAK,MAAK;AAC/D;;AACI,kBAAU,kBAAc;AACvB,kBAAS,GAAkB,eAAc,CAAC;4BAC9C,SAAc;KACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTQ;MAA+C,CAAQ;eAAU;;aAEjE,SAAK;;;;;;;;;;;;;;;;;;;;;;;AAFL;KAA+C,CAAQ;;;kEACnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eA/BG;;aAEP,SAAK;;;;;;;;;;;;;;;;;;;;;;kEADD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EM;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAnCN;;AACN,wBAAM;CACR;;;;;;;;;;;;;;;;;;oBAKG,GAAM;;;;;;;AAyBP,sBAAM,kBAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhCL;;AACN,2DAAM,eAAK;;;;;;;;;sEAMV;;;;;;AAyBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA9DM;;AACN,wBAAM;CACR;;;;;;;;;;;;;AAIE,4BAAM,CAAC,KAAI;;;;wBAIV,CAAM;;;;;;;;;;;;;;;;;;;;;;;;;AAVD;;AACN,2DAAM,eAAK;;;;;;;AAKX,mFAAO,MAAI;;;;+DAIV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA5HE,mBAAY;OACZ,cAAY;AACZ,kBAAU,GAAI;MACd,aAAoB;AACpB,cAAK,CAAoB,IAAI;MAC7B,QAIgB;MAChB,MAAa;MACb,WAAY;MACZ,WAAmB;MACnB,UAAwB;AACxB,mBAAY,IAAI;AAChB,gBAAuB,GAAI;AAC3B,qBAAgC,OAAS;MACzC,iBAA6B;AAC7B,2BAAgB;AAChB,2BAAoB,KAAG,EAAI;AAC3B,wBAAiB,GAAG,KAAK;OACzB,mBAAgB;MAChB,UAAgB;MAChB,UAAkB;cAiB3B;AAEE;KACA,aAAuB;KAGvB,aAAsC;AAEtC;;mBAME,SAAkB;AACnB;;;;AAIJ;;;;;QAgBK;AACL,WAAQ,CAAE;AACV,eAAW,kBAAiB,wBAA2B;AACvD;AACA,UAAQ,EAAE;AACV,WAAS;AACT,aAAW,CAAC;AACZ,aAAW,EAAE,CAAC;AACd;EACU,SAAQ;AAClB,YAAS,CAAE,KAAE;AACb,eAAY,kBAAI;EAChB;;;AAGQ,sBAAY,EAAG,QAAM;AACtB,cAAK,EAAE,SAAU;AACpB,cAAS,CAAE;AACX;;AACJ,gCAAc,OAAG,UAAc;kBAC/B,cAAc,CAAC,OAAM,EAAG,OAAiC;kBACzD,cAAc,CAAC;AACf;;;qBA8BY,GAAC,IAAK,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAE,EAAC,CAAC,MAAM;;;;;;;;;;0BA0BpC,OAAM;AACnB,yBAAQ,QAAM;AACd;;;yBAEW,SAAM;uBAQH,WAAM,CAAC,QAAQ,CAAC,CAAM;uBACtB,YAAO,SAAS,CAAM;wBACrB,WAAM,QAAC,CAAQ,CAAC,IAAO;uBACxB,WAAM,QAAC,CAAQ,CAAC,GAAM;8BACvB,GAAM,CAAC,WAAc;kCACT,WAAM,CAAC,QAAQ,CAAC,CAAiB;kCACjC,WAAM,QAAC,CAAQ,CAAC,cAAiB;oCAClC,SAAO,QAAQ,CAAC,CAAgB;yBACxC,WAAM,QAAC,CAAQ,CAAC,KAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAjI1C;;;;AAMD,GAAO,aAAS,kBAAkB,QAAI;AACrC;;;;;CAWA;MACI,WAAK,KAAS,SAAY,QAAK;AAClC,+BAAS;KACT;;;;;;AAMF,gBAAc","names":["insert","append","__awaiter","this","view","offset","create_if_block_2","attr","onMount","set_data","RecordPlugin","create_if_block_1"],"sources":["../../../../js/icons/src/Backward.svelte","../../../../js/icons/src/Forward.svelte","../../../../js/icons/src/Music.svelte","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/decoder.js","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/fetcher.js","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/event-emitter.js","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/player.js","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/draggable.js","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/renderer.js","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/timer.js","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/webaudio.js","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/wavesurfer.js","../../../../js/audio/shared/audioBufferToWav.ts","../../../../js/audio/shared/utils.ts","../../../../js/audio/shared/WaveformControls.svelte","../../../../js/audio/player/AudioPlayer.svelte","../../../../js/audio/static/StaticAudio.svelte","../../../../node_modules/.pnpm/wavesurfer.js@7.4.2/node_modules/wavesurfer.js/dist/plugins/record.js","../../../../js/audio/shared/WaveformRecordControls.svelte","../../../../js/audio/recorder/AudioRecorder.svelte","../../../../js/audio/streaming/StreamAudio.svelte","../../../../js/audio/interactive/InteractiveAudio.svelte","../../../../js/audio/Index.svelte"],"sourcesContent":["<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"24px\"\n\theight=\"24px\"\n\tfill=\"currentColor\"\n\tstroke-width=\"1.5\"\n\tviewBox=\"0 0 24 24\"\n\tcolor=\"currentColor\"\n\t><path\n\t\tstroke=\"currentColor\"\n\t\tstroke-width=\"1.5\"\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\td=\"M21.044 5.704a.6.6 0 0 1 .956.483v11.626a.6.6 0 0 1-.956.483l-7.889-5.813a.6.6 0 0 1 0-.966l7.89-5.813ZM10.044 5.704a.6.6 0 0 1 .956.483v11.626a.6.6 0 0 1-.956.483l-7.888-5.813a.6.6 0 0 1 0-.966l7.888-5.813Z\"\n\t/></svg\n>\n","<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"24px\"\n\theight=\"24px\"\n\tfill=\"currentColor\"\n\tstroke-width=\"1.5\"\n\tviewBox=\"0 0 24 24\"\n\tcolor=\"currentColor\"\n\t><path\n\t\tstroke=\"currentColor\"\n\t\tstroke-width=\"1.5\"\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t\td=\"M2.956 5.704A.6.6 0 0 0 2 6.187v11.626a.6.6 0 0 0 .956.483l7.889-5.813a.6.6 0 0 0 0-.966l-7.89-5.813ZM13.956 5.704a.6.6 0 0 0-.956.483v11.626a.6.6 0 0 0 .956.483l7.889-5.813a.6.6 0 0 0 0-.966l-7.89-5.813Z\"\n\t/></svg\n>\n","<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 24 24\"\n\tfill=\"none\"\n\tstroke=\"currentColor\"\n\tstroke-width=\"1.5\"\n\tstroke-linecap=\"round\"\n\tstroke-linejoin=\"round\"\n\tclass=\"feather feather-music\"\n>\n\t<path d=\"M9 18V5l12-2v13\" />\n\t<circle cx=\"6\" cy=\"18\" r=\"3\" />\n\t<circle cx=\"18\" cy=\"16\" r=\"3\" />\n</svg>\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/** Decode an array buffer into an audio buffer */\nfunction decode(audioData, sampleRate) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const audioCtx = new AudioContext({ sampleRate });\n        const decode = audioCtx.decodeAudioData(audioData);\n        return decode.finally(() => audioCtx.close());\n    });\n}\n/** Normalize peaks to -1..1 */\nfunction normalize(channelData) {\n    const firstChannel = channelData[0];\n    if (firstChannel.some((n) => n > 1 || n < -1)) {\n        const length = firstChannel.length;\n        let max = 0;\n        for (let i = 0; i < length; i++) {\n            const absN = Math.abs(firstChannel[i]);\n            if (absN > max)\n                max = absN;\n        }\n        for (const channel of channelData) {\n            for (let i = 0; i < length; i++) {\n                channel[i] /= max;\n            }\n        }\n    }\n    return channelData;\n}\n/** Create an audio buffer from pre-decoded audio data */\nfunction createBuffer(channelData, duration) {\n    // If a single array of numbers is passed, make it an array of arrays\n    if (typeof channelData[0] === 'number')\n        channelData = [channelData];\n    // Normalize to -1..1\n    normalize(channelData);\n    return {\n        duration,\n        length: channelData[0].length,\n        sampleRate: channelData[0].length / duration,\n        numberOfChannels: channelData.length,\n        getChannelData: (i) => channelData === null || channelData === void 0 ? void 0 : channelData[i],\n        copyFromChannel: AudioBuffer.prototype.copyFromChannel,\n        copyToChannel: AudioBuffer.prototype.copyToChannel,\n    };\n}\nconst Decoder = {\n    decode,\n    createBuffer,\n};\nexport default Decoder;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction fetchBlob(url, progressCallback, requestInit) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        // Fetch the resource\n        const response = yield fetch(url, requestInit);\n        // Read the data to track progress\n        {\n            const reader = (_a = response.clone().body) === null || _a === void 0 ? void 0 : _a.getReader();\n            const contentLength = Number((_b = response.headers) === null || _b === void 0 ? void 0 : _b.get('Content-Length'));\n            let receivedLength = 0;\n            // Process the data\n            const processChunk = (done, value) => __awaiter(this, void 0, void 0, function* () {\n                if (done)\n                    return;\n                // Add to the received length\n                receivedLength += (value === null || value === void 0 ? void 0 : value.length) || 0;\n                const percentage = Math.round((receivedLength / contentLength) * 100);\n                progressCallback(percentage);\n                // Continue reading data\n                return reader === null || reader === void 0 ? void 0 : reader.read().then(({ done, value }) => processChunk(done, value));\n            });\n            reader === null || reader === void 0 ? void 0 : reader.read().then(({ done, value }) => processChunk(done, value));\n        }\n        return response.blob();\n    });\n}\nconst Fetcher = {\n    fetchBlob,\n};\nexport default Fetcher;\n","/** A simple event emitter that can be used to listen to and emit events. */\nclass EventEmitter {\n    constructor() {\n        this.listeners = {};\n        /** Subscribe to an event. Returns an unsubscribe function. */\n        this.on = this.addEventListener;\n        /** Unsubscribe from an event */\n        this.un = this.removeEventListener;\n    }\n    /** Add an event listener */\n    addEventListener(event, listener, options) {\n        if (!this.listeners[event]) {\n            this.listeners[event] = new Set();\n        }\n        this.listeners[event].add(listener);\n        if (options === null || options === void 0 ? void 0 : options.once) {\n            const unsubscribeOnce = () => {\n                this.removeEventListener(event, unsubscribeOnce);\n                this.removeEventListener(event, listener);\n            };\n            this.addEventListener(event, unsubscribeOnce);\n            return unsubscribeOnce;\n        }\n        return () => this.removeEventListener(event, listener);\n    }\n    removeEventListener(event, listener) {\n        var _a;\n        (_a = this.listeners[event]) === null || _a === void 0 ? void 0 : _a.delete(listener);\n    }\n    /** Subscribe to an event only once */\n    once(event, listener) {\n        return this.on(event, listener, { once: true });\n    }\n    /** Clear all events */\n    unAll() {\n        this.listeners = {};\n    }\n    /** Emit an event */\n    emit(eventName, ...args) {\n        if (this.listeners[eventName]) {\n            this.listeners[eventName].forEach((listener) => listener(...args));\n        }\n    }\n}\nexport default EventEmitter;\n","import EventEmitter from './event-emitter.js';\nclass Player extends EventEmitter {\n    constructor(options) {\n        super();\n        this.isExternalMedia = false;\n        if (options.media) {\n            this.media = options.media;\n            this.isExternalMedia = true;\n        }\n        else {\n            this.media = document.createElement('audio');\n        }\n        // Controls\n        if (options.mediaControls) {\n            this.media.controls = true;\n        }\n        // Autoplay\n        if (options.autoplay) {\n            this.media.autoplay = true;\n        }\n        // Speed\n        if (options.playbackRate != null) {\n            this.onceMediaEvent('canplay', () => {\n                if (options.playbackRate != null) {\n                    this.media.playbackRate = options.playbackRate;\n                }\n            });\n        }\n    }\n    onMediaEvent(event, callback, options) {\n        this.media.addEventListener(event, callback, options);\n        return () => this.media.removeEventListener(event, callback);\n    }\n    onceMediaEvent(event, callback) {\n        return this.onMediaEvent(event, callback, { once: true });\n    }\n    getSrc() {\n        return this.media.currentSrc || this.media.src || '';\n    }\n    revokeSrc() {\n        const src = this.getSrc();\n        if (src.startsWith('blob:')) {\n            URL.revokeObjectURL(src);\n        }\n    }\n    setSrc(url, blob) {\n        const src = this.getSrc();\n        if (src === url)\n            return;\n        this.revokeSrc();\n        const newSrc = blob instanceof Blob ? URL.createObjectURL(blob) : url;\n        this.media.src = newSrc;\n        this.media.load();\n    }\n    destroy() {\n        this.media.pause();\n        if (this.isExternalMedia)\n            return;\n        this.media.remove();\n        this.revokeSrc();\n        this.media.src = '';\n        // Load resets the media element to its initial state\n        this.media.load();\n    }\n    setMediaElement(element) {\n        this.media = element;\n    }\n    /** Start playing the audio */\n    play() {\n        return this.media.play();\n    }\n    /** Pause the audio */\n    pause() {\n        this.media.pause();\n    }\n    /** Check if the audio is playing */\n    isPlaying() {\n        return !this.media.paused && !this.media.ended;\n    }\n    /** Jumpt to a specific time in the audio (in seconds) */\n    setTime(time) {\n        this.media.currentTime = time;\n    }\n    /** Get the duration of the audio in seconds */\n    getDuration() {\n        return this.media.duration;\n    }\n    /** Get the current audio position in seconds */\n    getCurrentTime() {\n        return this.media.currentTime;\n    }\n    /** Get the audio volume */\n    getVolume() {\n        return this.media.volume;\n    }\n    /** Set the audio volume */\n    setVolume(volume) {\n        this.media.volume = volume;\n    }\n    /** Get the audio muted state */\n    getMuted() {\n        return this.media.muted;\n    }\n    /** Mute or unmute the audio */\n    setMuted(muted) {\n        this.media.muted = muted;\n    }\n    /** Get the playback speed */\n    getPlaybackRate() {\n        return this.media.playbackRate;\n    }\n    /** Set the playback speed, pass an optional false to NOT preserve the pitch */\n    setPlaybackRate(rate, preservePitch) {\n        // preservePitch is true by default in most browsers\n        if (preservePitch != null) {\n            this.media.preservesPitch = preservePitch;\n        }\n        this.media.playbackRate = rate;\n    }\n    /** Get the HTML media element */\n    getMediaElement() {\n        return this.media;\n    }\n    /** Set a sink id to change the audio output device */\n    setSinkId(sinkId) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setSinkId\n        const media = this.media;\n        return media.setSinkId(sinkId);\n    }\n}\nexport default Player;\n","export function makeDraggable(element, onDrag, onStart, onEnd, threshold = 5) {\n    let unsub = () => {\n        return;\n    };\n    if (!element)\n        return unsub;\n    const down = (e) => {\n        // Ignore the right mouse button\n        if (e.button === 2)\n            return;\n        e.preventDefault();\n        e.stopPropagation();\n        element.style.touchAction = 'none';\n        let startX = e.clientX;\n        let startY = e.clientY;\n        let isDragging = false;\n        const move = (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            const x = e.clientX;\n            const y = e.clientY;\n            if (isDragging || Math.abs(x - startX) >= threshold || Math.abs(y - startY) >= threshold) {\n                const { left, top } = element.getBoundingClientRect();\n                if (!isDragging) {\n                    isDragging = true;\n                    onStart === null || onStart === void 0 ? void 0 : onStart(startX - left, startY - top);\n                }\n                onDrag(x - startX, y - startY, x - left, y - top);\n                startX = x;\n                startY = y;\n            }\n        };\n        const click = (e) => {\n            if (isDragging) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        };\n        const up = () => {\n            element.style.touchAction = '';\n            if (isDragging) {\n                onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n            }\n            unsub();\n        };\n        document.addEventListener('pointermove', move);\n        document.addEventListener('pointerup', up);\n        document.addEventListener('pointerleave', up);\n        document.addEventListener('click', click, true);\n        unsub = () => {\n            document.removeEventListener('pointermove', move);\n            document.removeEventListener('pointerup', up);\n            document.removeEventListener('pointerleave', up);\n            setTimeout(() => {\n                document.removeEventListener('click', click, true);\n            }, 10);\n        };\n    };\n    element.addEventListener('pointerdown', down);\n    return () => {\n        unsub();\n        element.removeEventListener('pointerdown', down);\n    };\n}\n","import { makeDraggable } from './draggable.js';\nimport EventEmitter from './event-emitter.js';\nclass Renderer extends EventEmitter {\n    constructor(options, audioElement) {\n        super();\n        this.timeouts = [];\n        this.isScrolling = false;\n        this.audioData = null;\n        this.resizeObserver = null;\n        this.isDragging = false;\n        this.options = options;\n        const parent = this.parentFromOptionsContainer(options.container);\n        this.parent = parent;\n        const [div, shadow] = this.initHtml();\n        parent.appendChild(div);\n        this.container = div;\n        this.scrollContainer = shadow.querySelector('.scroll');\n        this.wrapper = shadow.querySelector('.wrapper');\n        this.canvasWrapper = shadow.querySelector('.canvases');\n        this.progressWrapper = shadow.querySelector('.progress');\n        this.cursor = shadow.querySelector('.cursor');\n        if (audioElement) {\n            shadow.appendChild(audioElement);\n        }\n        this.initEvents();\n    }\n    parentFromOptionsContainer(container) {\n        let parent;\n        if (typeof container === 'string') {\n            parent = document.querySelector(container);\n        }\n        else if (container instanceof HTMLElement) {\n            parent = container;\n        }\n        if (!parent) {\n            throw new Error('Container not found');\n        }\n        return parent;\n    }\n    initEvents() {\n        const getClickPosition = (e) => {\n            const rect = this.wrapper.getBoundingClientRect();\n            const x = e.clientX - rect.left;\n            const y = e.clientX - rect.left;\n            const relativeX = x / rect.width;\n            const relativeY = y / rect.height;\n            return [relativeX, relativeY];\n        };\n        // Add a click listener\n        this.wrapper.addEventListener('click', (e) => {\n            const [x, y] = getClickPosition(e);\n            this.emit('click', x, y);\n        });\n        // Add a double click listener\n        this.wrapper.addEventListener('dblclick', (e) => {\n            const [x, y] = getClickPosition(e);\n            this.emit('dblclick', x, y);\n        });\n        // Drag\n        if (this.options.dragToSeek) {\n            this.initDrag();\n        }\n        // Add a scroll listener\n        this.scrollContainer.addEventListener('scroll', () => {\n            const { scrollLeft, scrollWidth, clientWidth } = this.scrollContainer;\n            const startX = scrollLeft / scrollWidth;\n            const endX = (scrollLeft + clientWidth) / scrollWidth;\n            this.emit('scroll', startX, endX);\n        });\n        // Re-render the waveform on container resize\n        const delay = this.createDelay(100);\n        this.resizeObserver = new ResizeObserver(() => {\n            delay(() => this.reRender());\n        });\n        this.resizeObserver.observe(this.scrollContainer);\n    }\n    initDrag() {\n        makeDraggable(this.wrapper, \n        // On drag\n        (_, __, x) => {\n            this.emit('drag', Math.max(0, Math.min(1, x / this.wrapper.getBoundingClientRect().width)));\n        }, \n        // On start drag\n        () => (this.isDragging = true), \n        // On end drag\n        () => (this.isDragging = false));\n    }\n    getHeight() {\n        const defaultHeight = 128;\n        if (this.options.height == null)\n            return defaultHeight;\n        if (!isNaN(Number(this.options.height)))\n            return Number(this.options.height);\n        if (this.options.height === 'auto')\n            return this.parent.clientHeight || defaultHeight;\n        return defaultHeight;\n    }\n    initHtml() {\n        const div = document.createElement('div');\n        const shadow = div.attachShadow({ mode: 'open' });\n        shadow.innerHTML = `\n      <style>\n        :host {\n          user-select: none;\n          min-width: 1px;\n        }\n        :host audio {\n          display: block;\n          width: 100%;\n        }\n        :host .scroll {\n          overflow-x: auto;\n          overflow-y: hidden;\n          width: 100%;\n          position: relative;\n        }\n        :host .noScrollbar {\n          scrollbar-color: transparent;\n          scrollbar-width: none;\n        }\n        :host .noScrollbar::-webkit-scrollbar {\n          display: none;\n          -webkit-appearance: none;\n        }\n        :host .wrapper {\n          position: relative;\n          overflow: visible;\n          z-index: 2;\n        }\n        :host .canvases {\n          min-height: ${this.getHeight()}px;\n        }\n        :host .canvases > div {\n          position: relative;\n        }\n        :host canvas {\n          display: block;\n          position: absolute;\n          top: 0;\n          image-rendering: pixelated;\n        }\n        :host .progress {\n          pointer-events: none;\n          position: absolute;\n          z-index: 2;\n          top: 0;\n          left: 0;\n          width: 0;\n          height: 100%;\n          overflow: hidden;\n        }\n        :host .progress > div {\n          position: relative;\n        }\n        :host .cursor {\n          pointer-events: none;\n          position: absolute;\n          z-index: 5;\n          top: 0;\n          left: 0;\n          height: 100%;\n          border-radius: 2px;\n        }\n      </style>\n\n      <div class=\"scroll\" part=\"scroll\">\n        <div class=\"wrapper\" part=\"wrapper\">\n          <div class=\"canvases\"></div>\n          <div class=\"progress\" part=\"progress\"></div>\n          <div class=\"cursor\" part=\"cursor\"></div>\n        </div>\n      </div>\n    `;\n        return [div, shadow];\n    }\n    /** Wavesurfer itself calls this method. Do not call it manually. */\n    setOptions(options) {\n        if (this.options.container !== options.container) {\n            const newParent = this.parentFromOptionsContainer(options.container);\n            newParent.appendChild(this.container);\n            this.parent = newParent;\n        }\n        if (options.dragToSeek && !this.options.dragToSeek) {\n            this.initDrag();\n        }\n        this.options = options;\n        // Re-render the waveform\n        this.reRender();\n    }\n    getWrapper() {\n        return this.wrapper;\n    }\n    getScroll() {\n        return this.scrollContainer.scrollLeft;\n    }\n    destroy() {\n        var _a;\n        this.container.remove();\n        (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n    }\n    createDelay(delayMs = 10) {\n        const context = {};\n        this.timeouts.push(context);\n        return (callback) => {\n            context.timeout && clearTimeout(context.timeout);\n            context.timeout = setTimeout(callback, delayMs);\n        };\n    }\n    // Convert array of color values to linear gradient\n    convertColorValues(color) {\n        if (!Array.isArray(color))\n            return color || '';\n        if (color.length < 2)\n            return color[0] || '';\n        const canvasElement = document.createElement('canvas');\n        const ctx = canvasElement.getContext('2d');\n        const gradient = ctx.createLinearGradient(0, 0, 0, canvasElement.height);\n        const colorStopPercentage = 1 / (color.length - 1);\n        color.forEach((color, index) => {\n            const offset = index * colorStopPercentage;\n            gradient.addColorStop(offset, color);\n        });\n        return gradient;\n    }\n    renderBarWaveform(channelData, options, ctx, vScale) {\n        const topChannel = channelData[0];\n        const bottomChannel = channelData[1] || channelData[0];\n        const length = topChannel.length;\n        const { width, height } = ctx.canvas;\n        const halfHeight = height / 2;\n        const pixelRatio = window.devicePixelRatio || 1;\n        const barWidth = options.barWidth ? options.barWidth * pixelRatio : 1;\n        const barGap = options.barGap ? options.barGap * pixelRatio : options.barWidth ? barWidth / 2 : 0;\n        const barRadius = options.barRadius || 0;\n        const barIndexScale = width / (barWidth + barGap) / length;\n        const rectFn = barRadius && 'roundRect' in ctx ? 'roundRect' : 'rect';\n        ctx.beginPath();\n        let prevX = 0;\n        let maxTop = 0;\n        let maxBottom = 0;\n        for (let i = 0; i <= length; i++) {\n            const x = Math.round(i * barIndexScale);\n            if (x > prevX) {\n                const topBarHeight = Math.round(maxTop * halfHeight * vScale);\n                const bottomBarHeight = Math.round(maxBottom * halfHeight * vScale);\n                const barHeight = topBarHeight + bottomBarHeight || 1;\n                // Vertical alignment\n                let y = halfHeight - topBarHeight;\n                if (options.barAlign === 'top') {\n                    y = 0;\n                }\n                else if (options.barAlign === 'bottom') {\n                    y = height - barHeight;\n                }\n                ctx[rectFn](prevX * (barWidth + barGap), y, barWidth, barHeight, barRadius);\n                prevX = x;\n                maxTop = 0;\n                maxBottom = 0;\n            }\n            const magnitudeTop = Math.abs(topChannel[i] || 0);\n            const magnitudeBottom = Math.abs(bottomChannel[i] || 0);\n            if (magnitudeTop > maxTop)\n                maxTop = magnitudeTop;\n            if (magnitudeBottom > maxBottom)\n                maxBottom = magnitudeBottom;\n        }\n        ctx.fill();\n        ctx.closePath();\n    }\n    renderLineWaveform(channelData, _options, ctx, vScale) {\n        const drawChannel = (index) => {\n            const channel = channelData[index] || channelData[0];\n            const length = channel.length;\n            const { height } = ctx.canvas;\n            const halfHeight = height / 2;\n            const hScale = ctx.canvas.width / length;\n            ctx.moveTo(0, halfHeight);\n            let prevX = 0;\n            let max = 0;\n            for (let i = 0; i <= length; i++) {\n                const x = Math.round(i * hScale);\n                if (x > prevX) {\n                    const h = Math.round(max * halfHeight * vScale) || 1;\n                    const y = halfHeight + h * (index === 0 ? -1 : 1);\n                    ctx.lineTo(prevX, y);\n                    prevX = x;\n                    max = 0;\n                }\n                const value = Math.abs(channel[i] || 0);\n                if (value > max)\n                    max = value;\n            }\n            ctx.lineTo(prevX, halfHeight);\n        };\n        ctx.beginPath();\n        drawChannel(0);\n        drawChannel(1);\n        ctx.fill();\n        ctx.closePath();\n    }\n    renderWaveform(channelData, options, ctx) {\n        ctx.fillStyle = this.convertColorValues(options.waveColor);\n        // Custom rendering function\n        if (options.renderFunction) {\n            options.renderFunction(channelData, ctx);\n            return;\n        }\n        // Vertical scaling\n        let vScale = options.barHeight || 1;\n        if (options.normalize) {\n            const max = Array.from(channelData[0]).reduce((max, value) => Math.max(max, Math.abs(value)), 0);\n            vScale = max ? 1 / max : 1;\n        }\n        // Render waveform as bars\n        if (options.barWidth || options.barGap || options.barAlign) {\n            this.renderBarWaveform(channelData, options, ctx, vScale);\n            return;\n        }\n        // Render waveform as a polyline\n        this.renderLineWaveform(channelData, options, ctx, vScale);\n    }\n    renderSingleCanvas(channelData, options, width, height, start, end, canvasContainer, progressContainer) {\n        const pixelRatio = window.devicePixelRatio || 1;\n        const canvas = document.createElement('canvas');\n        const length = channelData[0].length;\n        canvas.width = Math.round((width * (end - start)) / length);\n        canvas.height = height * pixelRatio;\n        canvas.style.width = `${Math.floor(canvas.width / pixelRatio)}px`;\n        canvas.style.height = `${height}px`;\n        canvas.style.left = `${Math.floor((start * width) / pixelRatio / length)}px`;\n        canvasContainer.appendChild(canvas);\n        const ctx = canvas.getContext('2d');\n        this.renderWaveform(channelData.map((channel) => channel.slice(start, end)), options, ctx);\n        // Draw a progress canvas\n        if (canvas.width > 0 && canvas.height > 0) {\n            const progressCanvas = canvas.cloneNode();\n            const progressCtx = progressCanvas.getContext('2d');\n            progressCtx.drawImage(canvas, 0, 0);\n            // Set the composition method to draw only where the waveform is drawn\n            progressCtx.globalCompositeOperation = 'source-in';\n            progressCtx.fillStyle = this.convertColorValues(options.progressColor);\n            // This rectangle acts as a mask thanks to the composition method\n            progressCtx.fillRect(0, 0, canvas.width, canvas.height);\n            progressContainer.appendChild(progressCanvas);\n        }\n    }\n    renderChannel(channelData, options, width) {\n        // A container for canvases\n        const canvasContainer = document.createElement('div');\n        const height = this.getHeight();\n        canvasContainer.style.height = `${height}px`;\n        this.canvasWrapper.style.minHeight = `${height}px`;\n        this.canvasWrapper.appendChild(canvasContainer);\n        // A container for progress canvases\n        const progressContainer = canvasContainer.cloneNode();\n        this.progressWrapper.appendChild(progressContainer);\n        // Determine the currently visible part of the waveform\n        const { scrollLeft, scrollWidth, clientWidth } = this.scrollContainer;\n        const len = channelData[0].length;\n        const scale = len / scrollWidth;\n        let viewportWidth = Math.min(Renderer.MAX_CANVAS_WIDTH, clientWidth);\n        // Adjust width to avoid gaps between canvases when using bars\n        if (options.barWidth || options.barGap) {\n            const barWidth = options.barWidth || 0.5;\n            const barGap = options.barGap || barWidth / 2;\n            const totalBarWidth = barWidth + barGap;\n            if (viewportWidth % totalBarWidth !== 0) {\n                viewportWidth = Math.floor(viewportWidth / totalBarWidth) * totalBarWidth;\n            }\n        }\n        const start = Math.floor(Math.abs(scrollLeft) * scale);\n        const end = Math.floor(start + viewportWidth * scale);\n        const viewportLen = end - start;\n        // Draw a portion of the waveform from start peak to end peak\n        const draw = (start, end) => {\n            this.renderSingleCanvas(channelData, options, width, height, Math.max(0, start), Math.min(end, len), canvasContainer, progressContainer);\n        };\n        // Draw the waveform in viewport chunks, each with a delay\n        const headDelay = this.createDelay();\n        const tailDelay = this.createDelay();\n        const renderHead = (fromIndex, toIndex) => {\n            draw(fromIndex, toIndex);\n            if (fromIndex > 0) {\n                headDelay(() => {\n                    renderHead(fromIndex - viewportLen, toIndex - viewportLen);\n                });\n            }\n        };\n        const renderTail = (fromIndex, toIndex) => {\n            draw(fromIndex, toIndex);\n            if (toIndex < len) {\n                tailDelay(() => {\n                    renderTail(fromIndex + viewportLen, toIndex + viewportLen);\n                });\n            }\n        };\n        renderHead(start, end);\n        if (end < len) {\n            renderTail(end, end + viewportLen);\n        }\n    }\n    render(audioData) {\n        // Clear previous timeouts\n        this.timeouts.forEach((context) => context.timeout && clearTimeout(context.timeout));\n        this.timeouts = [];\n        // Clear the canvases\n        this.canvasWrapper.innerHTML = '';\n        this.progressWrapper.innerHTML = '';\n        this.wrapper.style.width = '';\n        // Width\n        if (this.options.width != null) {\n            this.scrollContainer.style.width =\n                typeof this.options.width === 'number' ? `${this.options.width}px` : this.options.width;\n        }\n        // Determine the width of the waveform\n        const pixelRatio = window.devicePixelRatio || 1;\n        const parentWidth = this.scrollContainer.clientWidth;\n        const scrollWidth = Math.ceil(audioData.duration * (this.options.minPxPerSec || 0));\n        // Whether the container should scroll\n        this.isScrolling = scrollWidth > parentWidth;\n        const useParentWidth = this.options.fillParent && !this.isScrolling;\n        // Width of the waveform in pixels\n        const width = (useParentWidth ? parentWidth : scrollWidth) * pixelRatio;\n        // Set the width of the wrapper\n        this.wrapper.style.width = useParentWidth ? '100%' : `${scrollWidth}px`;\n        // Set additional styles\n        this.scrollContainer.style.overflowX = this.isScrolling ? 'auto' : 'hidden';\n        this.scrollContainer.classList.toggle('noScrollbar', !!this.options.hideScrollbar);\n        this.cursor.style.backgroundColor = `${this.options.cursorColor || this.options.progressColor}`;\n        this.cursor.style.width = `${this.options.cursorWidth}px`;\n        // Render the waveform\n        if (this.options.splitChannels) {\n            // Render a waveform for each channel\n            for (let i = 0; i < audioData.numberOfChannels; i++) {\n                const options = Object.assign(Object.assign({}, this.options), this.options.splitChannels[i]);\n                this.renderChannel([audioData.getChannelData(i)], options, width);\n            }\n        }\n        else {\n            // Render a single waveform for the first two channels (left and right)\n            const channels = [audioData.getChannelData(0)];\n            if (audioData.numberOfChannels > 1)\n                channels.push(audioData.getChannelData(1));\n            this.renderChannel(channels, this.options, width);\n        }\n        this.audioData = audioData;\n        this.emit('render');\n    }\n    reRender() {\n        // Return if the waveform has not been rendered yet\n        if (!this.audioData)\n            return;\n        // Remember the current cursor position\n        const oldCursorPosition = this.progressWrapper.clientWidth;\n        // Set the new zoom level and re-render the waveform\n        this.render(this.audioData);\n        // Adjust the scroll position so that the cursor stays in the same place\n        const newCursortPosition = this.progressWrapper.clientWidth;\n        this.scrollContainer.scrollLeft += newCursortPosition - oldCursorPosition;\n    }\n    zoom(minPxPerSec) {\n        this.options.minPxPerSec = minPxPerSec;\n        this.reRender();\n    }\n    scrollIntoView(progress, isPlaying = false) {\n        const { clientWidth, scrollLeft, scrollWidth } = this.scrollContainer;\n        const progressWidth = scrollWidth * progress;\n        const center = clientWidth / 2;\n        const minScroll = isPlaying && this.options.autoCenter && !this.isDragging ? center : clientWidth;\n        if (progressWidth > scrollLeft + minScroll || progressWidth < scrollLeft) {\n            // Scroll to the center\n            if (this.options.autoCenter && !this.isDragging) {\n                // If the cursor is in viewport but not centered, scroll to the center slowly\n                const minDiff = center / 20;\n                if (progressWidth - (scrollLeft + center) >= minDiff && progressWidth < scrollLeft + clientWidth) {\n                    this.scrollContainer.scrollLeft += minDiff;\n                }\n                else {\n                    // Otherwise, scroll to the center immediately\n                    this.scrollContainer.scrollLeft = progressWidth - center;\n                }\n            }\n            else if (this.isDragging) {\n                // Scroll just a little bit to allow for some space between the cursor and the edge\n                const gap = 10;\n                this.scrollContainer.scrollLeft =\n                    progressWidth < scrollLeft ? progressWidth - gap : progressWidth - clientWidth + gap;\n            }\n            else {\n                // Scroll to the beginning\n                this.scrollContainer.scrollLeft = progressWidth;\n            }\n        }\n        // Emit the scroll event\n        {\n            const { scrollLeft } = this.scrollContainer;\n            const startX = scrollLeft / scrollWidth;\n            const endX = (scrollLeft + clientWidth) / scrollWidth;\n            this.emit('scroll', startX, endX);\n        }\n    }\n    renderProgress(progress, isPlaying) {\n        if (isNaN(progress))\n            return;\n        const percents = progress * 100;\n        this.canvasWrapper.style.clipPath = `polygon(${percents}% 0, 100% 0, 100% 100%, ${percents}% 100%)`;\n        this.progressWrapper.style.width = `${percents}%`;\n        this.cursor.style.left = `${percents}%`;\n        this.cursor.style.marginLeft = Math.round(percents) === 100 ? `-${this.options.cursorWidth}px` : '';\n        if (this.isScrolling && this.options.autoScroll) {\n            this.scrollIntoView(progress, isPlaying);\n        }\n    }\n}\nRenderer.MAX_CANVAS_WIDTH = 4000;\nexport default Renderer;\n","import EventEmitter from './event-emitter.js';\nclass Timer extends EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.unsubscribe = () => undefined;\n    }\n    start() {\n        this.unsubscribe = this.on('tick', () => {\n            requestAnimationFrame(() => {\n                this.emit('tick');\n            });\n        });\n        this.emit('tick');\n    }\n    stop() {\n        this.unsubscribe();\n    }\n    destroy() {\n        this.unsubscribe();\n    }\n}\nexport default Timer;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport EventEmitter from './event-emitter.js';\n/**\n * A Web Audio buffer player emulating the behavior of an HTML5 Audio element.\n */\nclass WebAudioPlayer extends EventEmitter {\n    constructor(audioContext = new AudioContext()) {\n        super();\n        this.bufferNode = null;\n        this.autoplay = false;\n        this.playStartTime = 0;\n        this.playedDuration = 0;\n        this._muted = false;\n        this.buffer = null;\n        this.currentSrc = '';\n        this.paused = true;\n        this.crossOrigin = null;\n        this.audioContext = audioContext;\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.connect(this.audioContext.destination);\n    }\n    load() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return;\n        });\n    }\n    get src() {\n        return this.currentSrc;\n    }\n    set src(value) {\n        this.currentSrc = value;\n        fetch(value)\n            .then((response) => response.arrayBuffer())\n            .then((arrayBuffer) => this.audioContext.decodeAudioData(arrayBuffer))\n            .then((audioBuffer) => {\n            this.buffer = audioBuffer;\n            this.emit('loadedmetadata');\n            this.emit('canplay');\n            if (this.autoplay)\n                this.play();\n        });\n    }\n    _play() {\n        var _a;\n        if (!this.paused)\n            return;\n        this.paused = false;\n        (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.bufferNode = this.audioContext.createBufferSource();\n        this.bufferNode.buffer = this.buffer;\n        this.bufferNode.connect(this.gainNode);\n        if (this.playedDuration >= this.duration) {\n            this.playedDuration = 0;\n        }\n        this.bufferNode.start(this.audioContext.currentTime, this.playedDuration);\n        this.playStartTime = this.audioContext.currentTime;\n        this.bufferNode.onended = () => {\n            if (this.currentTime >= this.duration) {\n                this.pause();\n                this.emit('ended');\n            }\n        };\n    }\n    _pause() {\n        var _a;\n        if (this.paused)\n            return;\n        this.paused = true;\n        (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.stop();\n        this.playedDuration += this.audioContext.currentTime - this.playStartTime;\n    }\n    play() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._play();\n            this.emit('play');\n        });\n    }\n    pause() {\n        this._pause();\n        this.emit('pause');\n    }\n    setSinkId(deviceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ac = this.audioContext;\n            return ac.setSinkId(deviceId);\n        });\n    }\n    get playbackRate() {\n        var _a, _b;\n        return (_b = (_a = this.bufferNode) === null || _a === void 0 ? void 0 : _a.playbackRate.value) !== null && _b !== void 0 ? _b : 1;\n    }\n    set playbackRate(value) {\n        if (this.bufferNode) {\n            this.bufferNode.playbackRate.value = value;\n        }\n    }\n    get currentTime() {\n        return this.paused ? this.playedDuration : this.playedDuration + this.audioContext.currentTime - this.playStartTime;\n    }\n    set currentTime(value) {\n        this.emit('seeking');\n        if (this.paused) {\n            this.playedDuration = value;\n        }\n        else {\n            this._pause();\n            this.playedDuration = value;\n            this._play();\n        }\n        this.emit('timeupdate');\n    }\n    get duration() {\n        var _a;\n        return ((_a = this.buffer) === null || _a === void 0 ? void 0 : _a.duration) || 0;\n    }\n    get volume() {\n        return this.gainNode.gain.value;\n    }\n    set volume(value) {\n        this.gainNode.gain.value = value;\n        this.emit('volumechange');\n    }\n    get muted() {\n        return this._muted;\n    }\n    set muted(value) {\n        if (this._muted === value)\n            return;\n        this._muted = value;\n        if (this._muted) {\n            this.gainNode.disconnect();\n        }\n        else {\n            this.gainNode.connect(this.audioContext.destination);\n        }\n    }\n    /** Get the GainNode used to play the audio. Can be used to attach filters. */\n    getGainNode() {\n        return this.gainNode;\n    }\n}\nexport default WebAudioPlayer;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Decoder from './decoder.js';\nimport Fetcher from './fetcher.js';\nimport Player from './player.js';\nimport Renderer from './renderer.js';\nimport Timer from './timer.js';\nimport WebAudioPlayer from './webaudio.js';\nconst defaultOptions = {\n    waveColor: '#999',\n    progressColor: '#555',\n    cursorWidth: 1,\n    minPxPerSec: 0,\n    fillParent: true,\n    interact: true,\n    dragToSeek: false,\n    autoScroll: true,\n    autoCenter: true,\n    sampleRate: 8000,\n};\nclass WaveSurfer extends Player {\n    /** Create a new WaveSurfer instance */\n    static create(options) {\n        return new WaveSurfer(options);\n    }\n    /** Create a new WaveSurfer instance */\n    constructor(options) {\n        const media = options.media ||\n            (options.backend === 'WebAudio' ? new WebAudioPlayer() : undefined);\n        super({\n            media,\n            mediaControls: options.mediaControls,\n            autoplay: options.autoplay,\n            playbackRate: options.audioRate,\n        });\n        this.plugins = [];\n        this.decodedData = null;\n        this.subscriptions = [];\n        this.mediaSubscriptions = [];\n        this.options = Object.assign({}, defaultOptions, options);\n        this.timer = new Timer();\n        const audioElement = media ? undefined : this.getMediaElement();\n        this.renderer = new Renderer(this.options, audioElement);\n        this.initPlayerEvents();\n        this.initRendererEvents();\n        this.initTimerEvents();\n        this.initPlugins();\n        // Load audio if URL is passed or an external media with an src\n        const url = this.options.url || this.getSrc();\n        if (url) {\n            this.load(url, this.options.peaks, this.options.duration);\n        }\n        else if (this.options.peaks && this.options.duration) {\n            // If pre-decoded peaks and duration are provided, render a waveform w/o loading audio\n            this.loadPredecoded();\n        }\n    }\n    initTimerEvents() {\n        // The timer fires every 16ms for a smooth progress animation\n        this.subscriptions.push(this.timer.on('tick', () => {\n            const currentTime = this.getCurrentTime();\n            this.renderer.renderProgress(currentTime / this.getDuration(), true);\n            this.emit('timeupdate', currentTime);\n            this.emit('audioprocess', currentTime);\n        }));\n    }\n    initPlayerEvents() {\n        this.mediaSubscriptions.push(this.onMediaEvent('timeupdate', () => {\n            const currentTime = this.getCurrentTime();\n            this.renderer.renderProgress(currentTime / this.getDuration(), this.isPlaying());\n            this.emit('timeupdate', currentTime);\n        }), this.onMediaEvent('play', () => {\n            this.emit('play');\n            this.timer.start();\n        }), this.onMediaEvent('pause', () => {\n            this.emit('pause');\n            this.timer.stop();\n        }), this.onMediaEvent('emptied', () => {\n            this.timer.stop();\n        }), this.onMediaEvent('ended', () => {\n            this.emit('finish');\n        }), this.onMediaEvent('seeking', () => {\n            this.emit('seeking', this.getCurrentTime());\n        }));\n    }\n    initRendererEvents() {\n        this.subscriptions.push(\n        // Seek on click\n        this.renderer.on('click', (relativeX, relativeY) => {\n            if (this.options.interact) {\n                this.seekTo(relativeX);\n                this.emit('interaction', relativeX * this.getDuration());\n                this.emit('click', relativeX, relativeY);\n            }\n        }), \n        // Double click\n        this.renderer.on('dblclick', (relativeX, relativeY) => {\n            this.emit('dblclick', relativeX, relativeY);\n        }), \n        // Scroll\n        this.renderer.on('scroll', (startX, endX) => {\n            const duration = this.getDuration();\n            this.emit('scroll', startX * duration, endX * duration);\n        }), \n        // Redraw\n        this.renderer.on('render', () => {\n            this.emit('redraw');\n        }));\n        // Drag\n        {\n            let debounce;\n            this.subscriptions.push(this.renderer.on('drag', (relativeX) => {\n                if (!this.options.interact)\n                    return;\n                // Update the visual position\n                this.renderer.renderProgress(relativeX);\n                // Set the audio position with a debounce\n                clearTimeout(debounce);\n                debounce = setTimeout(() => {\n                    this.seekTo(relativeX);\n                }, this.isPlaying() ? 0 : 200);\n                this.emit('interaction', relativeX * this.getDuration());\n                this.emit('drag', relativeX);\n            }));\n        }\n    }\n    initPlugins() {\n        var _a;\n        if (!((_a = this.options.plugins) === null || _a === void 0 ? void 0 : _a.length))\n            return;\n        this.options.plugins.forEach((plugin) => {\n            this.registerPlugin(plugin);\n        });\n    }\n    unsubscribePlayerEvents() {\n        this.mediaSubscriptions.forEach((unsubscribe) => unsubscribe());\n        this.mediaSubscriptions = [];\n    }\n    /** Set new wavesurfer options and re-render it */\n    setOptions(options) {\n        this.options = Object.assign({}, this.options, options);\n        this.renderer.setOptions(this.options);\n        if (options.audioRate) {\n            this.setPlaybackRate(options.audioRate);\n        }\n        if (options.mediaControls != null) {\n            this.getMediaElement().controls = options.mediaControls;\n        }\n    }\n    /** Register a wavesurfer.js plugin */\n    registerPlugin(plugin) {\n        plugin.init(this);\n        this.plugins.push(plugin);\n        // Unregister plugin on destroy\n        this.subscriptions.push(plugin.once('destroy', () => {\n            this.plugins = this.plugins.filter((p) => p !== plugin);\n        }));\n        return plugin;\n    }\n    /** For plugins only: get the waveform wrapper div */\n    getWrapper() {\n        return this.renderer.getWrapper();\n    }\n    /** Get the current scroll position in pixels */\n    getScroll() {\n        return this.renderer.getScroll();\n    }\n    /** Get all registered plugins */\n    getActivePlugins() {\n        return this.plugins;\n    }\n    loadPredecoded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.options.peaks && this.options.duration) {\n                this.decodedData = Decoder.createBuffer(this.options.peaks, this.options.duration);\n                yield Promise.resolve(); // wait for event listeners to subscribe\n                this.renderDecoded();\n            }\n        });\n    }\n    renderDecoded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.decodedData) {\n                this.emit('decode', this.getDuration());\n                this.renderer.render(this.decodedData);\n            }\n        });\n    }\n    loadAudio(url, blob, channelData, duration) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.emit('load', url);\n            if (!this.options.media && this.isPlaying())\n                this.pause();\n            this.decodedData = null;\n            // Fetch the entire audio as a blob if pre-decoded data is not provided\n            if (!blob && !channelData) {\n                const onProgress = (percentage) => this.emit('loading', percentage);\n                blob = yield Fetcher.fetchBlob(url, onProgress, this.options.fetchParams);\n            }\n            // Set the mediaelement source\n            this.setSrc(url, blob);\n            // Wait for the audio duration\n            // It should be a promise to allow event listeners to subscribe to the ready and decode events\n            duration =\n                (yield Promise.resolve(duration || this.getDuration())) ||\n                    (yield new Promise((resolve) => {\n                        this.onceMediaEvent('loadedmetadata', () => resolve(this.getDuration()));\n                    })) ||\n                    (yield Promise.resolve(0));\n            // Decode the audio data or use user-provided peaks\n            if (channelData) {\n                this.decodedData = Decoder.createBuffer(channelData, duration);\n            }\n            else if (blob) {\n                const arrayBuffer = yield blob.arrayBuffer();\n                this.decodedData = yield Decoder.decode(arrayBuffer, this.options.sampleRate);\n            }\n            this.renderDecoded();\n            this.emit('ready', this.getDuration());\n        });\n    }\n    /** Load an audio file by URL, with optional pre-decoded audio data */\n    load(url, channelData, duration) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.loadAudio(url, undefined, channelData, duration);\n        });\n    }\n    /** Load an audio blob */\n    loadBlob(blob, channelData, duration) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.loadAudio('blob', blob, channelData, duration);\n        });\n    }\n    /** Zoom the waveform by a given pixels-per-second factor */\n    zoom(minPxPerSec) {\n        if (!this.decodedData) {\n            throw new Error('No audio loaded');\n        }\n        this.renderer.zoom(minPxPerSec);\n        this.emit('zoom', minPxPerSec);\n    }\n    /** Get the decoded audio data */\n    getDecodedData() {\n        return this.decodedData;\n    }\n    /** Get decoded peaks */\n    exportPeaks({ channels = 2, maxLength = 8000, precision = 10000 } = {}) {\n        if (!this.decodedData) {\n            throw new Error('The audio has not been decoded yet');\n        }\n        const maxChannels = Math.min(channels, this.decodedData.numberOfChannels);\n        const peaks = [];\n        for (let i = 0; i < maxChannels; i++) {\n            const channel = this.decodedData.getChannelData(i);\n            const data = [];\n            const sampleSize = Math.round(channel.length / maxLength);\n            for (let i = 0; i < maxLength; i++) {\n                const sample = channel.slice(i * sampleSize, (i + 1) * sampleSize);\n                const max = Math.max(...sample);\n                data.push(Math.round(max * precision) / precision);\n            }\n            peaks.push(data);\n        }\n        return peaks;\n    }\n    /** Get the duration of the audio in seconds */\n    getDuration() {\n        let duration = super.getDuration() || 0;\n        // Fall back to the decoded data duration if the media duration is incorrect\n        if ((duration === 0 || duration === Infinity) && this.decodedData) {\n            duration = this.decodedData.duration;\n        }\n        return duration;\n    }\n    /** Toggle if the waveform should react to clicks */\n    toggleInteraction(isInteractive) {\n        this.options.interact = isInteractive;\n    }\n    /** Seek to a percentage of audio as [0..1] (0 = beginning, 1 = end) */\n    seekTo(progress) {\n        const time = this.getDuration() * progress;\n        this.setTime(time);\n    }\n    /** Play or pause the audio */\n    playPause() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.isPlaying() ? this.pause() : this.play();\n        });\n    }\n    /** Stop the audio and go to the beginning */\n    stop() {\n        this.pause();\n        this.setTime(0);\n    }\n    /** Skip N or -N seconds from the current position */\n    skip(seconds) {\n        this.setTime(this.getCurrentTime() + seconds);\n    }\n    /** Empty the waveform by loading a tiny silent audio */\n    empty() {\n        this.load('', [[0]], 0.001);\n    }\n    /** Set HTML media element */\n    setMediaElement(element) {\n        this.unsubscribePlayerEvents();\n        super.setMediaElement(element);\n        this.initPlayerEvents();\n    }\n    /** Unmount wavesurfer */\n    destroy() {\n        this.emit('destroy');\n        this.plugins.forEach((plugin) => plugin.destroy());\n        this.subscriptions.forEach((unsubscribe) => unsubscribe());\n        this.unsubscribePlayerEvents();\n        this.timer.destroy();\n        this.renderer.destroy();\n        super.destroy();\n    }\n}\nexport default WaveSurfer;\n","export function audioBufferToWav(audioBuffer: AudioBuffer): Uint8Array {\n\tconst numOfChan = audioBuffer.numberOfChannels;\n\tconst length = audioBuffer.length * numOfChan * 2 + 44;\n\tconst buffer = new ArrayBuffer(length);\n\tconst view = new DataView(buffer);\n\tlet offset = 0;\n\n\t// Write WAV header\n\tconst writeString = function (\n\t\tview: DataView,\n\t\toffset: number,\n\t\tstring: string\n\t): void {\n\t\tfor (let i = 0; i < string.length; i++) {\n\t\t\tview.setUint8(offset + i, string.charCodeAt(i));\n\t\t}\n\t};\n\n\twriteString(view, offset, \"RIFF\");\n\toffset += 4;\n\tview.setUint32(offset, length - 8, true);\n\toffset += 4;\n\twriteString(view, offset, \"WAVE\");\n\toffset += 4;\n\twriteString(view, offset, \"fmt \");\n\toffset += 4;\n\tview.setUint32(offset, 16, true);\n\toffset += 4; // Sub-chunk size, 16 for PCM\n\tview.setUint16(offset, 1, true);\n\toffset += 2; // PCM format\n\tview.setUint16(offset, numOfChan, true);\n\toffset += 2;\n\tview.setUint32(offset, audioBuffer.sampleRate, true);\n\toffset += 4;\n\tview.setUint32(offset, audioBuffer.sampleRate * 2 * numOfChan, true);\n\toffset += 4;\n\tview.setUint16(offset, numOfChan * 2, true);\n\toffset += 2;\n\tview.setUint16(offset, 16, true);\n\toffset += 2;\n\twriteString(view, offset, \"data\");\n\toffset += 4;\n\tview.setUint32(offset, audioBuffer.length * numOfChan * 2, true);\n\toffset += 4;\n\n\t// Write PCM audio data\n\tfor (let i = 0; i < audioBuffer.numberOfChannels; i++) {\n\t\tconst channel = audioBuffer.getChannelData(i);\n\t\tfor (let j = 0; j < channel.length; j++) {\n\t\t\tview.setInt16(offset, channel[j] * 0xffff, true);\n\t\t\toffset += 2;\n\t\t}\n\t}\n\n\treturn new Uint8Array(buffer);\n}\n","import type WaveSurfer from \"wavesurfer.js\";\nimport Regions from \"wavesurfer.js/dist/plugins/regions.js\";\nimport { audioBufferToWav } from \"./audioBufferToWav\";\n\nexport interface LoadedParams {\n\tautoplay?: boolean;\n}\n\nexport function blob_to_data_url(blob: Blob): Promise<string> {\n\treturn new Promise((fulfill, reject) => {\n\t\tlet reader = new FileReader();\n\t\treader.onerror = reject;\n\t\treader.onload = () => fulfill(reader.result as string);\n\t\treader.readAsDataURL(blob);\n\t});\n}\n\nexport const process_audio = async (\n\taudioBuffer: AudioBuffer,\n\tstart?: number,\n\tend?: number\n): Promise<Uint8Array> => {\n\tconst audioContext = new AudioContext();\n\tconst numberOfChannels = audioBuffer.numberOfChannels;\n\tconst sampleRate = audioBuffer.sampleRate;\n\n\tlet trimmedLength = audioBuffer.length;\n\tlet startOffset = 0;\n\n\tif (start && end) {\n\t\tstartOffset = Math.round(start * sampleRate);\n\t\tconst endOffset = Math.round(end * sampleRate);\n\t\ttrimmedLength = endOffset - startOffset;\n\t}\n\n\tconst trimmedAudioBuffer = audioContext.createBuffer(\n\t\tnumberOfChannels,\n\t\ttrimmedLength,\n\t\tsampleRate\n\t);\n\n\tfor (let channel = 0; channel < numberOfChannels; channel++) {\n\t\tconst channelData = audioBuffer.getChannelData(channel);\n\t\tconst trimmedData = trimmedAudioBuffer.getChannelData(channel);\n\t\tfor (let i = 0; i < trimmedLength; i++) {\n\t\t\ttrimmedData[i] = channelData[startOffset + i];\n\t\t}\n\t}\n\n\treturn audioBufferToWav(trimmedAudioBuffer);\n};\n\nexport function loaded(\n\tnode: HTMLAudioElement,\n\t{ autoplay }: LoadedParams = {}\n): void {\n\tasync function handle_playback(): Promise<void> {\n\t\tif (!autoplay) return;\n\t\tnode.pause();\n\t\tawait node.play();\n\t}\n}\n\nexport const skipAudio = (waveform: WaveSurfer, amount: number): void => {\n\tif (!waveform) return;\n\twaveform.skip(amount);\n};\n\nexport const addRegion = (\n\twaveform: WaveSurfer,\n\twaveformRegions: Regions,\n\tstart: number,\n\tend: number\n): void => {\n\twaveformRegions = waveform.registerPlugin(Regions.create());\n\n\twaveformRegions.addRegion({\n\t\tstart: start,\n\t\tend: end,\n\t\tcolor: \"rgba(255, 0, 0, 0.1)\",\n\t\tdrag: true,\n\t\tresize: true\n\t});\n};\n\nexport const getSkipRewindAmount = (\n\taudioDuration: number,\n\tskip_length?: number | null\n): number => {\n\treturn (audioDuration / 100) * (skip_length || 5);\n};\n","<script lang=\"ts\">\n\timport { Play, Pause, Forward, Backward, Undo, Trim } from \"@gradio/icons\";\n\timport { getSkipRewindAmount } from \"../shared/utils\";\n\timport type { I18nFormatter } from \"@gradio/utils\";\n\timport WaveSurfer from \"wavesurfer.js\";\n\timport RegionsPlugin, {\n\t\ttype Region\n\t} from \"wavesurfer.js/dist/plugins/regions.js\";\n\timport type { WaveformOptions } from \"./types\";\n\n\texport let waveform: WaveSurfer;\n\texport let audioDuration: number;\n\texport let i18n: I18nFormatter;\n\texport let playing: boolean;\n\texport let showRedo = false;\n\texport let interactive = false;\n\texport let handle_trim_audio: (start: number, end: number) => void;\n\texport let mode = \"\";\n\texport let container: HTMLDivElement;\n\texport let handle_reset_value: () => void;\n\texport let waveform_settings: WaveformOptions = {};\n\n\texport let trimDuration = 0;\n\n\tlet playbackSpeeds = [0.5, 1, 1.5, 2];\n\tlet playbackSpeed = playbackSpeeds[1];\n\n\tlet trimRegion: RegionsPlugin;\n\tlet activeRegion: Region | null = null;\n\n\tlet leftRegionHandle: HTMLDivElement | null;\n\tlet rightRegionHandle: HTMLDivElement | null;\n\tlet activeHandle = \"\";\n\n\t$: trimRegion = waveform.registerPlugin(RegionsPlugin.create());\n\n\t$: trimRegion?.on(\"region-out\", (region) => {\n\t\tregion.play();\n\t});\n\n\t$: trimRegion?.on(\"region-updated\", (region) => {\n\t\ttrimDuration = region.end - region.start;\n\t});\n\n\t$: trimRegion?.on(\"region-clicked\", (region, e) => {\n\t\te.stopPropagation(); // prevent triggering a click on the waveform\n\t\tactiveRegion = region;\n\t\tregion.play();\n\t});\n\n\tconst addTrimRegion = (): void => {\n\t\tactiveRegion = trimRegion.addRegion({\n\t\t\tstart: audioDuration / 4,\n\t\t\tend: audioDuration / 2,\n\t\t\tcolor: \"hsla(15, 85%, 40%, 0.4)\",\n\t\t\tdrag: true,\n\t\t\tresize: true\n\t\t});\n\n\t\ttrimDuration = activeRegion.end - activeRegion.start;\n\t};\n\n\t$: if (activeRegion) {\n\t\tconst shadowRoot = container.children[0]!.shadowRoot!;\n\n\t\trightRegionHandle = shadowRoot.querySelector('[data-resize=\"right\"]');\n\t\tleftRegionHandle = shadowRoot.querySelector('[data-resize=\"left\"]');\n\n\t\tif (leftRegionHandle && rightRegionHandle) {\n\t\t\tleftRegionHandle.setAttribute(\"role\", \"button\");\n\t\t\trightRegionHandle.setAttribute(\"role\", \"button\");\n\t\t\tleftRegionHandle?.setAttribute(\"aria-label\", \"Drag to adjust start time\");\n\t\t\trightRegionHandle?.setAttribute(\"aria-label\", \"Drag to adjust end time\");\n\t\t\tleftRegionHandle?.setAttribute(\"tabindex\", \"0\");\n\t\t\trightRegionHandle?.setAttribute(\"tabindex\", \"0\");\n\n\t\t\tleftRegionHandle.addEventListener(\"focus\", () => {\n\t\t\t\tif (trimRegion) activeHandle = \"left\";\n\t\t\t});\n\n\t\t\trightRegionHandle.addEventListener(\"focus\", () => {\n\t\t\t\tif (trimRegion) activeHandle = \"right\";\n\t\t\t});\n\t\t}\n\t}\n\n\tconst trimAudio = (): void => {\n\t\tif (waveform && trimRegion) {\n\t\t\tif (activeRegion) {\n\t\t\t\tconst start = activeRegion.start;\n\t\t\t\tconst end = activeRegion.end;\n\t\t\t\thandle_trim_audio(start, end);\n\t\t\t\tmode = \"\";\n\t\t\t\tactiveRegion = null;\n\t\t\t}\n\t\t}\n\t};\n\n\tconst clearRegions = (): void => {\n\t\ttrimRegion?.getRegions().forEach((region) => {\n\t\t\tregion.remove();\n\t\t});\n\t\ttrimRegion?.clearRegions();\n\t};\n\n\tconst toggleTrimmingMode = (): void => {\n\t\tclearRegions();\n\t\tif (mode === \"edit\") {\n\t\t\tmode = \"\";\n\t\t} else {\n\t\t\tmode = \"edit\";\n\t\t\taddTrimRegion();\n\t\t}\n\t};\n\n\tconst adjustRegionHandles = (handle: string, key: string): void => {\n\t\tlet newStart;\n\t\tlet newEnd;\n\n\t\tif (!activeRegion) return;\n\t\tif (handle === \"left\") {\n\t\t\tif (key === \"ArrowLeft\") {\n\t\t\t\tnewStart = activeRegion.start - 0.05;\n\t\t\t\tnewEnd = activeRegion.end;\n\t\t\t} else {\n\t\t\t\tnewStart = activeRegion.start + 0.05;\n\t\t\t\tnewEnd = activeRegion.end;\n\t\t\t}\n\t\t} else {\n\t\t\tif (key === \"ArrowLeft\") {\n\t\t\t\tnewStart = activeRegion.start;\n\t\t\t\tnewEnd = activeRegion.end - 0.05;\n\t\t\t} else {\n\t\t\t\tnewStart = activeRegion.start;\n\t\t\t\tnewEnd = activeRegion.end + 0.05;\n\t\t\t}\n\t\t}\n\n\t\tactiveRegion.setOptions({\n\t\t\tstart: newStart,\n\t\t\tend: newEnd\n\t\t});\n\n\t\ttrimDuration = activeRegion.end - activeRegion.start;\n\t};\n\n\t$: trimRegion &&\n\t\twindow.addEventListener(\"keydown\", (e) => {\n\t\t\tif (e.key === \"ArrowLeft\") {\n\t\t\t\tadjustRegionHandles(activeHandle, \"ArrowLeft\");\n\t\t\t} else if (e.key === \"ArrowRight\") {\n\t\t\t\tadjustRegionHandles(activeHandle, \"ArrowRight\");\n\t\t\t}\n\t\t});\n</script>\n\n<div class=\"controls\" data-testid=\"waveform-controls\">\n\t<button\n\t\tclass=\"playback icon\"\n\t\taria-label={`Adjust playback speed to ${\n\t\t\tplaybackSpeeds[\n\t\t\t\t(playbackSpeeds.indexOf(playbackSpeed) + 1) % playbackSpeeds.length\n\t\t\t]\n\t\t}x`}\n\t\ton:click={() => {\n\t\t\tplaybackSpeed =\n\t\t\t\tplaybackSpeeds[\n\t\t\t\t\t(playbackSpeeds.indexOf(playbackSpeed) + 1) % playbackSpeeds.length\n\t\t\t\t];\n\n\t\t\twaveform.setPlaybackRate(playbackSpeed);\n\t\t}}\n\t>\n\t\t<span>{playbackSpeed}x</span>\n\t</button>\n\n\t<div class=\"play-pause-wrapper\">\n\t\t<button\n\t\t\tclass=\"rewind icon\"\n\t\t\taria-label={`Skip backwards by ${getSkipRewindAmount(\n\t\t\t\taudioDuration,\n\t\t\t\twaveform_settings.skip_length\n\t\t\t)} seconds`}\n\t\t\ton:click={() =>\n\t\t\t\twaveform.skip(\n\t\t\t\t\tgetSkipRewindAmount(audioDuration, waveform_settings.skip_length) * -1\n\t\t\t\t)}\n\t\t>\n\t\t\t<Backward />\n\t\t</button>\n\t\t<button\n\t\t\tclass=\"play-pause-button icon\"\n\t\t\ton:click={() => waveform.playPause()}\n\t\t\taria-label={playing ? i18n(\"common.play\") : i18n(\"common.pause\")}\n\t\t>\n\t\t\t{#if playing}\n\t\t\t\t<Pause />\n\t\t\t{:else}\n\t\t\t\t<Play />\n\t\t\t{/if}\n\t\t</button>\n\t\t<button\n\t\t\tclass=\"skip icon\"\n\t\t\taria-label=\"Skip forward by {getSkipRewindAmount(\n\t\t\t\taudioDuration,\n\t\t\t\twaveform_settings.skip_length\n\t\t\t)} seconds\"\n\t\t\ton:click={() =>\n\t\t\t\twaveform.skip(\n\t\t\t\t\tgetSkipRewindAmount(audioDuration, waveform_settings.skip_length)\n\t\t\t\t)}\n\t\t>\n\t\t\t<Forward />\n\t\t</button>\n\t</div>\n\n\t<div class=\"settings-wrapper\">\n\t\t{#if showRedo && mode === \"\"}\n\t\t\t<button\n\t\t\t\tclass=\"action icon\"\n\t\t\t\taria-label=\"Reset audio\"\n\t\t\t\ton:click={() => {\n\t\t\t\t\thandle_reset_value();\n\t\t\t\t\tclearRegions();\n\t\t\t\t\tmode = \"\";\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Undo />\n\t\t\t</button>\n\t\t{/if}\n\n\t\t{#if interactive}\n\t\t\t{#if mode === \"\"}\n\t\t\t\t<button\n\t\t\t\t\tclass=\"action icon\"\n\t\t\t\t\taria-label=\"Trim audio to selection\"\n\t\t\t\t\ton:click={toggleTrimmingMode}\n\t\t\t\t>\n\t\t\t\t\t<Trim />\n\t\t\t\t</button>\n\t\t\t{:else}\n\t\t\t\t<button class=\"text-button\" on:click={trimAudio}>Trim</button>\n\t\t\t\t<button class=\"text-button\" on:click={toggleTrimmingMode}>Cancel</button\n\t\t\t\t>\n\t\t\t{/if}\n\t\t{/if}\n\t</div>\n</div>\n\n<style>\n\t.settings-wrapper {\n\t\tdisplay: flex;\n\t\tjustify-self: self-end;\n\t}\n\t.text-button {\n\t\tborder: 1px solid var(--neutral-400);\n\t\tborder-radius: var(--radius-sm);\n\t\tfont-weight: 300;\n\t\tfont-size: var(--size-3);\n\t\ttext-align: center;\n\t\tcolor: var(--neutral-400);\n\t\theight: var(--size-5);\n\t\tfont-weight: bold;\n\t\tpadding: 0 5px;\n\t\tmargin-left: 5px;\n\t}\n\n\t.text-button:hover,\n\t.text-button:focus {\n\t\tcolor: var(--color-accent);\n\t\tborder-color: var(--color-accent);\n\t}\n\n\t.controls {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr 1fr;\n\t\tmargin-top: 5px;\n\t\toverflow: hidden;\n\t\talign-items: center;\n\t}\n\n\t@media (max-width: 320px) {\n\t\t.controls {\n\t\t\tdisplay: flex;\n\t\t\tflex-wrap: wrap;\n\t\t}\n\n\t\t.controls * {\n\t\t\tmargin: var(--spacing-sm);\n\t\t}\n\n\t\t.controls .text-button {\n\t\t\tmargin-left: 0;\n\t\t}\n\t}\n\t.action {\n\t\twidth: var(--size-5);\n\t\twidth: var(--size-5);\n\t\tcolor: var(--neutral-400);\n\t\tmargin-left: var(--spacing-md);\n\t}\n\t.icon:hover,\n\t.icon:focus {\n\t\tcolor: var(--color-accent);\n\t}\n\t.play-pause-wrapper {\n\t\tdisplay: flex;\n\t\tjustify-self: center;\n\t}\n\t.playback {\n\t\tborder: 1px solid var(--neutral-400);\n\t\tborder-radius: var(--radius-sm);\n\t\twidth: 5.5ch;\n\t\tfont-weight: 300;\n\t\tfont-size: var(--size-3);\n\t\ttext-align: center;\n\t\tcolor: var(--neutral-400);\n\t\theight: var(--size-5);\n\t\tfont-weight: bold;\n\t}\n\n\t.playback:hover {\n\t\tcolor: var(--color-accent);\n\t\tborder-color: var(--color-accent);\n\t}\n\n\t.rewind,\n\t.skip {\n\t\tmargin: 0 10px;\n\t\tcolor: var(--neutral-400);\n\t}\n\n\t.play-pause-button {\n\t\twidth: var(--size-8);\n\t\twidth: var(--size-8);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tcolor: var(--neutral-400);\n\t\tfill: var(--neutral-400);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport { Music } from \"@gradio/icons\";\n\timport type { I18nFormatter } from \"@gradio/utils\";\n\timport WaveSurfer from \"wavesurfer.js\";\n\timport { skipAudio, process_audio } from \"../shared/utils\";\n\timport WaveformControls from \"../shared/WaveformControls.svelte\";\n\timport { Empty } from \"@gradio/atoms\";\n\timport { resolve_wasm_src } from \"@gradio/wasm/svelte\";\n\timport type { FileData } from \"@gradio/client\";\n\n\texport let value: null | FileData = null;\n\texport let label: string;\n\texport let i18n: I18nFormatter;\n\texport let dispatch: (event: any, detail?: any) => void;\n\texport let dispatch_blob: (\n\t\tblobs: Uint8Array[] | Blob[],\n\t\tevent: \"stream\" | \"change\" | \"stop_recording\"\n\t) => Promise<void> = () => Promise.resolve();\n\texport let interactive = false;\n\texport let waveform_settings = {};\n\texport let mode = \"\";\n\texport let handle_reset_value: () => void = () => {};\n\n\tlet container: HTMLDivElement;\n\tlet waveform: WaveSurfer;\n\tlet playing = false;\n\n\tlet timeRef: HTMLTimeElement;\n\tlet durationRef: HTMLTimeElement;\n\tlet audioDuration: number;\n\n\tlet trimDuration = 0;\n\n\tconst formatTime = (seconds: number): string => {\n\t\tconst minutes = Math.floor(seconds / 60);\n\t\tconst secondsRemainder = Math.round(seconds) % 60;\n\t\tconst paddedSeconds = `0${secondsRemainder}`.slice(-2);\n\t\treturn `${minutes}:${paddedSeconds}`;\n\t};\n\n\tconst create_waveform = (): void => {\n\t\twaveform = WaveSurfer.create({\n\t\t\tcontainer: container,\n\t\t\turl: value?.url,\n\t\t\t...waveform_settings\n\t\t});\n\t};\n\n\t$: if (container !== undefined) {\n\t\tif (waveform !== undefined) waveform.destroy();\n\t\tcontainer.innerHTML = \"\";\n\t\tcreate_waveform();\n\t\tplaying = false;\n\t}\n\n\t$: waveform?.on(\"decode\", (duration: any) => {\n\t\taudioDuration = duration;\n\t\tdurationRef && (durationRef.textContent = formatTime(duration));\n\t});\n\n\t$: waveform?.on(\n\t\t\"timeupdate\",\n\t\t(currentTime: any) =>\n\t\t\ttimeRef && (timeRef.textContent = formatTime(currentTime))\n\t);\n\n\t$: waveform?.on(\"finish\", () => {\n\t\tplaying = false;\n\t\tdispatch(\"stop\");\n\t\tdispatch(\"end\");\n\t});\n\t$: waveform?.on(\"pause\", () => {\n\t\tplaying = false;\n\t\tdispatch(\"pause\");\n\t});\n\t$: waveform?.on(\"play\", () => {\n\t\tplaying = true;\n\t\tdispatch(\"play\");\n\t});\n\n\tconst handle_trim_audio = async (\n\t\tstart: number,\n\t\tend: number\n\t): Promise<void> => {\n\t\tmode = \"\";\n\t\tconst decodedData = waveform.getDecodedData();\n\t\tif (decodedData)\n\t\t\tawait process_audio(decodedData, start, end).then(\n\t\t\t\tasync (trimmedBlob: Uint8Array) => {\n\t\t\t\t\tawait dispatch_blob([trimmedBlob], \"change\");\n\t\t\t\t\twaveform.destroy();\n\t\t\t\t\tcreate_waveform();\n\t\t\t\t}\n\t\t\t);\n\t\tdispatch(\"edit\");\n\t};\n\n\tasync function load_audio(data: string): Promise<void> {\n\t\tawait resolve_wasm_src(data).then((resolved_src) => {\n\t\t\tif (!resolved_src) return;\n\t\t\treturn waveform?.load(resolved_src);\n\t\t});\n\t}\n\n\t$: value?.url && load_audio(value.url);\n\n\tonMount(() => {\n\t\twindow.addEventListener(\"keydown\", (e) => {\n\t\t\tif (e.key === \"ArrowRight\" && mode !== \"edit\") {\n\t\t\t\tskipAudio(waveform, 0.1);\n\t\t\t} else if (e.key === \"ArrowLeft\" && mode !== \"edit\") {\n\t\t\t\tskipAudio(waveform, -0.1);\n\t\t\t}\n\t\t});\n\t});\n</script>\n\n{#if value === null}\n\t<Empty size=\"small\">\n\t\t<Music />\n\t</Empty>\n{:else}\n\t<div\n\t\tclass=\"component-wrapper\"\n\t\tdata-testid={label ? \"waveform-\" + label : \"unlabelled-audio\"}\n\t>\n\t\t<div class=\"waveform-container\">\n\t\t\t<div id=\"waveform\" bind:this={container} />\n\t\t</div>\n\n\t\t<div class=\"timestamps\">\n\t\t\t<time bind:this={timeRef} id=\"time\">0:00</time>\n\t\t\t<div>\n\t\t\t\t{#if mode === \"edit\" && trimDuration > 0}\n\t\t\t\t\t<time id=\"trim-duration\">{formatTime(trimDuration)}</time>\n\t\t\t\t{/if}\n\t\t\t\t<time bind:this={durationRef} id=\"duration\">0:00</time>\n\t\t\t</div>\n\t\t</div>\n\n\t\t{#if waveform}\n\t\t\t<WaveformControls\n\t\t\t\t{container}\n\t\t\t\t{waveform}\n\t\t\t\t{playing}\n\t\t\t\t{audioDuration}\n\t\t\t\t{i18n}\n\t\t\t\t{interactive}\n\t\t\t\t{handle_trim_audio}\n\t\t\t\tbind:mode\n\t\t\t\tbind:trimDuration\n\t\t\t\tshowRedo={interactive}\n\t\t\t\t{handle_reset_value}\n\t\t\t\t{waveform_settings}\n\t\t\t/>\n\t\t{/if}\n\t</div>\n{/if}\n\n<style>\n\t.component-wrapper {\n\t\tpadding: var(--size-3);\n\t}\n\n\t.timestamps {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\twidth: 100%;\n\t\tpadding: var(--size-1) 0;\n\t}\n\n\t#time {\n\t\tcolor: var(--neutral-400);\n\t}\n\n\t#duration {\n\t\tcolor: var(--neutral-400);\n\t}\n\n\t#trim-duration {\n\t\tcolor: var(--color-accent);\n\t\tmargin-right: var(--spacing-sm);\n\t}\n\t.waveform-container {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: var(--size-full);\n\t}\n\n\t#waveform {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tposition: relative;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { uploadToHuggingFace } from \"@gradio/utils\";\n\timport { Empty } from \"@gradio/atoms\";\n\timport { ShareButton, IconButton, BlockLabel } from \"@gradio/atoms\";\n\timport { Download, Music } from \"@gradio/icons\";\n\timport type { I18nFormatter } from \"@gradio/utils\";\n\timport AudioPlayer from \"../player/AudioPlayer.svelte\";\n\timport { createEventDispatcher } from \"svelte\";\n\timport type { FileData } from \"@gradio/client\";\n\n\texport let value: null | FileData = null;\n\texport let label: string;\n\texport let show_label = true;\n\texport let show_download_button = true;\n\texport let show_share_button = false;\n\texport let i18n: I18nFormatter;\n\texport let waveform_settings = {};\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: FileData;\n\t\tplay: undefined;\n\t\tpause: undefined;\n\t\tend: undefined;\n\t\tstop: undefined;\n\t}>();\n\n\t$: value && dispatch(\"change\", value);\n</script>\n\n<BlockLabel\n\t{show_label}\n\tIcon={Music}\n\tfloat={false}\n\tlabel={label || i18n(\"audio.audio\")}\n/>\n\n{#if value !== null}\n\t<div class=\"icon-buttons\">\n\t\t{#if show_download_button}\n\t\t\t<a\n\t\t\t\thref={value.url}\n\t\t\t\ttarget={window.__is_colab__ ? \"_blank\" : null}\n\t\t\t\tdownload={value.url}\n\t\t\t>\n\t\t\t\t<IconButton Icon={Download} label={i18n(\"common.download\")} />\n\t\t\t</a>\n\t\t{/if}\n\t\t{#if show_share_button}\n\t\t\t<ShareButton\n\t\t\t\t{i18n}\n\t\t\t\ton:error\n\t\t\t\ton:share\n\t\t\t\tformatter={async (value) => {\n\t\t\t\t\tif (!value) return \"\";\n\t\t\t\t\tlet url = await uploadToHuggingFace(value.url, \"url\");\n\t\t\t\t\treturn `<audio controls src=\"${url}\"></audio>`;\n\t\t\t\t}}\n\t\t\t\t{value}\n\t\t\t/>\n\t\t{/if}\n\t</div>\n\n\t<AudioPlayer {value} {label} {i18n} {dispatch} {waveform_settings} />\n{:else}\n\t<Empty size=\"small\">\n\t\t<Music />\n\t</Empty>\n{/if}\n\n<style>\n\t.icon-buttons {\n\t\tdisplay: flex;\n\t\tposition: absolute;\n\t\ttop: 6px;\n\t\tright: 6px;\n\t\tgap: var(--size-1);\n\t}\n</style>\n","function e(e,t,i,s){return new(i||(i=Promise))((function(r,n){function o(e){try{d(s.next(e))}catch(e){n(e)}}function a(e){try{d(s.throw(e))}catch(e){n(e)}}function d(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}d((s=s.apply(e,t||[])).next())}))}\"function\"==typeof SuppressedError&&SuppressedError;class t{constructor(){this.listeners={},this.on=this.addEventListener,this.un=this.removeEventListener}addEventListener(e,t,i){if(this.listeners[e]||(this.listeners[e]=new Set),this.listeners[e].add(t),null==i?void 0:i.once){const i=()=>{this.removeEventListener(e,i),this.removeEventListener(e,t)};return this.addEventListener(e,i),i}return()=>this.removeEventListener(e,t)}removeEventListener(e,t){var i;null===(i=this.listeners[e])||void 0===i||i.delete(t)}once(e,t){return this.on(e,t,{once:!0})}unAll(){this.listeners={}}emit(e,...t){this.listeners[e]&&this.listeners[e].forEach((e=>e(...t)))}}class i extends t{constructor(e){super(),this.subscriptions=[],this.options=e}onInit(){}init(e){this.wavesurfer=e,this.onInit()}destroy(){this.emit(\"destroy\"),this.subscriptions.forEach((e=>e()))}}const s=[\"audio/webm\",\"audio/wav\",\"audio/mpeg\",\"audio/mp4\",\"audio/mp3\"];class r extends i{constructor(e){var t;super(Object.assign(Object.assign({},e),{audioBitsPerSecond:null!==(t=e.audioBitsPerSecond)&&void 0!==t?t:128e3})),this.stream=null,this.mediaRecorder=null}static create(e){return new r(e||{})}renderMicStream(e){const t=new AudioContext,i=t.createMediaStreamSource(e),s=t.createAnalyser();i.connect(s);const r=s.frequencyBinCount,n=new Float32Array(r),o=r/t.sampleRate;let a;const d=()=>{s.getFloatTimeDomainData(n),this.wavesurfer&&(this.wavesurfer.options.cursorWidth=0,this.wavesurfer.options.interact=!1,this.wavesurfer.load(\"\",[n],o)),a=requestAnimationFrame(d)};return d(),()=>{cancelAnimationFrame(a),null==i||i.disconnect(),null==t||t.close()}}startMic(t){return e(this,void 0,void 0,(function*(){let e;try{e=yield navigator.mediaDevices.getUserMedia({audio:!(null==t?void 0:t.deviceId)||{deviceId:t.deviceId}})}catch(e){throw new Error(\"Error accessing the microphone: \"+e.message)}const i=this.renderMicStream(e);return this.subscriptions.push(this.once(\"destroy\",i)),this.stream=e,e}))}stopMic(){this.stream&&(this.stream.getTracks().forEach((e=>e.stop())),this.stream=null,this.mediaRecorder=null)}startRecording(t){return e(this,void 0,void 0,(function*(){const e=this.stream||(yield this.startMic(t)),i=this.mediaRecorder||new MediaRecorder(e,{mimeType:this.options.mimeType||s.find((e=>MediaRecorder.isTypeSupported(e))),audioBitsPerSecond:this.options.audioBitsPerSecond});this.mediaRecorder=i,this.stopRecording();const r=[];i.ondataavailable=e=>{e.data.size>0&&r.push(e.data)},i.onstop=()=>{var e;const t=new Blob(r,{type:i.mimeType});this.emit(\"record-end\",t),!1!==this.options.renderRecordedAudio&&(null===(e=this.wavesurfer)||void 0===e||e.load(URL.createObjectURL(t)))},i.start(),this.emit(\"record-start\")}))}isRecording(){var e;return\"recording\"===(null===(e=this.mediaRecorder)||void 0===e?void 0:e.state)}isPaused(){var e;return\"paused\"===(null===(e=this.mediaRecorder)||void 0===e?void 0:e.state)}stopRecording(){var e;this.isRecording()&&(null===(e=this.mediaRecorder)||void 0===e||e.stop())}pauseRecording(){var e;this.isRecording()&&(null===(e=this.mediaRecorder)||void 0===e||e.pause(),this.emit(\"record-pause\"))}resumeRecording(){var e;this.isPaused()&&(null===(e=this.mediaRecorder)||void 0===e||e.resume(),this.emit(\"record-resume\"))}static getAvailableAudioDevices(){return e(this,void 0,void 0,(function*(){return navigator.mediaDevices.enumerateDevices().then((e=>e.filter((e=>\"audioinput\"===e.kind))))}))}destroy(){super.destroy(),this.stopRecording(),this.stopMic()}}export{r as default};\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport { Pause } from \"@gradio/icons\";\n\timport type { I18nFormatter } from \"@gradio/utils\";\n\timport RecordPlugin from \"wavesurfer.js/dist/plugins/record.js\";\n\n\texport let record: RecordPlugin;\n\texport let i18n: I18nFormatter;\n\texport let dispatch: (event: string, detail?: any) => void;\n\n\tlet micDevices: MediaDeviceInfo[] = [];\n\tlet recordButton: HTMLButtonElement;\n\tlet pauseButton: HTMLButtonElement;\n\tlet resumeButton: HTMLButtonElement;\n\tlet stopButton: HTMLButtonElement;\n\tlet stopButtonPaused: HTMLButtonElement;\n\n\t$: try {\n\t\tlet tempDevices: MediaDeviceInfo[] = [];\n\t\tRecordPlugin.getAvailableAudioDevices().then(\n\t\t\t(devices: MediaDeviceInfo[]) => {\n\t\t\t\tmicDevices = devices;\n\t\t\t\tdevices.forEach((device) => {\n\t\t\t\t\tif (device.deviceId) {\n\t\t\t\t\t\ttempDevices.push(device);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tmicDevices = tempDevices;\n\t\t\t}\n\t\t);\n\t} catch (err) {\n\t\tif (err instanceof DOMException && err.name == \"NotAllowedError\") {\n\t\t\tdispatch(\"error\", i18n(\"audio.allow_recording_access\"));\n\t\t}\n\t\tthrow err;\n\t}\n\tonMount(() => {\n\t\trecordButton = document.getElementById(\"record\") as HTMLButtonElement;\n\t\tpauseButton = document.getElementById(\"pause\") as HTMLButtonElement;\n\t\tresumeButton = document.getElementById(\"resume\") as HTMLButtonElement;\n\t\tstopButton = document.getElementById(\"stop\") as HTMLButtonElement;\n\t\tstopButtonPaused = document.getElementById(\n\t\t\t\"stop-paused\"\n\t\t) as HTMLButtonElement;\n\t});\n\n\t$: record.on(\"record-start\", () => {\n\t\trecord.startMic();\n\n\t\trecordButton.style.display = \"none\";\n\t\tstopButton.style.display = \"flex\";\n\t\tpauseButton.style.display = \"block\";\n\t});\n\n\t$: record.on(\"record-end\", () => {\n\t\tif (record.isPaused()) {\n\t\t\trecord.resumeRecording();\n\t\t\trecord.stopRecording();\n\t\t}\n\t\trecord.stopMic();\n\n\t\trecordButton.style.display = \"flex\";\n\t\tstopButton.style.display = \"none\";\n\t\tpauseButton.style.display = \"none\";\n\t\trecordButton.disabled = false;\n\t});\n\n\t$: record.on(\"record-pause\", () => {\n\t\tpauseButton.style.display = \"none\";\n\t\tresumeButton.style.display = \"block\";\n\t\tstopButton.style.display = \"none\";\n\t\tstopButtonPaused.style.display = \"flex\";\n\t});\n\n\t$: record.on(\"record-resume\", () => {\n\t\tpauseButton.style.display = \"block\";\n\t\tresumeButton.style.display = \"none\";\n\t\trecordButton.style.display = \"none\";\n\t\tstopButton.style.display = \"flex\";\n\t\tstopButtonPaused.style.display = \"none\";\n\t});\n</script>\n\n<div class=\"controls\">\n\t<div class=\"wrapper\">\n\t\t<button\n\t\t\tid=\"record\"\n\t\t\tclass=\"record-button\"\n\t\t\ton:click={() => record.startRecording()}>{i18n(\"audio.record\")}</button\n\t\t>\n\n\t\t<button\n\t\t\tid=\"stop\"\n\t\t\tclass=\"stop-button {record.isPaused() ? 'stop-button-paused' : ''}\"\n\t\t\ton:click={() => {\n\t\t\t\tif (record.isPaused()) {\n\t\t\t\t\trecord.resumeRecording();\n\t\t\t\t\trecord.stopRecording();\n\t\t\t\t}\n\n\t\t\t\trecord.stopRecording();\n\t\t\t}}>{i18n(\"audio.stop\")}</button\n\t\t>\n\n\t\t<button\n\t\t\tid=\"stop-paused\"\n\t\t\tclass=\"stop-button-paused\"\n\t\t\ton:click={() => {\n\t\t\t\tif (record.isPaused()) {\n\t\t\t\t\trecord.resumeRecording();\n\t\t\t\t\trecord.stopRecording();\n\t\t\t\t}\n\n\t\t\t\trecord.stopRecording();\n\t\t\t}}>{i18n(\"audio.stop\")}</button\n\t\t>\n\n\t\t<button\n\t\t\tid=\"pause\"\n\t\t\tclass=\"pause-button\"\n\t\t\ton:click={() => record.pauseRecording()}><Pause /></button\n\t\t>\n\t\t<button\n\t\t\tid=\"resume\"\n\t\t\tclass=\"resume-button\"\n\t\t\ton:click={() => record.resumeRecording()}>{i18n(\"audio.resume\")}</button\n\t\t>\n\t</div>\n\n\t<select\n\t\tid=\"mic-select\"\n\t\taria-label=\"Select input device\"\n\t\tdisabled={micDevices.length === 0}\n\t>\n\t\t{#if micDevices.length === 0}\n\t\t\t<option value=\"\">{i18n(\"audio.no_microphone\")}</option>\n\t\t{:else}\n\t\t\t{#each micDevices as micDevice}\n\t\t\t\t<option value={micDevice.deviceId}>{micDevice.label}</option>\n\t\t\t{/each}\n\t\t{/if}\n\t</select>\n</div>\n\n<style>\n\t#mic-select {\n\t\theight: var(--size-8);\n\t\tbackground: var(--block-background-fill);\n\t\tpadding: 0px var(--spacing-xxl);\n\t\tborder-radius: var(--radius-full);\n\t\tfont-size: var(--text-md);\n\t\tborder: 1px solid var(--neutral-400);\n\t}\n\t.controls {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tflex-wrap: wrap;\n\t\toverflow: hidden;\n\t}\n\n\t.controls select {\n\t\ttext-overflow: ellipsis;\n\t\tmargin: var(--size-2) 0;\n\t}\n\n\t@media (max-width: 375px) {\n\t\t.controls select {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\n\t.wrapper {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t#record {\n\t\tmargin-right: var(--spacing-md);\n\t}\n\n\t.stop-button-paused {\n\t\tdisplay: none;\n\t\theight: var(--size-8);\n\t\twidth: var(--size-20);\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder-radius: var(--radius-3xl);\n\t\talign-items: center;\n\t\tborder: 1px solid var(--neutral-400);\n\t\tmargin-right: 5px;\n\t}\n\n\t.stop-button-paused::before {\n\t\tcontent: \"\";\n\t\theight: var(--size-4);\n\t\twidth: var(--size-4);\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--primary-600);\n\t\tmargin: 0 var(--spacing-xl);\n\t}\n\t.stop-button::before {\n\t\tcontent: \"\";\n\t\theight: var(--size-4);\n\t\twidth: var(--size-4);\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--primary-600);\n\t\tmargin: 0 var(--spacing-xl);\n\t\tanimation: scaling 1800ms infinite;\n\t}\n\n\t.stop-button {\n\t\tdisplay: none;\n\t\theight: var(--size-8);\n\t\twidth: var(--size-20);\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder-radius: var(--radius-3xl);\n\t\talign-items: center;\n\t\tborder: 1px solid var(--primary-600);\n\t\tmargin-right: 5px;\n\t}\n\n\t.record-button::before {\n\t\tcontent: \"\";\n\t\theight: var(--size-4);\n\t\twidth: var(--size-4);\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--primary-600);\n\t\tmargin: 0 var(--spacing-xl);\n\t}\n\n\t.record-button {\n\t\theight: var(--size-8);\n\t\twidth: var(--size-24);\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder-radius: var(--radius-3xl);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tborder: 1px solid var(--neutral-400);\n\t}\n\n\t.stop-button:disabled {\n\t\tcursor: not-allowed;\n\t}\n\n\t.record-button:disabled {\n\t\tcursor: not-allowed;\n\t\topacity: 0.5;\n\t}\n\n\t@keyframes scaling {\n\t\t0% {\n\t\t\tbackground-color: var(--primary-600);\n\t\t\tscale: 1;\n\t\t}\n\t\t50% {\n\t\t\tbackground-color: var(--primary-600);\n\t\t\tscale: 1.2;\n\t\t}\n\t\t100% {\n\t\t\tbackground-color: var(--primary-600);\n\t\t\tscale: 1;\n\t\t}\n\t}\n\n\t.pause-button {\n\t\tdisplay: none;\n\t\theight: var(--size-8);\n\t\twidth: var(--size-20);\n\t\tborder: 1px solid var(--neutral-400);\n\t\tborder-radius: var(--radius-3xl);\n\t\tpadding: var(--spacing-md);\n\t}\n\n\t.resume-button {\n\t\tdisplay: none;\n\t\theight: var(--size-8);\n\t\twidth: var(--size-20);\n\t\tborder: 1px solid var(--neutral-400);\n\t\tborder-radius: var(--radius-3xl);\n\t\tpadding: var(--spacing-xl);\n\t\tline-height: 1px;\n\t\tfont-size: var(--text-md);\n\t}\n\n\t:global(::part(region)) {\n\t\tborder-radius: var(--radius-md);\n\t\theight: 98% !important;\n\t\tborder: 1px solid var(--color-accent);\n\t\tborder-width: 1px 3px;\n\t}\n\n\t:global(::part(region-handle)) {\n\t\twidth: 5px !important;\n\t\tborder: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport type { I18nFormatter } from \"@gradio/utils\";\n\timport WaveSurfer from \"wavesurfer.js\";\n\timport { skipAudio, process_audio } from \"../shared/utils\";\n\timport Record from \"wavesurfer.js/dist/plugins/record.js\";\n\timport WaveformControls from \"../shared/WaveformControls.svelte\";\n\timport WaveformRecordControls from \"../shared/WaveformRecordControls.svelte\";\n\timport RecordPlugin from \"wavesurfer.js/dist/plugins/record.js\";\n\n\texport let mode: string;\n\texport let i18n: I18nFormatter;\n\texport let dispatch: (event: any, detail?: any) => void;\n\texport let dispatch_blob: (\n\t\tblobs: Uint8Array[] | Blob[],\n\t\tevent: \"stream\" | \"change\" | \"stop_recording\"\n\t) => Promise<void> | undefined;\n\texport let waveform_settings = {};\n\texport let handle_reset_value: () => void;\n\n\tlet micWaveform: WaveSurfer;\n\tlet recordingWaveform: WaveSurfer;\n\tlet playing = false;\n\tlet container: HTMLDivElement;\n\n\tlet record: Record;\n\tlet recordedAudio: string | null = null;\n\n\t// timestamps\n\tlet timeRef: HTMLTimeElement;\n\tlet durationRef: HTMLTimeElement;\n\tlet audioDuration: number;\n\tlet seconds = 0;\n\tlet interval: NodeJS.Timeout;\n\tlet timing = false;\n\t// trimming\n\tlet trimDuration = 0;\n\n\tconst start_interval = (): void => {\n\t\tclearInterval(interval);\n\t\tinterval = setInterval(() => {\n\t\t\tseconds++;\n\t\t}, 1000);\n\t};\n\n\tconst format_time = (seconds: number): string => {\n\t\tconst minutes = Math.floor(seconds / 60);\n\t\tconst secondsRemainder = Math.round(seconds) % 60;\n\t\tconst paddedSeconds = `0${secondsRemainder}`.slice(-2);\n\t\treturn `${minutes}:${paddedSeconds}`;\n\t};\n\n\t$: record?.on(\"record-start\", () => {\n\t\tstart_interval();\n\t\ttiming = true;\n\t\tdispatch(\"start_recording\");\n\t\tlet waveformCanvas = document.getElementById(\"microphone\");\n\t\tif (waveformCanvas) waveformCanvas.style.display = \"block\";\n\t});\n\n\t$: record?.on(\"record-end\", async (blob) => {\n\t\tseconds = 0;\n\t\ttiming = false;\n\t\tclearInterval(interval);\n\t\tdispatch(\"stop_recording\");\n\t\tconst array_buffer = await blob.arrayBuffer();\n\t\tconst context = new AudioContext();\n\t\tconst audio_buffer = await context.decodeAudioData(array_buffer);\n\n\t\tif (audio_buffer)\n\t\t\tawait process_audio(audio_buffer).then(\n\t\t\t\tasync (trimmedBlob: Uint8Array) => {\n\t\t\t\t\tawait dispatch_blob([trimmedBlob], \"change\");\n\t\t\t\t}\n\t\t\t);\n\t});\n\n\t$: record?.on(\"record-pause\", () => {\n\t\tdispatch(\"pause_recording\");\n\t\tclearInterval(interval);\n\t});\n\n\t$: record?.on(\"record-resume\", () => {\n\t\tstart_interval();\n\t});\n\n\t$: recordingWaveform?.on(\"decode\", (duration: any) => {\n\t\taudioDuration = duration;\n\t\tdurationRef && (durationRef.textContent = format_time(duration));\n\t});\n\n\t$: recordingWaveform?.on(\n\t\t\"timeupdate\",\n\t\t(currentTime: any) =>\n\t\t\ttimeRef && (timeRef.textContent = format_time(currentTime))\n\t);\n\n\t$: recordingWaveform?.on(\"pause\", () => {\n\t\tdispatch(\"pause\");\n\t\tplaying = false;\n\t});\n\n\t$: recordingWaveform?.on(\"play\", () => {\n\t\tdispatch(\"play\");\n\t\tplaying = true;\n\t});\n\n\t$: recordingWaveform?.on(\"finish\", () => {\n\t\tdispatch(\"stop\");\n\t\tdispatch(\"end\");\n\t\tplaying = false;\n\t});\n\n\tconst create_mic_waveform = (): void => {\n\t\tconst recorder = document.getElementById(\"microphone\");\n\t\tif (recorder) recorder.innerHTML = \"\";\n\t\tif (micWaveform !== undefined) micWaveform.destroy();\n\t\tif (!recorder) return;\n\t\tmicWaveform = WaveSurfer.create({\n\t\t\t...waveform_settings,\n\t\t\tcontainer: recorder\n\t\t});\n\n\t\trecord = micWaveform.registerPlugin(RecordPlugin.create());\n\t\trecord.startMic();\n\t};\n\n\tconst create_recording_waveform = (): void => {\n\t\tlet recording = document.getElementById(\"recording\");\n\t\tif (!recordedAudio || !recording) return;\n\t\trecordingWaveform = WaveSurfer.create({\n\t\t\tcontainer: recording,\n\t\t\turl: recordedAudio,\n\t\t\t...waveform_settings\n\t\t});\n\t};\n\n\t$: record?.on(\"record-end\", (blob) => {\n\t\trecordedAudio = URL.createObjectURL(blob);\n\n\t\tconst microphone = document.getElementById(\"microphone\");\n\t\tconst recording = document.getElementById(\"recording\");\n\n\t\tif (microphone) microphone.style.display = \"none\";\n\t\tif (recording && recordedAudio) {\n\t\t\trecording.innerHTML = \"\";\n\t\t\tcreate_recording_waveform();\n\t\t}\n\t});\n\n\tconst handle_trim_audio = async (\n\t\tstart: number,\n\t\tend: number\n\t): Promise<void> => {\n\t\tmode = \"edit\";\n\t\tconst decodedData = recordingWaveform.getDecodedData();\n\t\tif (decodedData)\n\t\t\tawait process_audio(decodedData, start, end).then(\n\t\t\t\tasync (trimmedAudio: Uint8Array) => {\n\t\t\t\t\tawait dispatch_blob([trimmedAudio], \"change\");\n\t\t\t\t\trecordingWaveform.destroy();\n\t\t\t\t\tcreate_recording_waveform();\n\t\t\t\t}\n\t\t\t);\n\t\tdispatch(\"edit\");\n\t};\n\n\tonMount(() => {\n\t\tcreate_mic_waveform();\n\n\t\twindow.addEventListener(\"keydown\", (e) => {\n\t\t\tif (e.key === \"ArrowRight\") {\n\t\t\t\tskipAudio(recordingWaveform, 0.1);\n\t\t\t} else if (e.key === \"ArrowLeft\") {\n\t\t\t\tskipAudio(recordingWaveform, -0.1);\n\t\t\t}\n\t\t});\n\t});\n</script>\n\n<div class=\"component-wrapper\">\n\t<div id=\"microphone\" data-testid=\"microphone-waveform\" />\n\t<div id=\"recording\" bind:this={container} />\n\n\t{#if timing || recordedAudio}\n\t\t<div id=\"timestamps\">\n\t\t\t<time bind:this={timeRef} id=\"time\">0:00</time>\n\t\t\t<div>\n\t\t\t\t{#if mode === \"edit\" && trimDuration > 0}\n\t\t\t\t\t<time id=\"trim-duration\">{format_time(trimDuration)}</time>\n\t\t\t\t{/if}\n\t\t\t\t{#if timing}\n\t\t\t\t\t<time id=\"duration\">{format_time(seconds)}</time>\n\t\t\t\t{:else}\n\t\t\t\t\t<time bind:this={durationRef} id=\"duration\">0:00</time>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n\n\t{#if micWaveform && !recordedAudio}\n\t\t<WaveformRecordControls bind:record {i18n} {dispatch} />\n\t{/if}\n\n\t{#if recordingWaveform && recordedAudio}\n\t\t<WaveformControls\n\t\t\tbind:waveform={recordingWaveform}\n\t\t\t{container}\n\t\t\t{playing}\n\t\t\t{audioDuration}\n\t\t\t{i18n}\n\t\t\tinteractive={true}\n\t\t\t{handle_trim_audio}\n\t\t\tbind:trimDuration\n\t\t\tbind:mode\n\t\t\tshowRedo\n\t\t\t{handle_reset_value}\n\t\t\t{waveform_settings}\n\t\t/>\n\t{/if}\n</div>\n\n<style>\n\t#microphone {\n\t\twidth: 100%;\n\t\tdisplay: none;\n\t}\n\n\t.component-wrapper {\n\t\tpadding: var(--size-3);\n\t}\n\n\t#timestamps {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\twidth: 100%;\n\t\tpadding: var(--size-1) 0;\n\t\tmargin: var(--spacing-md) 0;\n\t}\n\n\t#time {\n\t\tcolor: var(--neutral-400);\n\t}\n\n\t#duration {\n\t\tcolor: var(--neutral-400);\n\t}\n\n\t#trim-duration {\n\t\tcolor: var(--color-accent);\n\t\tmargin-right: var(--spacing-sm);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport type { I18nFormatter } from \"@gradio/utils\";\n\timport WaveSurfer from \"wavesurfer.js\";\n\timport RecordPlugin from \"wavesurfer.js/dist/plugins/record.js\";\n\n\texport let recording = false;\n\texport let paused_recording = false;\n\texport let stop: () => void;\n\texport let record: () => void;\n\texport let i18n: I18nFormatter;\n\texport let waveform_settings = {};\n\n\tlet micWaveform: WaveSurfer;\n\tlet waveformRecord: RecordPlugin;\n\n\tonMount(() => {\n\t\tcreate_mic_waveform();\n\t});\n\n\tconst create_mic_waveform = (): void => {\n\t\tif (micWaveform !== undefined) micWaveform.destroy();\n\n\t\tmicWaveform = WaveSurfer.create({\n\t\t\t...waveform_settings,\n\t\t\theight: 100,\n\t\t\tcontainer: \"#microphone\"\n\t\t});\n\n\t\twaveformRecord = micWaveform.registerPlugin(RecordPlugin.create());\n\t};\n</script>\n\n<div class=\"mic-wrap\">\n\t<div id=\"microphone\" style:display={recording ? \"block\" : \"none\"} />\n\t{#if recording}\n\t\t<button\n\t\t\tclass={paused_recording ? \"stop-button-paused\" : \"stop-button\"}\n\t\t\ton:click={() => {\n\t\t\t\twaveformRecord.stopMic();\n\t\t\t\tstop();\n\t\t\t}}\n\t\t>\n\t\t\t<span class=\"record-icon\">\n\t\t\t\t<span class=\"pinger\" />\n\t\t\t\t<span class=\"dot\" />\n\t\t\t</span>\n\t\t\t{paused_recording ? i18n(\"audio.pause\") : i18n(\"audio.stop\")}\n\t\t</button>\n\t{:else}\n\t\t<button\n\t\t\tclass=\"record-button\"\n\t\t\ton:click={() => {\n\t\t\t\twaveformRecord.startMic();\n\t\t\t\trecord();\n\t\t\t}}\n\t\t>\n\t\t\t<span class=\"record-icon\">\n\t\t\t\t<span class=\"dot\" />\n\t\t\t</span>\n\t\t\t{i18n(\"audio.record\")}\n\t\t</button>\n\t{/if}\n</div>\n\n<style>\n\t.mic-wrap {\n\t\tdisplay: block;\n\t\talign-items: center;\n\t\tmargin: var(--spacing-xl);\n\t}\n\n\t.stop-button-paused {\n\t\tdisplay: none;\n\t\theight: var(--size-8);\n\t\twidth: var(--size-20);\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder-radius: var(--radius-3xl);\n\t\talign-items: center;\n\t\tborder: 1px solid var(--neutral-400);\n\t\tmargin-right: 5px;\n\t}\n\n\t.stop-button-paused::before {\n\t\tcontent: \"\";\n\t\theight: var(--size-4);\n\t\twidth: var(--size-4);\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--primary-600);\n\t\tmargin: 0 var(--spacing-xl);\n\t}\n\n\t.stop-button::before {\n\t\tcontent: \"\";\n\t\theight: var(--size-4);\n\t\twidth: var(--size-4);\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--primary-600);\n\t\tmargin: 0 var(--spacing-xl);\n\t\tanimation: scaling 1800ms infinite;\n\t}\n\n\t.stop-button {\n\t\theight: var(--size-8);\n\t\twidth: var(--size-20);\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder-radius: var(--radius-3xl);\n\t\talign-items: center;\n\t\tborder: 1px solid var(--primary-600);\n\t\tmargin-right: 5px;\n\t\tdisplay: flex;\n\t}\n\n\t.record-button::before {\n\t\tcontent: \"\";\n\t\theight: var(--size-4);\n\t\twidth: var(--size-4);\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--primary-600);\n\t\tmargin: 0 var(--spacing-xl);\n\t}\n\n\t.record-button {\n\t\theight: var(--size-8);\n\t\twidth: var(--size-24);\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder-radius: var(--radius-3xl);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tborder: 1px solid var(--neutral-400);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onDestroy, createEventDispatcher } from \"svelte\";\n\timport { Upload, ModifyUpload } from \"@gradio/upload\";\n\timport { upload, prepare_files, type FileData } from \"@gradio/client\";\n\timport { BlockLabel } from \"@gradio/atoms\";\n\timport { Music } from \"@gradio/icons\";\n\timport AudioPlayer from \"../player/AudioPlayer.svelte\";\n\timport { _ } from \"svelte-i18n\";\n\n\timport type { IBlobEvent, IMediaRecorder } from \"extendable-media-recorder\";\n\timport type { I18nFormatter } from \"js/app/src/gradio_helper\";\n\timport AudioRecorder from \"../recorder/AudioRecorder.svelte\";\n\timport StreamAudio from \"../streaming/StreamAudio.svelte\";\n\timport { SelectSource } from \"@gradio/atoms\";\n\n\texport let value: null | FileData = null;\n\texport let label: string;\n\texport let root: string;\n\texport let show_label = true;\n\texport let sources:\n\t\t| [\"microphone\"]\n\t\t| [\"upload\"]\n\t\t| [\"microphone\", \"upload\"]\n\t\t| [\"upload\", \"microphone\"] = [\"microphone\", \"upload\"];\n\texport let pending = false;\n\texport let streaming = false;\n\texport let i18n: I18nFormatter;\n\texport let waveform_settings = {};\n\texport let dragging: boolean;\n\texport let active_source: \"microphone\" | \"upload\";\n\texport let handle_reset_value: () => void = () => {};\n\n\t$: dispatch(\"drag\", dragging);\n\n\t// TODO: make use of this\n\t// export let type: \"normal\" | \"numpy\" = \"normal\";\n\tlet recording = false;\n\tlet recorder: IMediaRecorder;\n\tlet mode = \"\";\n\tlet header: Uint8Array | undefined = undefined;\n\tlet pending_stream: Uint8Array[] = [];\n\tlet submit_pending_stream_on_pending_end = false;\n\tlet inited = false;\n\n\tconst STREAM_TIMESLICE = 500;\n\tconst NUM_HEADER_BYTES = 44;\n\tlet audio_chunks: Blob[] = [];\n\tlet module_promises: [\n\t\tPromise<typeof import(\"extendable-media-recorder\")>,\n\t\tPromise<typeof import(\"extendable-media-recorder-wav-encoder\")>\n\t];\n\n\tfunction get_modules(): void {\n\t\tmodule_promises = [\n\t\t\timport(\"extendable-media-recorder\"),\n\t\t\timport(\"extendable-media-recorder-wav-encoder\")\n\t\t];\n\t}\n\n\tif (streaming) {\n\t\tget_modules();\n\t}\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: FileData | null;\n\t\tstream: FileData;\n\t\tedit: never;\n\t\tplay: never;\n\t\tpause: never;\n\t\tstop: never;\n\t\tend: never;\n\t\tdrag: boolean;\n\t\terror: string;\n\t\tupload: FileData;\n\t\tclear: undefined;\n\t\tstart_recording: undefined;\n\t\tpause_recording: undefined;\n\t\tstop_recording: undefined;\n\t}>();\n\n\tconst dispatch_blob = async (\n\t\tblobs: Uint8Array[] | Blob[],\n\t\tevent: \"stream\" | \"change\" | \"stop_recording\"\n\t): Promise<void> => {\n\t\tlet _audio_blob = new File(blobs, \"audio.wav\");\n\t\tconst val = await prepare_files([_audio_blob], event === \"stream\");\n\t\tvalue = ((await upload(val, root))?.filter(Boolean) as FileData[])[0];\n\n\t\tdispatch(event, value);\n\t};\n\n\tonDestroy(() => {\n\t\tif (streaming && recorder && recorder.state !== \"inactive\") {\n\t\t\trecorder.stop();\n\t\t}\n\t});\n\n\tasync function prepare_audio(): Promise<void> {\n\t\tlet stream: MediaStream | null;\n\n\t\ttry {\n\t\t\tstream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\t\t} catch (err) {\n\t\t\tif (!navigator.mediaDevices) {\n\t\t\t\tdispatch(\"error\", i18n(\"audio.no_device_support\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (err instanceof DOMException && err.name == \"NotAllowedError\") {\n\t\t\t\tdispatch(\"error\", i18n(\"audio.allow_recording_access\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\t\tif (stream == null) return;\n\t\tif (streaming) {\n\t\t\tconst [{ MediaRecorder, register }, { connect }] = await Promise.all(\n\t\t\t\tmodule_promises\n\t\t\t);\n\t\t\tawait register(await connect());\n\t\t\trecorder = new MediaRecorder(stream, { mimeType: \"audio/wav\" });\n\t\t\trecorder.addEventListener(\"dataavailable\", handle_chunk);\n\t\t} else {\n\t\t\trecorder = new MediaRecorder(stream);\n\t\t\trecorder.addEventListener(\"dataavailable\", (event) => {\n\t\t\t\taudio_chunks.push(event.data);\n\t\t\t});\n\t\t\trecorder.addEventListener(\"stop\", async () => {\n\t\t\t\trecording = false;\n\t\t\t\tawait dispatch_blob(audio_chunks, \"change\");\n\t\t\t\tawait dispatch_blob(audio_chunks, \"stop_recording\");\n\t\t\t\taudio_chunks = [];\n\t\t\t});\n\t\t}\n\t\tinited = true;\n\t}\n\n\tasync function handle_chunk(event: IBlobEvent): Promise<void> {\n\t\tlet buffer = await event.data.arrayBuffer();\n\t\tlet payload = new Uint8Array(buffer);\n\t\tif (!header) {\n\t\t\theader = new Uint8Array(buffer.slice(0, NUM_HEADER_BYTES));\n\t\t\tpayload = new Uint8Array(buffer.slice(NUM_HEADER_BYTES));\n\t\t}\n\t\tif (pending) {\n\t\t\tpending_stream.push(payload);\n\t\t} else {\n\t\t\tlet blobParts = [header].concat(pending_stream, [payload]);\n\t\t\tdispatch_blob(blobParts, \"stream\");\n\t\t\tpending_stream = [];\n\t\t}\n\t}\n\n\t$: if (submit_pending_stream_on_pending_end && pending === false) {\n\t\tsubmit_pending_stream_on_pending_end = false;\n\t\tif (header && pending_stream) {\n\t\t\tlet blobParts: Uint8Array[] = [header].concat(pending_stream);\n\t\t\tpending_stream = [];\n\t\t\tdispatch_blob(blobParts, \"stream\");\n\t\t}\n\t}\n\n\tasync function record(): Promise<void> {\n\t\trecording = true;\n\t\tdispatch(\"start_recording\");\n\t\tif (!inited) await prepare_audio();\n\t\theader = undefined;\n\t\tif (streaming) {\n\t\t\trecorder.start(STREAM_TIMESLICE);\n\t\t}\n\t}\n\n\tfunction clear(): void {\n\t\tdispatch(\"change\", null);\n\t\tdispatch(\"clear\");\n\t\tmode = \"\";\n\t\tvalue = null;\n\t}\n\n\tfunction handle_load({ detail }: { detail: FileData }): void {\n\t\tvalue = detail;\n\t\tdispatch(\"change\", detail);\n\t\tdispatch(\"upload\", detail);\n\t}\n\n\tfunction stop(): void {\n\t\trecording = false;\n\n\t\tif (streaming) {\n\t\t\tdispatch(\"stop_recording\");\n\t\t\trecorder.stop();\n\t\t\tif (pending) {\n\t\t\t\tsubmit_pending_stream_on_pending_end = true;\n\t\t\t}\n\t\t\tdispatch_blob(audio_chunks, \"change\");\n\t\t\tdispatch(\"clear\");\n\t\t\tmode = \"\";\n\t\t}\n\t}\n</script>\n\n<BlockLabel\n\t{show_label}\n\tIcon={Music}\n\tfloat={active_source === \"upload\" && value === null}\n\tlabel={label || i18n(\"audio.audio\")}\n/>\n{#if value === null || streaming}\n\t{#if active_source === \"microphone\"}\n\t\t<ModifyUpload {i18n} on:clear={clear} absolute={true} />\n\t\t{#if streaming}\n\t\t\t<StreamAudio {record} {recording} {stop} {i18n} {waveform_settings} />\n\t\t{:else}\n\t\t\t<AudioRecorder\n\t\t\t\tbind:mode\n\t\t\t\t{i18n}\n\t\t\t\t{dispatch}\n\t\t\t\t{dispatch_blob}\n\t\t\t\t{waveform_settings}\n\t\t\t\t{handle_reset_value}\n\t\t\t/>\n\t\t{/if}\n\t{:else if active_source === \"upload\"}\n\t\t<!-- explicitly listed out audio mimetypes due to iOS bug not recognizing audio/* -->\n\t\t<Upload\n\t\t\tfiletype=\"audio/aac,audio/midi,audio/mpeg,audio/ogg,audio/wav,audio/x-wav,audio/opus,audio/webm,audio/flac,audio/vnd.rn-realaudio,audio/x-ms-wma,audio/x-aiff,audio/amr,audio/*\"\n\t\t\ton:load={handle_load}\n\t\t\tbind:dragging\n\t\t\ton:error={({ detail }) => dispatch(\"error\", detail)}\n\t\t\t{root}\n\t\t\tinclude_sources={sources.length > 1}\n\t\t>\n\t\t\t<slot />\n\t\t</Upload>\n\t{/if}\n{:else}\n\t<ModifyUpload\n\t\t{i18n}\n\t\ton:clear={clear}\n\t\ton:edit={() => (mode = \"edit\")}\n\t\tabsolute={true}\n\t/>\n\n\t<AudioPlayer\n\t\tbind:mode\n\t\t{value}\n\t\t{label}\n\t\t{i18n}\n\t\t{dispatch}\n\t\t{dispatch_blob}\n\t\t{waveform_settings}\n\t\t{handle_reset_value}\n\t\tinteractive\n\t/>\n{/if}\n\n<SelectSource {sources} bind:active_source handle_clear={clear} />\n","<svelte:options accessors={true} />\n\n<script lang=\"ts\">\n\timport type { Gradio, ShareData } from \"@gradio/utils\";\n\n\timport type { FileData } from \"@gradio/client\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\n\timport StaticAudio from \"./static/StaticAudio.svelte\";\n\timport InteractiveAudio from \"./interactive/InteractiveAudio.svelte\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport { Block, UploadText } from \"@gradio/atoms\";\n\timport type { WaveformOptions } from \"./shared/types\";\n\timport { normalise_file } from \"@gradio/client\";\n\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let interactive: boolean;\n\texport let value: null | FileData = null;\n\texport let sources:\n\t\t| [\"microphone\"]\n\t\t| [\"upload\"]\n\t\t| [\"microphone\", \"upload\"]\n\t\t| [\"upload\", \"microphone\"];\n\texport let label: string;\n\texport let root: string;\n\texport let show_label: boolean;\n\texport let proxy_url: null | string;\n\texport let container = true;\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let loading_status: LoadingStatus;\n\texport let autoplay = false;\n\texport let show_download_button = true;\n\texport let show_share_button = false;\n\texport let waveform_options: WaveformOptions = {};\n\texport let pending: boolean;\n\texport let streaming: boolean;\n\texport let gradio: Gradio<{\n\t\tchange: typeof value;\n\t\tstream: typeof value;\n\t\terror: string;\n\t\twarning: string;\n\t\tedit: never;\n\t\tplay: never;\n\t\tpause: never;\n\t\tstop: never;\n\t\tend: never;\n\t\tstart_recording: never;\n\t\tpause_recording: never;\n\t\tstop_recording: never;\n\t\tupload: never;\n\t\tclear: never;\n\t\tshare: ShareData;\n\t}>;\n\n\tlet old_value: null | FileData | string = null;\n\tlet _value: null | FileData;\n\t$: _value = normalise_file(value, root, proxy_url);\n\n\tlet active_source: \"microphone\" | \"upload\";\n\n\tlet initial_value: null | FileData = value;\n\n\t$: if (value && initial_value === null) {\n\t\tinitial_value = value;\n\t}\n\n\tconst handle_reset_value = (): void => {\n\t\tif (initial_value === null || value === initial_value) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalue = initial_value;\n\t};\n\n\t$: {\n\t\tif (JSON.stringify(value) !== JSON.stringify(old_value)) {\n\t\t\told_value = value;\n\t\t\tgradio.dispatch(\"change\");\n\t\t}\n\t}\n\n\tlet dragging: boolean;\n\n\t$: if (sources) {\n\t\tactive_source = sources[0];\n\t}\n\n\tconst waveform_settings = {\n\t\theight: 50,\n\t\twaveColor: waveform_options.waveform_color || \"#9ca3af\",\n\t\tprogressColor: waveform_options.waveform_progress_color || \"#f97316\",\n\t\tbarWidth: 2,\n\t\tbarGap: 3,\n\t\tbarHeight: 4,\n\t\tcursorWidth: 2,\n\t\tcursorColor: \"#ddd5e9\",\n\t\tautoplay: autoplay,\n\t\tbarRadius: 10,\n\t\tdragToSeek: true,\n\t\tmediaControls: waveform_options.show_controls\n\t};\n\n\tfunction handle_error({ detail }: CustomEvent<string>): void {\n\t\tconst [level, status] = detail.includes(\"Invalid file type\")\n\t\t\t? [\"warning\", \"complete\"]\n\t\t\t: [\"error\", \"error\"];\n\t\tloading_status = loading_status || {};\n\t\tloading_status.status = status as LoadingStatus[\"status\"];\n\t\tloading_status.message = detail;\n\t\tgradio.dispatch(level as \"error\" | \"warning\", detail);\n\t}\n</script>\n\n{#if !interactive}\n\t<Block\n\t\tvariant={\"solid\"}\n\t\tborder_mode={dragging ? \"focus\" : \"base\"}\n\t\tpadding={false}\n\t\t{elem_id}\n\t\t{elem_classes}\n\t\t{visible}\n\t\t{container}\n\t\t{scale}\n\t\t{min_width}\n\t>\n\t\t<StatusTracker\n\t\t\tautoscroll={gradio.autoscroll}\n\t\t\ti18n={gradio.i18n}\n\t\t\t{...loading_status}\n\t\t/>\n\n\t\t<StaticAudio\n\t\t\ti18n={gradio.i18n}\n\t\t\t{show_label}\n\t\t\t{show_download_button}\n\t\t\t{show_share_button}\n\t\t\tvalue={_value}\n\t\t\t{label}\n\t\t\t{waveform_settings}\n\t\t\ton:share={(e) => gradio.dispatch(\"share\", e.detail)}\n\t\t\ton:error={(e) => gradio.dispatch(\"error\", e.detail)}\n\t\t/>\n\t</Block>\n{:else}\n\t<Block\n\t\tvariant={value === null && active_source === \"upload\" ? \"dashed\" : \"solid\"}\n\t\tborder_mode={dragging ? \"focus\" : \"base\"}\n\t\tpadding={false}\n\t\t{elem_id}\n\t\t{elem_classes}\n\t\t{visible}\n\t\t{container}\n\t\t{scale}\n\t\t{min_width}\n\t>\n\t\t<StatusTracker\n\t\t\tautoscroll={gradio.autoscroll}\n\t\t\ti18n={gradio.i18n}\n\t\t\t{...loading_status}\n\t\t/>\n\t\t<InteractiveAudio\n\t\t\t{label}\n\t\t\t{show_label}\n\t\t\tvalue={_value}\n\t\t\ton:change={({ detail }) => (value = detail)}\n\t\t\ton:stream={({ detail }) => {\n\t\t\t\tvalue = detail;\n\t\t\t\tgradio.dispatch(\"stream\", value);\n\t\t\t}}\n\t\t\ton:drag={({ detail }) => (dragging = detail)}\n\t\t\t{root}\n\t\t\t{sources}\n\t\t\t{active_source}\n\t\t\t{pending}\n\t\t\t{streaming}\n\t\t\t{handle_reset_value}\n\t\t\tbind:dragging\n\t\t\ton:edit={() => gradio.dispatch(\"edit\")}\n\t\t\ton:play={() => gradio.dispatch(\"play\")}\n\t\t\ton:pause={() => gradio.dispatch(\"pause\")}\n\t\t\ton:stop={() => gradio.dispatch(\"stop\")}\n\t\t\ton:end={() => gradio.dispatch(\"end\")}\n\t\t\ton:start_recording={() => gradio.dispatch(\"start_recording\")}\n\t\t\ton:pause_recording={() => gradio.dispatch(\"pause_recording\")}\n\t\t\ton:stop_recording={() => gradio.dispatch(\"stop_recording\")}\n\t\t\ton:upload={() => gradio.dispatch(\"upload\")}\n\t\t\ton:clear={() => gradio.dispatch(\"clear\")}\n\t\t\ton:error={handle_error}\n\t\t\ti18n={gradio.i18n}\n\t\t\t{waveform_settings}\n\t\t>\n\t\t\t<UploadText i18n={gradio.i18n} type=\"audio\" />\n\t\t</InteractiveAudio>\n\t</Block>\n{/if}\n"],"file":"assets/index-1049858e.js"}
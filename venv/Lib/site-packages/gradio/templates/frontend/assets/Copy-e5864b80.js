/* home/runner/work/gradio/gradio/js/icons/src/Check.svelte generated by Svelte v4.2.2 */
const {
	SvelteComponent: SvelteComponent$1,
	append: append$1,
	attr: attr$1,
	detach: detach$1,
	init: init$1,
	insert: insert$1,
	noop: noop$1,
	safe_not_equal: safe_not_equal$1,
	svg_element: svg_element$1
} = window.__gradio__svelte__internal;
function create_fragment$1(ctx) {
	let svg;
	let polyline;

	return {
		c() {
			svg = svg_element$1("svg");
			polyline = svg_element$1("polyline");
			attr$1(polyline, "points", "20 6 9 17 4 12");
			attr$1(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr$1(svg, "width", "15px");
			attr$1(svg, "height", "14px");
			attr$1(svg, "viewBox", "2 0 20 20");
			attr$1(svg, "fill", "none");
			attr$1(svg, "stroke", "currentColor");
			attr$1(svg, "stroke-width", "3");
			attr$1(svg, "stroke-linecap", "round");
			attr$1(svg, "stroke-linejoin", "round");
		},
		m(target, anchor) {
			insert$1(target, svg, anchor);
			append$1(svg, polyline);
		},
		p: noop$1,
		i: noop$1,
		o: noop$1,
		d(detaching) {
			if (detaching) {
				detach$1(svg);
			}
		}
	};
}

class Check extends SvelteComponent$1 {
	constructor(options) {
		super();
		init$1(this, options, null, create_fragment$1, safe_not_equal$1, {});
	}
}

/* home/runner/work/gradio/gradio/js/icons/src/Copy.svelte generated by Svelte v4.2.2 */
const {
	SvelteComponent,
	append,
	attr,
	detach,
	init,
	insert,
	noop,
	safe_not_equal,
	svg_element
} = window.__gradio__svelte__internal;
function create_fragment(ctx) {
	let svg;
	let path0;
	let path1;

	return {
		c() {
			svg = svg_element("svg");
			path0 = svg_element("path");
			path1 = svg_element("path");
			attr(path0, "fill", "currentColor");
			attr(path0, "d", "M28 10v18H10V10h18m0-2H10a2 2 0 0 0-2 2v18a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2Z");
			attr(path1, "fill", "currentColor");
			attr(path1, "d", "M4 18H2V4a2 2 0 0 1 2-2h14v2H4Z");
			attr(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr(svg, "width", "15px");
			attr(svg, "height", "14px");
			attr(svg, "viewBox", "0 0 33 33");
			attr(svg, "color", "currentColor");
		},
		m(target, anchor) {
			insert(target, svg, anchor);
			append(svg, path0);
			append(svg, path1);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(svg);
			}
		}
	};
}

class Copy extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export { Copy as C, Check as a };
//# sourceMappingURL=Copy-e5864b80.js.map
